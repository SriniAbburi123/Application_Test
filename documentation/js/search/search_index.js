var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddSkillsEmployeeDto.html",[0,0.027,1,2.388]],["body/classes/AddSkillsEmployeeDto.html",[0,0.046,1,4.018,2,1.93,3,0.318,4,0.287,5,0.257,6,4.408,7,0.482,8,1.132,9,5.373,10,2.928,11,0.545,12,0.019,13,3.579,14,2.352,15,3.296,16,2.238,17,5.128,18,1.132,19,5.128,20,0.792,21,3.061,22,4.363,23,5.128,24,5.128,25,0.464,26,2.907,27,3.079,28,2.031,29,2.907,30,2.907,31,4.363,32,3.485,33,2.385,34,0.318,35,2.352,36,3.296,37,5.128,38,5.128,39,0.015,40,0.015]],["title/modules/AppModule.html",[41,1.149,42,2.593]],["body/modules/AppModule.html",[0,0.027,3,0.226,4,0.204,5,0.183,11,0.318,12,0.019,18,0.661,20,0.952,25,0.548,34,0.226,39,0.012,40,0.012,41,1.55,42,5.147,43,1.522,44,1.444,45,1.908,46,1.908,47,1.697,48,2.622,49,1.908,50,3.136,51,3.136,52,4.291,53,4.291,54,3.984,55,4.291,56,4.291,57,2.622,58,1.605,59,1.908,60,2.798,61,2.034,62,1.076,63,3.648,64,5.012,65,6.163,66,3.648,67,0.932,68,0.42,69,0.847,70,3.648,71,1.026,72,1.697,73,2.205,74,5.012,75,0.889,76,3.648,77,3.136,78,5.298,79,2.546,80,2.991,81,2.345,82,1.697,83,5.012,84,3.648,85,3.136,86,3.648,87,2.991,88,3.648,89,3.222,90,3.648,91,3.648,92,3.648,93,3.648,94,2.546,95,3.648,96,3.648,97,3.844,98,3.136,99,3.136,100,1.343,101,3.648,102,3.136,103,1.732,104,3.648,105,3.648,106,3.648,107,3.648,108,3.648,109,3.648,110,5.012,111,3.648,112,5.012,113,3.648,114,3.648,115,3.648,116,3.648,117,3.648,118,3.648,119,3.648,120,5.012,121,3.648,122,3.648,123,3.648,124,3.648,125,3.648,126,3.648,127,3.648,128,3.648,129,3.648,130,3.648,131,3.648,132,3.648,133,2.345,134,3.136,135,3.648,136,3.648,137,3.648,138,1.373,139,3.648,140,2.546,141,2.798,142,3.648,143,4.391,144,4.921,145,1.797,146,3.648]],["title/controllers/AuthController.html",[147,1.83,148,2.593]],["body/controllers/AuthController.html",[0,0.034,3,0.286,4,0.259,5,0.232,7,0.434,11,0.403,12,0.019,14,2.421,18,1.165,25,0.503,34,0.286,39,0.014,40,0.014,62,1.728,67,1.644,68,0.74,69,1.493,71,1.808,75,1.125,87,2.758,100,1.724,147,2.276,148,4.089,149,2.149,150,3.972,151,3.225,152,3.972,153,5.858,154,2.421,155,5.858,156,5.036,157,4.62,158,4.62,159,4.62,160,5.815,161,4.62,162,5.858,163,4.62,164,2.758,165,4.62,166,4.49,167,4.62,168,4.62,169,4.089,170,1.927,171,4.62,172,3.544,173,3.544,174,2.758,175,3.544,176,3.365,177,3.225,178,3.972,179,4.089,180,3.972,181,4.62,182,2.97,183,4.62,184,4.62,185,4.62,186,4.62,187,4.62,188,4.62,189,4.62,190,4.62,191,4.62,192,4.62,193,4.62]],["title/guards/AuthGuard.html",[87,2.217,194,2.593]],["body/guards/AuthGuard.html",[0,0.025,3,0.207,4,0.187,5,0.168,7,0.314,8,0.606,11,0.567,12,0.019,13,2.336,18,0.99,20,0.729,25,0.496,34,0.207,39,0.011,40,0.011,62,1.392,67,1.397,68,0.683,69,1.269,71,1.327,73,2.406,75,0.815,79,2.336,87,2.817,100,1.465,103,1.741,138,2.057,141,2.567,145,1.648,152,2.876,154,2.057,164,2.817,174,4.069,176,3.492,177,2.336,179,2.336,180,2.876,194,2.336,195,2.567,196,2.876,197,2.213,198,1.968,199,5.103,200,4.719,201,1.46,202,2.876,203,5.584,204,5.738,205,3.346,206,4.056,207,4.554,208,3.346,209,2.151,210,2.195,211,4.719,212,3.346,213,4.193,214,1.044,215,4.193,216,2.336,217,2.567,218,2.567,219,1.997,220,2.567,221,2.032,222,3.346,223,4.056,224,3.346,225,3.346,226,3.263,227,2.876,228,5.229,229,3.346,230,4.056,231,3.346,232,2.876,233,2.876,234,4.719,235,3.346,236,2.876,237,3.346,238,3.346,239,2.469,240,3.346,241,4.719,242,4.983,243,2.077,244,4.719,245,3.62,246,2.567,247,4.719,248,3.346,249,3.346,250,1.997,251,4.719,252,3.346,253,2.631,254,2.325,255,3.346,256,3.346,257,3.346,258,4.719,259,3.62,260,2.876,261,5.467,262,3.294,263,3.544,264,4.719,265,4.719,266,4.056,267,3.346,268,3.346,269,3.346,270,3.346,271,2.876,272,3.346,273,3.346,274,3.346,275,3.346,276,2.151,277,3.346,278,3.346,279,3.346,280,3.346,281,3.346,282,3.346,283,3.346]],["title/modules/AuthModule.html",[41,1.149,52,2.388]],["body/modules/AuthModule.html",[0,0.033,3,0.282,4,0.255,5,0.229,12,0.019,25,0.549,34,0.282,39,0.014,40,0.014,41,1.978,43,1.902,44,1.805,45,2.385,46,2.385,47,2.121,48,3.345,49,3.345,52,4.746,54,4.243,57,3.039,58,2.006,59,2.385,61,3.239,75,1.111,78,4.994,79,3.183,87,3.468,138,1.716,143,3.498,144,3.919,148,4.463,149,2.702,176,3.825,177,3.183,178,3.919,216,3.183,245,3.498,246,3.498,284,3.919,285,3.919,286,4.56,287,3.919,288,4.569,289,4.56,290,5.496,291,4.56,292,4.56,293,4.56,294,5.809,295,3.183,296,4.56,297,4.56,298,4.56,299,4.56,300,4.56]],["title/classes/AuthService.html",[0,0.027,176,1.943]],["body/classes/AuthService.html",[0,0.033,2,1.675,3,0.276,4,0.249,5,0.223,7,0.418,8,1.036,11,0.499,12,0.019,18,1.145,20,1.066,25,0.496,34,0.276,39,0.014,40,0.014,62,1.687,67,1.462,68,0.658,69,1.328,71,1.251,73,2.782,75,1.084,100,1.193,103,1.694,154,2.379,156,4.917,176,2.993,197,2.24,198,2.783,201,1.77,202,3.826,203,6.071,210,2.07,215,4.388,216,3.107,221,2.052,226,2.657,242,4.388,243,2.517,263,2.657,301,3.826,302,3.399,303,5.72,304,1.762,305,1.959,306,3.524,307,5.72,308,6.672,309,4.451,310,4.412,311,4.451,312,4.451,313,4.451,314,4.451,315,4.451,316,4.451,317,4.451,318,4.917,319,4.451,320,4.451,321,4.451,322,4.451]],["title/interfaces/CompoDocConfig.html",[323,1.33,324,2.388]],["body/interfaces/CompoDocConfig.html",[0,0.009,3,0.133,4,0.12,5,0.276,7,0.117,8,0.515,11,0.581,12,0.019,20,0.961,25,0.285,34,0.077,39,0.005,40,0.005,44,0.491,58,1.251,68,0.143,69,1.668,72,1.576,100,1.336,103,1.475,138,1.069,140,0.866,145,0.611,154,1.792,170,0.518,197,1.787,198,0.518,201,0.384,210,1.951,221,1.243,239,2.194,243,2.355,250,0.741,253,0.692,254,2.552,262,2.673,263,1.696,304,1.342,323,1.017,324,1.827,325,0.649,326,0.611,327,0.692,328,0.866,329,2.599,330,2.599,331,2.599,332,2.599,333,2.599,334,2.599,335,2.599,336,2.599,337,2.599,338,2.599,339,2.599,340,2.599,341,2.599,342,2.599,343,2.599,344,2.599,345,2.599,346,2.599,347,2.599,348,2.599,349,2.599,350,2.599,351,2.599,352,2.938,353,4.752,354,1.283,355,1.648,356,0.952,357,2.18,358,1.648,359,0.692,360,1.648,361,0.866,362,1.124,363,3.593,364,0.866,365,1.124,366,1.827,367,0.866,368,1.124,369,0.741,370,0.866,371,0.999,372,0.866,373,2.462,374,1.648,375,1.648,376,0.866,377,3.538,378,0.741,379,0.952,380,0.866,381,2.938,382,1.648,383,1.648,384,1.648,385,0.952,386,3.48,387,1.984,388,3.44,389,1.381,390,1.648,391,0.952,392,0.866,393,1.648,394,0.952,395,4.712,396,0.741,397,0.798,398,1.984,399,1.5,400,0.798,401,0.798,402,0.952,403,0.952,404,0.952,405,0.866,406,0.952,407,0.952,408,0.952,409,0.952,410,1.5,411,2.18,412,0.952,413,1.648,414,2.18,415,0.952,416,0.952,417,0.866,418,2.673,419,1.648,420,0.798,421,4.326,422,4.771,423,2.18,424,2.18,425,2.18,426,0.952,427,4.288,428,1.5,429,0.952,430,0.866,431,0.952,432,0.952,433,0.952,434,0.952,435,0.866,436,0.866,437,2.18,438,2.673,439,2.18,440,2.18,441,3.452,442,3.217,443,3.452,444,3.842,445,3.217,446,2.599,447,4.167,448,2.599,449,4.23,450,2.365,451,3.141,452,3.141,453,3.217,454,0.741,455,2.599,456,3.616,457,3.452,458,4.23,459,2.938,460,0.952,461,1.5,462,0.952,463,2.938,464,0.952,465,2.18,466,0.952,467,3.824,468,0.952,469,1.648,470,2.18,471,0.952,472,2.18,473,1.648,474,0.952,475,2.599,476,2.18,477,0.952,478,2.56,479,1.5,480,1.648,481,0.952,482,0.952,483,0.952,484,0.952,485,0.952,486,3.141,487,0.952,488,0.798,489,1.889,490,0.952,491,2.18,492,0.952,493,1.984,494,0.952,495,2.18,496,3.141,497,0.952,498,2.18,499,0.952,500,2.673,501,1.185,502,2.18,503,0.952,504,0.952,505,0.952,506,1.984,507,0.952,508,0.952,509,1.648,510,1.648,511,2.18,512,0.866,513,1.648,514,0.952,515,0.952,516,1.984,517,2.928,518,0.952,519,1.648,520,1.648,521,0.866,522,3.217,523,0.952,524,2.365,525,1.5,526,1.648,527,0.952,528,0.952,529,0.952,530,0.866,531,0.741,532,0.952,533,0.952,534,3.652,535,0.952,536,0.952,537,1.648,538,0.952,539,0.952,540,0.952,541,0.952,542,0.952,543,0.952,544,0.952,545,0.952,546,0.952,547,0.952,548,0.952,549,0.952,550,0.952,551,0.952,552,0.741,553,0.952,554,1.5,555,0.952,556,0.952,557,0.952,558,0.952,559,1.889,560,0.952,561,1.889,562,1.198,563,0.952,564,0.896,565,0.952,566,0.952,567,0.952,568,0.952,569,0.952,570,3.974,571,0.952,572,0.866,573,0.952,574,0.952,575,0.952,576,0.866,577,0.952,578,0.952,579,0.952,580,0.952,581,2.135,582,2.938,583,0.952,584,0.952,585,2.18,586,1.648,587,0.952,588,3.329,589,0.952,590,2.599,591,3.217,592,0.952,593,0.952,594,0.741,595,2.18,596,1.487,597,0.952,598,0.952,599,0.952,600,0.952,601,0.952,602,0.952,603,0.952,604,2.599,605,0.952,606,0.952,607,0.952,608,1.648,609,0.952,610,0.866,611,0.952,612,1.381,613,0.866,614,0.952,615,2.18,616,0.798,617,0.952,618,0.952,619,0.952,620,0.952,621,0.952,622,1.124,623,0.952,624,0.952,625,0.952,626,0.952,627,2.18,628,0.952,629,0.952,630,0.952,631,0.952,632,0.952,633,0.952,634,0.952,635,0.952,636,0.952,637,0.741,638,0.741,639,0.952,640,0.952,641,0.866,642,0.952,643,1.648,644,0.952,645,0.952,646,1.648,647,0.952,648,0.952,649,0.952,650,0.952,651,0.952,652,0.952,653,0.866,654,0.952,655,0.952,656,0.952,657,0.952,658,0.866,659,0.952,660,0.952,661,0.952,662,0.952,663,0.866,664,0.798,665,0.866,666,0.952,667,2.178,668,0.952,669,0.952,670,0.952,671,0.952,672,0.952,673,0.952,674,0.952,675,1.5,676,0.952,677,1.648,678,0.952,679,2.178,680,0.741,681,0.952,682,1.648,683,0.952,684,0.952,685,0.952,686,1.648,687,0.952,688,0.952,689,0.952,690,0.952,691,1.059,692,0.952,693,0.866,694,0.866,695,0.866,696,0.866,697,0.866,698,0.866,699,0.952,700,0.952,701,0.952,702,0.952,703,0.952,704,0.952,705,0.952]],["title/classes/CreateEmployeeDto.html",[0,0.027,706,2.217]],["body/classes/CreateEmployeeDto.html",[0,0.047,2,1.475,3,0.243,4,0.219,5,0.196,7,0.368,8,0.953,10,2.195,11,0.626,12,0.019,14,2.665,15,2.519,16,2.568,18,1.282,20,1.053,21,4.158,22,3.672,25,0.507,26,2.447,27,3.488,28,1.552,29,2.447,30,3.08,32,3.312,33,1.823,34,0.326,35,2.665,39,0.013,40,0.013,68,0.731,80,2.339,219,2.339,276,4.081,501,1.635,531,3.141,562,2.185,564,1.635,706,3.141,707,3.006,708,3.672,709,4.081,710,3.79,711,3.79,712,3.382,713,4.523,714,5.94,715,3.919,716,4.523,717,3.382,718,3.919,719,3.919,720,3.919,721,3.919,722,3.006,723,3.919,724,3.919,725,4.523,726,3.919,727,2.753,728,4.523,729,3.919,730,3.919,731,1.93,732,3.141,733,4.036,734,2.519,735,2.519,736,2.519,737,2.339,738,3.369,739,3.369,740,3.369,741,3.369,742,3.006,743,3.369,744,3.369,745,2.185,746,2.05,747,3.369]],["title/classes/CreateSkillDto.html",[0,0.027,748,2.217]],["body/classes/CreateSkillDto.html",[0,0.051,2,1.882,3,0.31,4,0.28,5,0.251,7,0.47,8,1.115,11,0.582,12,0.019,14,2.317,15,3.215,18,1.115,20,0.951,21,2.985,25,0.517,26,2.863,27,3.032,28,1.98,29,2.863,30,3.101,33,2.326,34,0.381,35,2.689,39,0.015,40,0.015,68,0.768,501,2.086,722,3.836,731,2.464,734,3.215,735,3.215,736,3.215,746,2.616,748,3.674,749,3.836,750,2.372,751,5.001,752,5.001,753,5.001,754,4.299,755,4.299,756,2.985,757,4.299]],["title/classes/Employee.html",[0,0.027,16,1.33]],["body/classes/Employee.html",[0,0.03,2,1.563,3,0.257,4,0.232,5,0.208,7,0.39,8,0.99,10,2.55,11,0.662,12,0.019,14,2.66,16,1.958,18,1.28,20,1.181,25,0.454,34,0.379,39,0.013,40,0.013,68,0.704,82,1.932,103,1.113,138,2.541,276,3.93,531,3.65,562,3.623,564,2.71,708,4.268,709,3.93,710,3.65,746,2.173,750,2.084,758,2.899,759,6.075,760,4.154,761,4.154,762,4.154,763,5.585,764,3.571,765,4.154,766,4.154,767,4.154,768,6.114,769,4.154,770,6.237,771,3.516,772,3.571,773,4.195,774,3.571,775,3.264,776,4.195,777,3.186,778,3.571,779,4.154,780,2.67,781,3.571]],["title/modules/EmployeeAnalyticsModule.html",[41,1.149,53,2.388]],["body/modules/EmployeeAnalyticsModule.html",[0,0.036,3,0.305,4,0.275,5,0.247,12,0.019,16,1.761,25,0.538,34,0.305,39,0.015,40,0.015,41,2.048,43,2.052,44,1.948,45,2.574,46,2.574,47,2.288,48,3.463,49,2.574,53,4.771,57,3.188,58,2.165,59,2.574,61,2.743,68,0.701,75,1.198,81,3.163,82,2.288,302,3.569,750,1.677,771,3.917,780,3.917,782,4.229,783,4.229,784,4.04,785,4.92,786,3.774,787,3.637,788,3.774,789,3.434,790,3.774,791,3.774,792,4.229,793,3.774]],["title/injectables/EmployeeAnalyticsService.html",[214,0.821,784,2.071]],["body/injectables/EmployeeAnalyticsService.html",[0,0.029,3,0.241,4,0.218,5,0.195,7,0.365,8,0.948,10,1.622,11,0.552,12,0.019,16,2.265,18,1.196,25,0.44,34,0.324,39,0.013,40,0.013,62,1.543,67,1.512,68,0.681,69,1.373,71,1.663,73,2.603,75,0.947,100,1.586,103,1.894,154,2.695,164,2.321,197,2.054,198,2.64,201,1.619,210,2.751,214,1.157,221,1.92,243,1.711,302,3.117,304,1.539,305,1.711,562,2.168,709,2.499,717,4.543,745,3.992,784,2.918,789,2.714,794,1.622,795,2.982,796,5.233,797,6.328,798,5.233,799,3.888,800,4.417,801,3.888,802,5.233,803,3.888,804,3.888,805,5.233,806,3.888,807,5.233,808,3.888,809,3.342,810,2.714,811,2.982,812,2.982,813,2.982,814,2.982,815,2.982,816,2.982,817,2.714,818,3.342,819,5.233,820,5.085,821,3.888,822,3.888,823,5.233,824,2.434,825,3.888,826,3.888,827,4.014,828,3.888,829,3.342,830,3.342,831,3.342,832,2.982,833,3.888,834,3.888,835,3.888,836,5.233,837,3.888,838,3.888,839,3.888,840,3.888,841,3.888,842,2.714,843,3.888,844,3.888,845,3.342]],["title/controllers/EmployeeController.html",[147,1.83,846,2.593]],["body/controllers/EmployeeController.html",[0,0.011,1,2.971,3,0.092,4,0.083,5,0.074,7,0.14,10,1.592,11,0.597,12,0.019,14,2.153,16,2.615,18,1.036,20,0.924,25,0.413,28,0.588,34,0.092,35,2.738,39,0.006,40,0.013,62,0.739,67,1.462,68,0.674,69,1.328,71,1.608,73,1.102,75,0.362,100,1.788,103,1.533,147,2.277,149,0.691,151,1.036,154,2.658,164,3.414,166,2.268,170,1.778,172,1.139,173,1.139,174,2.278,175,1.139,182,0.955,197,0.482,198,1.045,221,0.482,239,2.992,243,2.517,250,4.011,253,3.189,254,2.545,259,3.964,302,1.6,454,3.982,496,1.748,581,3.189,588,3.772,594,1.495,637,3.084,706,3.32,711,0.886,717,2.971,727,0.777,737,0.886,745,3.452,750,1.575,789,1.036,816,1.139,817,3.993,824,2.66,827,2.927,832,1.922,845,1.276,846,1.748,847,1.276,848,2.153,849,2.153,850,2.153,851,2.793,852,2.153,853,2.505,854,2.505,855,2.153,856,2.153,857,2.153,858,2.153,859,1.485,860,1.485,861,1.485,862,3.322,863,2.153,864,5.735,865,3.545,866,2.505,867,5.885,868,1.485,869,1.485,870,1.485,871,1.485,872,1.485,873,1.485,874,4.624,875,1.485,876,2.268,877,3.545,878,1.276,879,2.793,880,3.28,881,4.037,882,1.485,883,1.485,884,1.485,885,3.875,886,3.816,887,5.037,888,1.485,889,1.485,890,1.485,891,1.485,892,2.153,893,1.485,894,1.485,895,1.485,896,1.485,897,1.485,898,1.276,899,1.485,900,1.276,901,1.485,902,2.505,903,1.485,904,2.544,905,1.276,906,2.453,907,1.485,908,1.485,909,1.485,910,1.485,911,3.607,912,1.485,913,2.505,914,1.485,915,1.485,916,1.485,917,1.485,918,1.485,919,1.485,920,0.955,921,1.276,922,1.276,923,3.269,924,1.276,925,1.276,926,3.816,927,1.276,928,5.037,929,5.777,930,2.376,931,2.153,932,1.495,933,2.153,934,1.276,935,1.276,936,1.812,937,1.276,938,1.485,939,1.485,940,1.485,941,1.485,942,3.663,943,4.917,944,1.485,945,4.917,946,4.589,947,5.72,948,3.587,949,1.276,950,3.545,951,1.485,952,2.153,953,2.153,954,2.153,955,4.917,956,3.28,957,2.127,958,3.28,959,1.485,960,1.485,961,1.485,962,1.276,963,1.485,964,1.485,965,1.485,966,1.485,967,1.276,968,1.485,969,3.663,970,1.485,971,1.485,972,1.485,973,1.276,974,2.153,975,1.485,976,1.485,977,2.153,978,4.262,979,1.485,980,3.816,981,1.485,982,1.485,983,1.485,984,1.485,985,1.276,986,3.663,987,1.485,988,3.973,989,1.485,990,1.485,991,1.485,992,1.485,993,1.485,994,1.485,995,1.485,996,1.485,997,1.485,998,1.485,999,1.485,1000,0.955,1001,1.485,1002,1.485,1003,1.485,1004,2.505,1005,1.276,1006,1.485,1007,1.485,1008,1.485,1009,1.485,1010,1.485,1011,1.276,1012,2.153,1013,1.485]],["title/modules/EmployeeModule.html",[41,1.149,54,2.217]],["body/modules/EmployeeModule.html",[0,0.034,3,0.287,4,0.26,5,0.232,12,0.019,16,1.66,25,0.539,34,0.287,39,0.014,40,0.014,41,1.994,43,1.935,44,1.837,45,2.426,46,2.426,47,2.157,48,3.371,49,3.371,54,4.454,57,3.072,58,2.041,59,2.426,61,2.586,68,0.676,75,1.13,81,2.981,82,2.157,149,2.731,302,3.717,750,1.581,771,3.775,780,3.775,784,4.208,786,3.558,787,3.505,788,3.558,789,3.237,790,3.558,791,3.558,792,3.987,793,3.558,810,3.237,846,4.498,1014,3.987,1015,3.987,1016,4.638,1017,4.638,1018,4.638]],["title/injectables/EmployeeService.html",[214,0.821,302,1.83]],["body/injectables/EmployeeService.html",[0,0.013,1,2.324,3,0.107,4,0.097,5,0.086,7,0.162,8,0.514,9,4.898,10,2.377,11,0.525,12,0.019,16,2.513,18,1.132,20,0.966,25,0.447,34,0.176,36,1.109,39,0.007,40,0.007,62,0.837,67,1.499,68,0.707,69,1.362,71,1.69,73,1.591,75,0.42,82,0.802,100,1.702,103,1.938,138,0.649,154,2.712,166,1.981,197,1.617,198,1.748,201,0.533,210,3.172,214,0.627,221,1.36,223,1.482,226,1.029,236,1.482,243,2.834,254,0.849,302,1.398,304,0.683,305,0.759,318,2.439,371,0.802,478,1.681,489,2.935,559,1.582,588,0.961,594,1.029,596,0.902,612,2.324,637,1.029,641,1.204,706,2.764,708,1.204,717,3.535,745,3.423,750,2.307,775,1.029,784,2.582,786,1.323,788,1.323,790,1.323,794,0.719,800,2.924,809,1.482,810,1.204,811,1.323,812,1.323,813,1.323,814,1.323,815,1.323,816,1.323,817,4.286,818,1.482,820,2.439,824,2.907,827,3.552,829,1.482,830,1.482,831,2.439,842,3.675,848,2.439,849,2.439,850,2.439,851,3.601,852,2.439,855,2.439,856,2.439,857,5.043,858,2.439,862,1.109,874,4.727,876,1.204,877,1.323,881,3.202,885,3.177,900,1.482,904,2.973,905,1.482,906,2.693,911,2.924,930,0.961,931,2.439,932,2.764,933,2.439,934,1.482,935,1.482,936,0.961,937,1.482,945,5.168,946,4.612,948,3.352,949,1.482,950,2.177,962,1.482,967,1.482,973,1.482,977,1.482,985,1.482,986,1.482,1000,3.384,1005,1.482,1011,1.482,1012,3.108,1019,1.323,1020,4.19,1021,2.838,1022,1.724,1023,3.552,1024,2.439,1025,2.838,1026,1.724,1027,1.724,1028,1.724,1029,1.724,1030,2.838,1031,1.724,1032,2.838,1033,1.724,1034,5.867,1035,1.724,1036,1.724,1037,2.838,1038,1.724,1039,1.724,1040,1.724,1041,1.724,1042,1.724,1043,2.838,1044,1.724,1045,2.838,1046,1.724,1047,2.838,1048,1.482,1049,1.029,1050,1.724,1051,1.724,1052,1.724,1053,1.482,1054,1.323,1055,6.013,1056,1.724,1057,2.838,1058,4.631,1059,4.281,1060,1.724,1061,1.323,1062,1.724,1063,1.724,1064,1.724,1065,3.108,1066,1.724,1067,1.724,1068,1.724,1069,4.19,1070,3.108,1071,4.19,1072,1.724,1073,3.615,1074,1.724,1075,5.5,1076,1.724,1077,5.265,1078,1.724,1079,4.19,1080,1.724,1081,3.615,1082,1.724,1083,3.108,1084,1.482,1085,1.724,1086,1.724,1087,2.838,1088,1.724,1089,1.981,1090,2.838,1091,3.839,1092,3.615,1093,2.838,1094,1.724,1095,1.724,1096,1.724,1097,2.838,1098,1.724,1099,1.724,1100,2.439,1101,1.724,1102,1.724,1103,1.724,1104,1.482,1105,1.724,1106,1.724,1107,1.724,1108,1.724,1109,1.724,1110,2.838,1111,1.724,1112,3.615,1113,1.724,1114,1.724,1115,1.724,1116,2.838,1117,1.724,1118,1.981,1119,1.724,1120,1.724,1121,1.724,1122,1.724,1123,1.724,1124,1.724,1125,1.724,1126,1.724,1127,1.724,1128,1.724,1129,1.724,1130,1.323,1131,1.724,1132,2.838,1133,1.724,1134,1.724,1135,4.19,1136,1.724,1137,1.724,1138,1.724]],["title/classes/GetMatchedEmployeeAllSkillsResponse.html",[0,0.027,936,2.071]],["body/classes/GetMatchedEmployeeAllSkillsResponse.html",[0,0.049,2,1.537,3,0.253,4,0.229,5,0.205,7,0.384,8,0.979,10,2.878,11,0.529,12,0.019,14,2.035,16,2.589,18,1.098,20,1.087,21,3.228,25,0.48,26,2.515,27,3.467,28,1.617,29,2.82,30,3.122,31,3.775,32,3.381,33,1.899,34,0.376,35,2.649,39,0.013,40,0.015,67,1.044,68,0.773,69,0.948,80,2.438,201,1.263,219,2.438,501,1.704,564,1.704,712,2.625,731,2.012,732,3.228,750,2.066,824,2.82,885,2.277,904,3.853,930,2.277,932,3.853,936,3.015,1000,3.898,1049,2.438,1089,2.851,1091,3.775,1118,4.232,1139,4.505,1140,2.851,1141,4.951,1142,5.408,1143,4.084,1144,3.51,1145,4.084,1146,3.133,1147,3.133,1148,3.133,1149,3.133,1150,3.133,1151,3.133,1152,4.148,1153,4.148,1154,4.148,1155,4.148]],["title/classes/GetMatchedEmployeeSkillsResponse.html",[0,0.027,930,2.071]],["body/classes/GetMatchedEmployeeSkillsResponse.html",[0,0.049,2,1.492,3,0.246,4,0.222,5,0.199,7,0.372,8,0.96,10,2.914,11,0.556,12,0.019,14,2.248,16,2.6,18,1.155,20,1.057,21,3.566,25,0.474,26,2.466,27,3.441,28,1.57,29,2.778,30,3.092,31,3.7,32,3.331,33,1.843,34,0.37,35,2.629,39,0.013,40,0.015,67,1.013,68,0.765,69,0.92,80,2.366,201,1.226,219,2.366,501,1.653,564,2.211,712,2.548,731,1.952,732,3.165,750,2.036,824,2.778,885,2.956,904,3.807,930,2.956,932,3.968,936,2.21,1000,3.84,1049,3.165,1089,2.767,1091,4.64,1118,4.17,1139,4.64,1140,2.767,1141,4.892,1144,3.407,1146,3.041,1147,3.041,1148,3.041,1149,3.041,1150,3.041,1151,3.041,1152,4.067,1153,4.067,1154,4.067,1155,4.067,1156,5.302,1157,3.964,1158,3.964,1159,3.964,1160,3.964]],["title/classes/GetMatchedEmployeeSkillsResponseDto.html",[0,0.027,1049,2.217]],["body/classes/GetMatchedEmployeeSkillsResponseDto.html",[0,0.049,2,1.539,3,0.253,4,0.229,5,0.205,7,0.384,8,0.98,10,2.937,11,0.529,12,0.019,14,2.037,15,2.63,16,2.59,18,1.099,20,1.087,21,2.442,25,0.48,26,2.518,27,3.468,28,1.62,29,2.822,30,3.124,31,3.779,32,3.383,33,1.902,34,0.376,35,2.65,39,0.013,40,0.015,67,1.045,68,0.81,69,0.95,80,2.442,201,1.265,219,2.442,501,1.706,564,1.706,712,3.901,722,3.138,728,3.516,731,2.015,732,3.232,750,1.845,824,2.822,885,2.281,904,3.232,930,2.281,932,3.855,936,2.281,1000,2.63,1049,3.232,1089,2.855,1091,3.779,1118,3.779,1139,4.508,1140,2.855,1141,4.954,1146,3.138,1147,3.138,1148,3.138,1149,3.138,1150,3.138,1151,3.138,1152,4.153,1153,4.153,1154,4.153,1155,4.153,1161,5.414,1162,4.091]],["title/injectables/HbsRenderService.html",[214,0.821,368,1.943]],["body/injectables/HbsRenderService.html",[0,0.017,3,0.336,4,0.321,5,0.252,7,0.344,8,0.983,11,0.439,12,0.019,18,1.039,20,1.032,25,0.177,34,0.147,35,2.25,36,2.875,39,0.009,40,0.009,41,1.134,43,1.529,62,1.601,67,0.607,68,0.661,69,0.552,71,1.413,72,2.338,100,1.765,103,1.698,170,1.529,197,2.057,201,1.384,209,2.356,214,0.81,221,0.771,239,1.917,254,2.675,304,0.941,305,1.613,326,2.946,353,1.528,354,3.425,359,1.325,363,3.385,368,1.917,376,3.122,377,1.528,378,1.418,388,1.528,389,1.528,396,2.187,405,1.659,410,2.558,417,1.659,418,4.422,420,2.356,427,2.558,428,2.558,435,2.558,436,2.558,444,3.122,447,2.558,449,3.122,450,1.659,451,2.558,452,3.122,458,1.659,478,2.526,479,4.005,486,3.122,488,2.875,489,2.043,493,3.791,512,1.659,516,1.659,521,4.005,561,1.325,564,0.991,576,2.558,581,1.325,596,1.917,622,1.917,638,1.418,653,2.558,663,1.659,664,1.528,665,1.659,691,1.17,773,1.823,794,0.991,824,2.526,1130,1.823,1163,4.587,1164,1.823,1165,4.473,1166,5.027,1167,5.027,1168,5.027,1169,3.664,1170,3.664,1171,2.376,1172,2.376,1173,2.376,1174,3.664,1175,2.376,1176,2.376,1177,1.823,1178,1.823,1179,2.376,1180,2.376,1181,2.376,1182,2.376,1183,5.308,1184,2.376,1185,2.376,1186,2.376,1187,2.376,1188,2.376,1189,5.98,1190,2.376,1191,3.664,1192,5.98,1193,1.823,1194,3.856,1195,5.027,1196,5.738,1197,5.738,1198,2.376,1199,2.376,1200,4.473,1201,2.376,1202,2.376,1203,2.376,1204,2.376,1205,2.376,1206,3.664,1207,2.376,1208,2.376,1209,2.376,1210,2.376,1211,3.15,1212,2.043,1213,5.431,1214,3.845,1215,3.664,1216,3.664,1217,2.376,1218,2.376,1219,2.376,1220,2.376,1221,2.376,1222,2.376,1223,3.664,1224,2.376,1225,2.376,1226,5.431,1227,5.027,1228,2.376,1229,2.376,1230,2.376,1231,2.376,1232,3.664,1233,2.376,1234,2.376,1235,2.376,1236,2.811,1237,2.376,1238,3.664,1239,2.376,1240,2.376,1241,2.043,1242,3.664,1243,5.431,1244,2.376,1245,2.376,1246,2.376,1247,2.376,1248,2.376,1249,2.376,1250,3.15,1251,2.376,1252,2.376,1253,2.043,1254,2.376,1255,4.473,1256,2.376,1257,2.376,1258,2.376,1259,2.376,1260,3.664,1261,2.376,1262,2.376,1263,2.043,1264,2.376,1265,3.664,1266,2.376,1267,2.376,1268,2.376,1269,2.376,1270,2.376,1271,2.376,1272,4.473]],["title/controllers/HealthController.html",[147,1.83,1273,2.593]],["body/controllers/HealthController.html",[0,0.033,3,0.283,4,0.256,5,0.229,7,0.429,12,0.019,14,1.719,18,0.827,25,0.432,34,0.283,39,0.014,40,0.014,62,1.715,71,1.284,75,1.113,100,1.224,134,3.927,147,2.25,149,2.124,151,3.189,154,2.535,197,2.258,198,1.906,201,1.413,371,2.705,456,3.189,461,3.189,525,3.189,572,3.189,775,2.727,1130,5.543,1273,4.06,1274,3.927,1275,6.399,1276,4.568,1277,4.568,1278,5.816,1279,5.816,1280,5.816,1281,5.816,1282,5.816,1283,5.816,1284,3.504,1285,4.568,1286,5.816,1287,4.568,1288,4.568,1289,4.568,1290,4.568,1291,5.816,1292,4.568,1293,5.816,1294,4.568,1295,4.568,1296,4.568,1297,5.816,1298,4.568,1299,4.568,1300,6.957,1301,4.568,1302,4.568,1303,4.568,1304,4.568]],["title/modules/HealthModule.html",[41,1.149,55,2.388]],["body/modules/HealthModule.html",[0,0.04,3,0.334,4,0.302,5,0.27,12,0.019,25,0.542,34,0.334,39,0.016,40,0.016,41,1.993,43,2.248,55,4.141,61,3.005,75,1.313,81,3.465,82,2.507,149,2.996,1273,4.809,1284,4.135,1305,5.39,1306,5.39,1307,6.442,1308,4.633,1309,5.39,1310,5.39,1311,5.39,1312,5.39,1313,5.39]],["title/interfaces/IEmployee.html",[323,1.33,1314,2.85]],["body/interfaces/IEmployee.html",[3,0.312,4,0.282,5,0.252,7,0.473,8,1.119,11,0.644,12,0.019,20,1.189,25,0.374,34,0.312,39,0.015,40,0.015,68,0.803,276,4.483,323,1.802,325,2.633,531,4.163,562,3.728,564,2.789,708,4.868,709,4.483,710,4.163,712,4.483,1314,4.74,1315,4.326,1316,4.326,1317,4.326]],["title/interfaces/ISkill.html",[323,1.33,1318,2.85]],["body/interfaces/ISkill.html",[3,0.344,4,0.311,5,0.278,7,0.521,8,1.187,11,0.572,12,0.018,20,1.151,25,0.412,34,0.344,35,2.712,39,0.016,40,0.016,68,0.83,323,1.987,325,2.904,1316,4.771,1317,4.771,1318,5.028,1319,4.771]],["title/injectables/JwtStrategy.html",[214,0.821,288,2.388]],["body/injectables/JwtStrategy.html",[0,0.037,3,0.316,4,0.286,5,0.256,7,0.48,11,0.446,12,0.019,18,1.129,25,0.5,34,0.316,39,0.015,40,0.015,62,1.838,67,1.305,68,0.588,69,1.185,71,1.436,75,1.244,100,1.369,154,2.533,164,3.048,201,2.082,214,1.379,242,3.917,246,3.917,288,4.008,295,3.564,310,3.564,561,2.847,746,3.262,794,2.13,1320,4.389,1321,5.359,1322,5.359,1323,5.107,1324,6.235,1325,5.107,1326,5.107,1327,4.389,1328,3.917,1329,4.389,1330,4.389,1331,4.389,1332,5.107,1333,5.107,1334,5.107,1335,5.107,1336,5.107]],["title/injectables/LocalStrategy.html",[214,0.821,1337,2.85]],["body/injectables/LocalStrategy.html",[0,0.035,3,0.299,4,0.27,5,0.242,7,0.453,11,0.525,12,0.019,18,1.09,20,1.114,25,0.51,34,0.299,39,0.015,40,0.015,62,1.775,67,1.538,68,0.693,69,1.397,71,1.356,75,1.175,100,1.293,103,1.293,154,2.469,176,3.772,177,3.366,182,3.1,201,1.492,210,2.799,214,1.331,215,4.616,221,1.565,228,5.032,243,2.122,263,2.878,295,3.366,310,3.366,710,4.101,746,3.148,794,2.012,1321,5.173,1322,5.173,1327,4.145,1328,3.699,1330,4.145,1331,4.145,1337,4.616,1338,4.145,1339,4.822,1340,4.822,1341,6.018,1342,4.822,1343,4.145,1344,4.822]],["title/interfaces/LoggerConfig.html",[323,1.33,1345,2.593]],["body/interfaces/LoggerConfig.html",[3,0.33,4,0.298,5,0.267,7,0.501,8,1.159,11,0.558,12,0.018,20,1.182,34,0.396,39,0.015,40,0.015,170,2.224,323,2.291,325,2.789,371,2.479,564,2.669,680,3.182,691,2.626,920,3.427,948,2.972,957,2.972,1345,4.467,1346,4.089,1347,5.455,1348,5.455,1349,3.427,1350,3.721,1351,3.721,1352,3.721,1353,3.721]],["title/injectables/LoggerMiddleware.html",[94,2.593,214,0.821]],["body/injectables/LoggerMiddleware.html",[0,0.03,3,0.25,4,0.226,5,0.202,7,0.379,8,0.972,11,0.352,12,0.019,13,2.817,18,1.092,25,0.477,34,0.25,39,0.013,40,0.013,62,1.582,67,1.031,68,0.465,69,0.937,71,1.135,72,1.877,73,2.653,75,0.983,94,3.746,103,1.843,145,1.988,160,4.613,170,2.514,174,3.992,197,1.957,198,2.514,201,1.865,213,4.928,214,1.187,217,3.096,221,1.957,266,3.47,304,1.598,305,1.776,306,3.361,371,1.877,588,3.582,680,3.203,691,1.988,794,1.684,881,3.449,920,2.595,923,4.624,948,2.992,957,2.25,1350,3.746,1351,3.746,1352,2.817,1353,2.817,1354,3.47,1355,4.116,1356,5.366,1357,5.366,1358,4.928,1359,6.424,1360,4.036,1361,5.366,1362,3.47,1363,3.47,1364,4.613,1365,3.47,1366,4.036,1367,4.036,1368,5.366,1369,5.366,1370,4.036,1371,4.036,1372,4.036,1373,4.036,1374,4.036,1375,4.036,1376,4.036,1377,4.036,1378,4.036,1379,4.036,1380,4.036,1381,4.036,1382,4.036,1383,4.036,1384,5.522,1385,5.522,1386,4.036,1387,4.036,1388,4.036,1389,4.036,1390,3.47,1391,4.036,1392,4.036]],["title/modules/LoggerModule.html",[41,1.149,1393,2.593]],["body/modules/LoggerModule.html",[0,0.039,3,0.327,4,0.295,5,0.264,12,0.019,25,0.472,34,0.327,39,0.015,40,0.015,41,2.111,43,2.2,44,2.088,45,2.759,46,2.759,47,2.452,48,3.57,49,3.57,57,3.326,58,2.32,59,2.759,75,1.284,306,4.277,1362,4.533,1393,5.201,1394,4.533,1395,4.533,1396,4.533,1397,5.273]],["title/injectables/LoggerService.html",[214,0.821,306,2.071]],["body/injectables/LoggerService.html",[0,0.013,3,0.331,4,0.1,5,0.254,7,0.168,8,0.529,11,0.541,12,0.019,18,1.19,20,1.127,22,1.247,25,0.441,34,0.111,36,1.878,39,0.007,40,0.007,62,0.861,67,1.517,68,0.683,69,1.44,71,1.709,72,2.761,73,1.883,75,0.435,100,1.718,103,1.798,133,2.382,138,1.611,145,0.88,170,0.745,174,1.744,197,2.134,201,1.146,209,4.654,213,1.371,214,0.646,221,1.644,239,0.935,253,3.11,254,3.157,271,1.536,290,1.536,304,1.157,305,0.786,306,2.066,371,2.486,454,1.744,478,1.723,488,1.878,554,2.586,559,2.066,561,2.066,581,0.996,596,1.528,679,1.149,691,1.825,794,0.745,862,2.382,920,1.149,948,2.066,957,2.066,1061,1.371,1070,1.536,1084,2.511,1193,1.371,1194,3.62,1214,1.536,1250,1.536,1347,2.241,1348,3.886,1349,3.436,1350,4.33,1351,2.586,1352,1.247,1353,3.536,1363,1.536,1364,2.511,1365,1.536,1384,2.511,1385,2.511,1390,1.536,1398,1.536,1399,3.705,1400,2.921,1401,4.28,1402,4.28,1403,4.28,1404,2.921,1405,2.921,1406,2.921,1407,3.705,1408,3.705,1409,2.921,1410,1.787,1411,2.921,1412,1.787,1413,2.921,1414,1.787,1415,5.577,1416,2.921,1417,5.065,1418,1.787,1419,2.921,1420,1.787,1421,1.787,1422,2.921,1423,1.787,1424,2.921,1425,1.787,1426,2.921,1427,1.787,1428,2.921,1429,1.787,1430,2.921,1431,1.787,1432,2.921,1433,1.787,1434,1.787,1435,2.921,1436,1.787,1437,3.705,1438,1.787,1439,1.787,1440,1.787,1441,2.921,1442,3.679,1443,3.705,1444,1.536,1445,1.536,1446,3.185,1447,1.787,1448,1.787,1449,1.787,1450,1.787,1451,1.787,1452,1.536,1453,2.921,1454,1.787,1455,1.787,1456,3.705,1457,1.787,1458,1.787,1459,4.719,1460,4.28,1461,2.921,1462,2.921,1463,2.921,1464,3.705,1465,3.705,1466,3.705,1467,2.921,1468,1.787,1469,1.787,1470,2.921,1471,2.921,1472,2.921,1473,1.787,1474,1.787,1475,2.511,1476,2.921,1477,1.787,1478,2.921,1479,2.921,1480,1.787,1481,2.921,1482,1.787,1483,2.921,1484,2.921,1485,1.787,1486,1.787,1487,2.921,1488,1.787,1489,2.921,1490,3.705,1491,1.787,1492,1.787,1493,4.28,1494,2.511,1495,2.921,1496,1.787,1497,1.787,1498,1.787,1499,1.787,1500,1.787,1501,1.787,1502,1.787,1503,1.787,1504,1.787,1505,3.705,1506,2.921,1507,2.921,1508,1.787,1509,1.787,1510,1.787,1511,1.787,1512,1.787,1513,1.787,1514,1.787,1515,1.787,1516,1.787,1517,1.787,1518,1.787,1519,1.787,1520,1.787,1521,1.787,1522,1.787,1523,1.787,1524,1.787,1525,1.787,1526,1.787,1527,2.921,1528,1.787,1529,1.787,1530,2.921,1531,1.787,1532,1.787,1533,1.787,1534,1.536,1535,1.787,1536,1.787,1537,1.787,1538,1.787,1539,1.787,1540,1.787,1541,1.787,1542,1.787,1543,1.787,1544,1.787,1545,1.787,1546,1.787,1547,1.787,1548,1.787,1549,1.787,1550,1.787,1551,1.787,1552,1.787,1553,5.065,1554,2.921,1555,1.787,1556,1.787,1557,1.787,1558,1.787,1559,5.065,1560,1.787,1561,1.787,1562,1.787,1563,1.787,1564,5.065,1565,1.536,1566,1.787,1567,1.787,1568,1.787,1569,1.787,1570,1.787,1571,1.787,1572,3.705,1573,3.705,1574,1.787,1575,1.787,1576,1.787,1577,1.787,1578,1.787,1579,1.787,1580,1.787,1581,1.787,1582,1.787]],["title/interfaces/RequestLog.html",[323,1.33,1349,2.388]],["body/interfaces/RequestLog.html",[3,0.29,4,0.262,5,0.235,7,0.44,8,1.07,11,0.656,12,0.019,20,1.187,34,0.366,39,0.014,40,0.014,69,1.706,170,2.836,323,2.115,325,2.45,371,3.161,564,2.985,680,4.058,691,3.348,920,4.37,948,3.79,957,3.79,1345,3.269,1346,3.592,1347,3.592,1348,3.592,1349,3.798,1350,4.745,1351,4.745,1352,4.745,1353,4.745]],["title/injectables/ResponseInterceptor.html",[214,0.821,1583,2.85]],["body/injectables/ResponseInterceptor.html",[0,0.036,3,0.304,4,0.274,5,0.246,7,0.46,8,1.101,11,0.53,12,0.019,18,1.101,25,0.452,34,0.304,39,0.015,40,0.015,62,1.792,67,1.252,68,0.564,69,1.138,71,1.378,73,3.185,75,1.194,100,1.313,103,1.313,145,2.414,197,2.145,207,5.3,209,3.15,214,1.344,221,1.973,304,1.94,305,2.156,794,2.044,957,2.732,1358,5.069,1583,4.663,1584,4.212,1585,6.079,1586,6.079,1587,6.909,1588,4.9,1589,5.68,1590,6.079,1591,4.9,1592,6.079,1593,4.9,1594,4.212,1595,4.9,1596,4.9,1597,4.9,1598,4.9,1599,4.9]],["title/guards/RolesGuard.html",[89,2.388,194,2.593]],["body/guards/RolesGuard.html",[0,0.034,3,0.291,4,0.263,5,0.235,7,0.441,11,0.516,12,0.019,18,1.071,25,0.521,34,0.291,39,0.014,40,0.014,62,1.744,67,1.512,68,0.681,69,1.373,71,1.319,75,1.143,79,3.275,89,3.803,100,1.586,103,1.586,138,1.766,145,2.311,182,3.016,195,3.599,199,5.847,201,1.451,204,6.155,206,5.085,207,5.218,209,3.016,210,2.751,214,1.308,226,2.801,227,4.033,232,4.033,233,4.033,353,3.803,478,2.182,727,2.455,737,2.801,1589,5.569,1594,4.033,1600,4.033,1601,4.692,1602,4.692,1603,4.692,1604,3.599,1605,4.692,1606,5.916,1607,4.692,1608,4.692,1609,4.692,1610,4.692]],["title/interfaces/Session.html",[323,1.33,373,2.388]],["body/interfaces/Session.html",[0,0.01,3,0.146,4,0.132,5,0.286,7,0.13,8,0.557,11,0.388,12,0.019,20,0.964,25,0.303,34,0.085,39,0.006,40,0.006,44,0.546,58,1.354,68,0.159,72,1.691,100,1.398,103,1.532,138,1.158,140,0.962,145,0.679,154,1.882,170,0.575,197,1.855,198,0.575,201,0.426,210,2.067,221,1.325,239,2.325,243,2.451,250,0.823,253,2.027,254,2.663,262,2.848,263,1.836,304,1.44,323,1.101,324,1.512,325,0.721,326,0.679,327,0.769,328,0.962,329,1.058,330,1.058,331,1.058,332,1.058,333,1.058,334,1.058,335,1.058,336,1.058,337,1.058,338,1.058,339,1.058,340,1.058,341,1.058,342,1.058,343,1.058,344,1.058,345,1.058,346,1.058,347,1.058,348,1.058,349,1.058,350,1.058,351,1.058,352,1.804,353,4.342,354,1.404,355,1.804,356,1.058,357,2.36,358,1.804,359,0.769,360,1.804,361,0.962,362,1.23,363,3.654,364,0.962,365,1.23,366,1.977,367,0.962,368,1.23,369,0.823,370,0.962,371,1.094,372,0.962,373,2.857,374,3.13,375,3.13,376,0.962,377,3.673,378,0.823,379,1.058,380,0.962,381,3.13,382,1.804,383,1.804,384,1.804,385,1.058,386,3.642,387,2.147,388,3.58,389,1.512,390,1.804,391,1.058,392,0.962,393,1.804,394,1.058,395,4.845,396,0.823,397,0.886,398,2.147,399,1.642,400,0.886,401,0.886,402,1.058,403,1.058,404,1.058,405,0.962,406,1.058,407,1.058,408,1.058,409,1.058,410,1.642,411,2.36,412,1.058,413,1.804,414,2.36,415,1.058,416,1.058,417,0.962,418,2.848,419,1.804,420,0.886,421,4.482,422,4.9,423,2.36,424,2.36,425,2.36,426,1.058,427,4.409,428,1.642,429,1.058,430,0.962,431,1.058,432,1.058,433,1.058,434,1.058,435,0.962,436,0.962,437,2.36,438,2.848,439,2.36,440,2.36,441,3.64,442,3.409,443,3.64,444,3.989,445,3.409,446,2.789,447,4.296,448,2.789,449,4.355,450,2.538,451,3.312,452,3.312,453,3.409,454,0.823,455,2.789,456,3.773,457,3.64,458,4.355,459,3.13,460,1.058,461,1.642,462,1.058,463,3.13,464,1.058,465,2.36,466,1.058,467,4.002,468,1.058,469,1.804,470,2.36,471,1.058,472,2.36,473,1.804,474,1.058,475,2.789,476,2.36,477,1.058,478,2.658,479,1.642,480,1.804,481,1.058,482,1.058,483,1.058,484,1.058,485,1.058,486,3.312,487,1.058,488,0.886,489,2.027,490,1.058,491,2.36,492,1.058,493,2.147,494,1.058,495,2.36,496,3.312,497,1.058,498,2.36,499,1.058,500,2.848,501,1.283,502,2.36,503,1.058,504,1.058,505,1.058,506,2.147,507,1.058,508,1.058,509,1.804,510,1.804,511,2.36,512,0.962,513,1.804,514,1.058,515,1.058,516,2.147,517,3.102,518,1.058,519,1.804,520,1.804,521,0.962,522,3.409,523,1.058,524,2.538,525,1.642,526,1.804,527,1.058,528,1.058,529,1.058,530,0.962,531,0.823,532,1.058,533,1.058,534,3.835,535,1.058,536,1.058,537,1.804,538,1.058,539,1.058,540,1.058,541,1.058,542,1.058,543,1.058,544,1.058,545,1.058,546,1.058,547,1.058,548,1.058,549,1.058,550,1.058,551,1.058,552,0.823,553,1.058,554,1.642,555,1.058,556,1.058,557,1.058,558,1.058,559,2.027,560,1.058,561,2.027,562,1.311,563,1.058,564,0.981,565,1.058,566,1.058,567,1.058,568,1.058,569,1.058,570,4.146,571,1.058,572,0.962,573,1.058,574,1.058,575,1.058,576,0.962,577,1.058,578,1.058,579,1.058,580,1.058,581,2.275,582,3.13,583,1.058,584,1.058,585,2.36,586,1.804,587,1.058,588,3.431,589,1.058,590,2.789,591,3.409,592,1.058,593,1.058,594,0.823,595,2.36,596,1.609,597,1.058,598,1.058,599,1.058,600,1.058,601,1.058,602,1.058,603,1.058,604,2.789,605,1.058,606,1.058,607,1.058,608,1.804,609,1.058,610,0.962,611,1.058,612,1.512,613,0.962,614,1.058,615,2.36,616,0.886,617,1.058,618,1.058,619,1.058,620,1.058,621,1.058,622,1.23,623,1.058,624,1.058,625,1.058,626,1.058,627,2.36,628,1.058,629,1.058,630,1.058,631,1.058,632,1.058,633,1.058,634,1.058,635,1.058,636,1.058,637,0.823,638,0.823,639,1.058,640,1.058,641,0.962,642,1.058,643,1.804,644,1.058,645,1.058,646,1.804,647,1.058,648,1.058,649,1.058,650,1.058,651,1.058,652,1.058,653,0.962,654,1.058,655,1.058,656,1.058,657,1.058,658,0.962,659,1.058,660,1.058,661,1.058,662,1.058,663,0.962,664,0.886,665,0.962,666,1.058,667,2.337,668,1.058,669,1.058,670,1.058,671,1.058,672,1.058,673,1.058,674,1.058,675,1.642,676,1.058,677,1.804,678,1.058,679,2.337,680,0.823,681,1.058,682,1.804,683,1.058,684,1.058,685,1.058,686,1.804,687,1.058,688,1.058,689,1.058,690,1.058,691,1.159,692,1.058,693,0.962,694,0.962,695,0.962,696,0.962,697,0.962,698,0.962,699,1.058,700,1.058,701,1.058,702,1.058,703,1.058,704,1.058,705,1.058]],["title/classes/SignInDto.html",[0,0.027,169,2.593]],["body/classes/SignInDto.html",[0,0.048,2,1.844,3,0.304,4,0.274,5,0.246,7,0.46,8,1.101,11,0.577,12,0.019,14,2.288,15,3.907,18,1.101,20,1.021,25,0.528,26,3.073,27,2.414,28,1.94,29,3.073,30,3.073,32,2.732,33,2.279,34,0.304,35,2.288,39,0.015,40,0.015,68,0.7,169,4.243,226,4.124,310,4.612,501,2.044,710,4.124,727,2.564,731,2.414,732,2.925,733,3.759,734,3.15,735,3.15,736,3.15,737,2.925,742,3.759,1611,4.212,1612,6.079,1613,6.079,1614,4.9,1615,4.9,1616,6.079]],["title/classes/Skill.html",[0,0.027,750,1.266]],["body/classes/Skill.html",[0,0.037,2,1.874,3,0.309,4,0.279,5,0.25,7,0.468,8,1.112,11,0.634,12,0.019,14,2.311,18,1.112,20,1.149,25,0.495,34,0.412,35,2.505,39,0.015,40,0.015,68,0.766,82,2.316,103,1.335,138,2.505,746,2.606,750,2.093,759,5.278,763,5.278,764,4.281,770,5.722,771,3.947,772,4.281,773,4.71,774,4.281,775,3.665,776,4.71,778,4.281,787,2.973,1617,3.477,1618,4.981,1619,4.981,1620,3.821,1621,4.281]],["title/controllers/SkillController.html",[147,1.83,1622,2.593]],["body/controllers/SkillController.html",[0,0.021,3,0.178,4,0.161,5,0.144,7,0.271,10,2.311,11,0.515,12,0.019,14,2.085,18,1.003,20,0.776,25,0.474,28,1.141,34,0.178,35,2.71,39,0.01,40,0.01,62,1.249,67,1.416,68,0.638,69,1.286,71,1.558,73,1.865,75,0.702,89,1.852,100,1.755,103,1.485,147,1.419,149,1.34,151,2.011,154,2.623,164,3.307,166,2.957,170,2.096,172,2.21,173,2.21,174,1.72,175,2.21,182,1.852,197,0.935,198,1.767,221,0.935,239,2.899,243,2.438,250,3.908,253,3.292,254,2.087,259,3.25,454,3.908,581,3.089,588,3.651,594,1.72,637,3,711,1.72,727,1.507,737,1.72,748,3.908,750,2.565,756,3.809,824,2.871,832,2.21,862,3.562,863,2.477,864,5.628,865,3.855,867,5.744,876,3.508,877,4.25,878,3.642,879,4.32,880,4.32,881,4.103,885,1.607,887,3.642,892,2.477,898,2.477,911,2.957,921,2.477,922,2.477,923,2.21,924,2.477,925,2.477,927,3.642,928,5.075,929,5.744,942,4.32,943,4.763,946,2.21,948,1.607,950,2.21,952,2.477,953,2.477,954,2.477,955,4.763,956,2.477,957,1.607,958,2.477,969,4.32,988,4.32,1622,2.957,1623,2.477,1624,3.642,1625,3.642,1626,3.642,1627,3.642,1628,2.881,1629,2.881,1630,2.881,1631,2.881,1632,2.881,1633,2.881,1634,2.881,1635,2.881,1636,2.881,1637,2.881,1638,2.881,1639,2.881,1640,3,1641,2.477,1642,2.477,1643,2.881,1644,2.881,1645,2.881,1646,2.881,1647,2.881,1648,2.881,1649,2.881,1650,3.642,1651,2.881,1652,2.881,1653,2.881,1654,4.237,1655,2.881,1656,2.881,1657,2.881,1658,2.881,1659,3.642,1660,2.881,1661,2.881,1662,2.477,1663,2.881,1664,2.881]],["title/modules/SkillModule.html",[41,1.149,56,2.388]],["body/modules/SkillModule.html",[0,0.036,3,0.304,4,0.275,5,0.246,12,0.019,25,0.538,34,0.304,39,0.015,40,0.015,41,2.046,43,2.048,44,1.944,45,2.569,46,2.569,47,2.284,48,3.46,49,3.46,56,4.72,57,3.184,58,2.161,59,2.569,61,2.738,68,0.565,75,1.196,81,3.156,82,2.284,149,2.83,750,1.673,771,3.156,787,3.633,791,3.767,793,3.767,810,3.427,1622,4.617,1640,4.539,1641,4.221,1665,4.221,1666,4.221,1667,4.221,1668,4.91,1669,5.232,1670,4.91]],["title/classes/SkillSelectionDto.html",[0,0.027,906,2.388]],["body/classes/SkillSelectionDto.html",[0,0.051,2,2.028,3,0.334,4,0.302,5,0.27,7,0.506,8,1.166,11,0.562,12,0.019,14,2.028,18,0.976,20,0.995,25,0.512,26,2.996,28,2.134,29,2.996,30,2.996,33,2.507,34,0.334,39,0.016,40,0.016,501,2.248,731,2.655,904,4.112,906,4.141,1671,5.537,1672,4.633,1673,5.39,1674,5.39]],["title/injectables/SkillService.html",[214,0.821,1640,2.217]],["body/injectables/SkillService.html",[0,0.025,3,0.215,4,0.194,5,0.174,7,0.326,8,0.876,11,0.526,12,0.019,16,1.241,18,1.19,20,0.86,25,0.471,34,0.215,39,0.012,40,0.012,62,1.426,67,1.541,68,0.776,69,1.4,71,1.695,73,2.452,75,0.844,82,1.612,100,1.843,103,1.873,138,1.304,154,2.715,197,1.957,198,2.324,201,1.072,210,3.198,214,1.07,221,1.957,243,2.653,304,1.372,305,1.525,478,1.612,559,3.362,596,1.813,748,3.786,750,2.478,756,3.921,775,2.069,794,1.446,811,2.658,812,2.658,813,2.658,814,2.658,815,2.658,824,2.804,842,3.376,865,2.658,876,2.419,881,3.581,885,1.932,911,2.419,974,5.647,1023,4.274,1024,2.979,1048,2.979,1053,2.979,1054,2.658,1059,4.158,1061,3.71,1065,4.158,1083,2.979,1100,4.158,1104,2.979,1624,4.158,1625,4.158,1626,5.183,1627,4.158,1640,2.887,1642,2.979,1650,4.158,1659,4.789,1662,4.789,1669,2.979,1675,2.979,1676,3.466,1677,4.837,1678,4.837,1679,3.466,1680,4.837,1681,3.466,1682,3.466,1683,4.837,1684,3.466,1685,4.837,1686,3.466,1687,6.342,1688,3.466,1689,3.466,1690,4.837,1691,4.158,1692,3.466,1693,3.466,1694,3.466,1695,3.466,1696,3.466,1697,3.466,1698,3.466,1699,3.466,1700,3.466,1701,3.466]],["title/interfaces/Template.html",[323,1.33,363,1.943]],["body/interfaces/Template.html",[0,0.01,3,0.145,4,0.131,5,0.286,7,0.129,8,0.556,11,0.455,12,0.019,20,0.963,25,0.303,34,0.085,39,0.006,40,0.006,44,0.545,58,1.351,68,0.418,72,1.688,100,1.397,103,1.531,138,1.156,140,0.96,145,0.678,154,1.88,170,0.574,197,1.854,198,0.574,201,0.426,210,2.064,221,1.323,239,2.322,243,2.449,250,0.821,253,0.767,254,2.66,262,2.845,263,1.833,304,1.437,323,1.099,324,1.509,325,0.72,326,0.678,327,0.767,328,0.96,329,1.055,330,1.055,331,1.055,332,1.055,333,1.055,334,1.055,335,1.055,336,1.055,337,1.055,338,1.055,339,1.055,340,1.055,341,1.055,342,1.055,343,1.055,344,1.055,345,1.055,346,1.055,347,1.055,348,1.055,349,1.055,350,1.055,351,1.055,352,1.801,353,4.284,354,1.401,355,1.801,356,1.055,357,2.356,358,1.801,359,0.767,360,1.801,361,0.96,362,1.228,363,3.692,364,0.96,365,1.228,366,1.974,367,0.96,368,1.228,369,0.821,370,0.96,371,1.895,372,2.143,373,2.62,374,1.801,375,1.801,376,0.96,377,3.671,378,0.821,379,1.055,380,0.96,381,3.126,382,1.801,383,1.801,384,1.801,385,1.055,386,3.638,387,2.143,388,3.577,389,1.509,390,1.801,391,1.055,392,0.96,393,1.801,394,1.055,395,4.842,396,0.821,397,0.884,398,2.143,399,1.639,400,0.884,401,0.884,402,1.055,403,1.055,404,1.055,405,0.96,406,1.055,407,1.055,408,1.055,409,1.055,410,1.639,411,2.356,412,1.055,413,1.801,414,2.356,415,1.055,416,1.055,417,0.96,418,2.845,419,1.801,420,0.884,421,4.479,422,4.897,423,2.356,424,2.356,425,2.356,426,1.055,427,4.406,428,1.639,429,1.055,430,0.96,431,1.055,432,1.055,433,1.055,434,1.055,435,0.96,436,0.96,437,2.356,438,2.845,439,2.356,440,2.356,441,3.636,442,3.405,443,3.636,444,3.986,445,3.405,446,2.785,447,4.293,448,2.785,449,4.352,450,2.534,451,3.309,452,3.309,453,3.405,454,0.821,455,2.785,456,3.77,457,3.636,458,4.352,459,3.126,460,1.055,461,1.639,462,1.055,463,3.126,464,1.055,465,2.356,466,1.055,467,3.998,468,1.055,469,1.801,470,2.356,471,1.055,472,2.356,473,1.801,474,1.055,475,2.785,476,2.356,477,1.055,478,2.656,479,1.639,480,1.801,481,1.055,482,1.055,483,1.055,484,1.055,485,1.055,486,3.309,487,1.055,488,0.884,489,2.024,490,1.055,491,2.356,492,1.055,493,2.143,494,1.055,495,2.356,496,3.309,497,1.055,498,2.356,499,1.055,500,2.845,501,1.281,502,2.356,503,1.055,504,1.055,505,1.055,506,2.143,507,1.055,508,1.055,509,1.801,510,1.801,511,2.356,512,0.96,513,1.801,514,1.055,515,1.055,516,2.143,517,3.098,518,1.055,519,1.801,520,1.801,521,0.96,522,3.405,523,1.055,524,2.534,525,1.639,526,1.801,527,1.055,528,1.055,529,1.055,530,0.96,531,0.821,532,1.055,533,1.055,534,3.831,535,1.055,536,1.055,537,1.801,538,1.055,539,1.055,540,1.055,541,1.055,542,1.055,543,1.055,544,1.055,545,1.055,546,1.055,547,1.055,548,1.055,549,1.055,550,1.055,551,1.055,552,0.821,553,1.055,554,1.639,555,1.055,556,1.055,557,1.055,558,1.055,559,2.024,560,1.055,561,2.024,562,1.309,563,1.055,564,0.979,565,1.055,566,1.055,567,1.055,568,1.055,569,1.055,570,4.143,571,1.055,572,0.96,573,1.055,574,1.055,575,1.055,576,0.96,577,1.055,578,1.055,579,1.055,580,1.055,581,2.272,582,3.126,583,1.055,584,1.055,585,2.356,586,1.801,587,1.055,588,3.429,589,1.055,590,2.785,591,3.405,592,1.055,593,1.055,594,0.821,595,2.356,596,1.607,597,1.055,598,1.055,599,1.055,600,1.055,601,1.055,602,1.055,603,1.055,604,2.785,605,1.055,606,1.055,607,1.055,608,1.801,609,1.055,610,0.96,611,1.055,612,1.509,613,0.96,614,1.055,615,2.356,616,0.884,617,1.055,618,1.055,619,1.055,620,1.055,621,1.055,622,1.228,623,1.055,624,1.055,625,1.055,626,1.055,627,2.356,628,1.055,629,1.055,630,1.055,631,1.055,632,1.055,633,1.055,634,1.055,635,1.055,636,1.055,637,0.821,638,0.821,639,1.055,640,1.055,641,0.96,642,1.055,643,1.801,644,1.055,645,1.055,646,1.801,647,1.055,648,1.055,649,1.055,650,1.055,651,1.055,652,1.055,653,0.96,654,1.055,655,1.055,656,1.055,657,1.055,658,0.96,659,1.055,660,1.055,661,1.055,662,1.055,663,0.96,664,0.884,665,0.96,666,1.055,667,2.334,668,1.055,669,1.055,670,1.055,671,1.055,672,1.055,673,1.055,674,1.055,675,1.639,676,1.055,677,1.801,678,1.055,679,2.334,680,0.821,681,1.055,682,1.801,683,1.055,684,1.055,685,1.055,686,1.801,687,1.055,688,1.055,689,1.055,690,1.055,691,1.156,692,1.055,693,0.96,694,0.96,695,0.96,696,0.96,697,0.96,698,0.96,699,1.055,700,1.055,701,1.055,702,1.055,703,1.055,704,1.055,705,1.055]],["title/injectables/TemplateEditorService.html",[214,0.821,362,1.943]],["body/injectables/TemplateEditorService.html",[0,0.02,3,0.169,4,0.153,5,0.137,7,0.256,8,0.736,11,0.528,12,0.019,18,1.167,20,1.086,25,0.203,34,0.169,36,1.752,39,0.01,40,0.01,62,1.199,67,1.378,68,0.621,69,1.252,71,1.701,72,2.997,97,2.091,100,1.622,103,1.304,133,1.752,138,2.359,197,2.237,214,0.899,228,3.119,304,1.61,305,2.539,326,3.244,327,3.672,359,1.52,362,2.127,369,1.627,378,2.427,392,1.903,438,1.903,517,1.903,524,4.027,530,1.903,559,3.217,561,2.712,610,2.839,612,1.752,613,1.903,616,1.752,622,3.018,794,1.137,1023,2.091,1177,2.091,1178,2.091,1183,3.496,1193,2.091,1194,4.425,1236,3.119,1263,3.496,1358,3.119,1534,2.343,1691,2.343,1702,2.091,1703,4.864,1704,5.393,1705,4.067,1706,5.393,1707,4.067,1708,4.067,1709,2.726,1710,4.067,1711,2.726,1712,5.769,1713,4.067,1714,4.864,1715,2.726,1716,2.726,1717,4.067,1718,2.726,1719,4.067,1720,2.726,1721,4.067,1722,2.726,1723,2.726,1724,3.731,1725,5.393,1726,2.726,1727,5.769,1728,2.726,1729,2.726,1730,2.726,1731,2.726,1732,4.067,1733,2.726,1734,2.726,1735,2.726,1736,2.726,1737,2.726,1738,2.726,1739,2.726,1740,2.726,1741,2.726,1742,2.726,1743,2.726,1744,4.067,1745,2.726,1746,2.726,1747,2.726,1748,3.496,1749,2.726,1750,2.726,1751,2.726,1752,2.726,1753,2.726,1754,2.726,1755,2.726,1756,4.067,1757,2.726,1758,2.343,1759,2.726,1760,2.726,1761,2.726,1762,2.726,1763,2.726,1764,3.496,1765,2.726,1766,2.343,1767,2.343,1768,2.726,1769,2.726,1770,2.726,1771,2.726,1772,2.726,1773,2.726,1774,2.726,1775,2.726,1776,4.067,1777,2.726,1778,4.864,1779,4.864,1780,2.726,1781,2.726,1782,2.726,1783,2.726,1784,2.726,1785,4.067,1786,4.864,1787,4.864,1788,5.393,1789,2.726,1790,2.726,1791,2.726,1792,2.726,1793,2.726,1794,6.705,1795,6.444,1796,2.726,1797,2.726]],["title/modules/TemplatePlaygroundModule.html",[41,1.149,1798,2.593]],["body/modules/TemplatePlaygroundModule.html",[0,0.033,3,0.279,4,0.252,5,0.226,12,0.019,25,0.547,34,0.279,39,0.014,40,0.014,41,1.392,43,1.877,44,1.782,45,2.354,46,3.324,47,2.955,48,3.324,49,2.354,57,3.014,58,1.98,59,2.354,61,2.509,326,2.217,327,2.509,359,2.509,361,3.141,362,3.706,363,3.014,364,3.141,365,3.706,366,2.893,367,3.141,368,3.706,369,2.686,370,3.141,552,4.486,1798,5.27,1799,3.868,1800,3.868,1801,3.868,1802,3.868,1803,4.5,1804,5.761,1805,5.761,1806,4.5,1807,3.868,1808,5.761,1809,4.5,1810,5.761,1811,4.5,1812,5.761,1813,4.5]],["title/classes/UpdateEmployeeDto.html",[0,0.027,745,2.071]],["body/classes/UpdateEmployeeDto.html",[0,0.05,2,1.759,3,0.29,4,0.262,5,0.234,10,1.95,11,0.408,12,0.019,16,2.631,20,0.722,22,3.262,25,0.532,26,2.744,27,3.62,28,1.851,29,2.744,30,3.258,32,3.606,33,2.174,34,0.366,35,2.765,39,0.014,40,0.014,68,0.679,80,2.79,219,2.79,276,3.004,501,1.95,706,2.79,707,3.585,709,3.004,710,2.79,711,2.79,713,4.018,716,4.018,717,3.004,725,4.018,727,2.445,731,2.302,732,3.522,733,4.527,734,3.004,735,3.004,736,3.004,737,2.79,738,4.018,739,4.018,740,4.018,741,4.018,742,3.585,743,4.018,744,4.018,745,3.29,746,3.087,747,5.072]],["title/classes/UpdateSkillDto.html",[0,0.027,756,2.217]],["body/classes/UpdateSkillDto.html",[0,0.052,2,1.984,3,0.327,4,0.295,5,0.264,11,0.46,12,0.019,25,0.527,26,2.956,27,3.131,28,2.088,29,2.956,30,3.174,33,2.452,34,0.394,35,2.568,39,0.015,40,0.015,68,0.607,501,2.2,731,2.597,734,3.39,735,3.39,736,3.39,746,3.326,748,3.147,749,4.045,750,2.167,754,4.533,755,4.533,756,3.795,757,5.465]],["title/injectables/ZipExportService.html",[214,0.821,365,1.943]],["body/injectables/ZipExportService.html",[0,0.026,3,0.217,4,0.196,5,0.304,7,0.329,11,0.489,12,0.019,18,1.014,20,0.983,25,0.26,34,0.217,39,0.012,40,0.012,62,1.436,67,1.245,68,0.561,69,1.131,71,1.575,72,2.265,100,0.938,103,1.706,133,3.131,197,2.139,214,1.077,221,1.136,260,3.009,326,2.983,359,1.952,363,3.168,365,2.548,366,4.092,369,2.09,371,1.628,372,2.443,377,2.25,378,2.09,387,2.443,388,4.606,389,4.346,399,2.443,420,3.601,430,2.443,489,2.716,506,2.443,616,2.25,622,2.548,638,3.343,658,3.4,664,2.25,675,4.6,679,3.893,691,2.399,693,2.443,694,2.443,695,2.443,696,2.443,697,2.443,698,2.443,794,1.46,862,3.601,1177,2.685,1178,2.685,1212,3.009,1236,2.685,1241,4.187,1253,3.009,1355,3.736,1446,3.009,1494,5.205,1748,3.009,1758,4.815,1764,4.815,1766,4.187,1767,4.815,1814,4.645,1815,2.685,1816,4.871,1817,4.871,1818,6.056,1819,4.871,1820,3.501,1821,4.871,1822,3.501,1823,6.894,1824,3.501,1825,3.736,1826,3.501,1827,3.501,1828,3.501,1829,4.815,1830,3.501,1831,3.501,1832,3.501,1833,3.501,1834,3.501,1835,3.501,1836,3.501,1837,3.501,1838,3.501,1839,3.501,1840,3.501,1841,3.501,1842,3.501,1843,3.501,1844,3.501,1845,4.871,1846,3.501,1847,4.871,1848,3.501,1849,3.501,1850,3.501,1851,3.501,1852,3.501,1853,3.501,1854,3.501,1855,3.501,1856,3.501,1857,3.501,1858,3.501,1859,5.601,1860,3.501,1861,3.501,1862,3.501,1863,3.501,1864,3.501,1865,3.501,1866,3.501,1867,3.501,1868,4.871,1869,3.009,1870,3.501,1871,3.501,1872,3.501,1873,3.501,1874,3.501,1875,3.501,1876,3.501,1877,3.501,1878,3.501,1879,3.501,1880,3.501,1881,3.501]],["title/coverage.html",[401,3.262]],["body/coverage.html",[0,0.052,1,1.964,5,0.153,6,2.626,10,2.168,11,0.527,12,0.019,16,2.039,39,0.011,40,0.011,47,2.057,60,3.392,87,1.824,89,1.964,94,2.133,97,4.637,147,2.806,148,2.133,150,2.626,169,2.133,176,1.598,179,2.133,194,3.087,196,2.626,214,1.543,218,2.344,220,2.344,221,0.992,288,1.964,301,2.626,302,1.505,306,1.704,323,2.327,324,1.964,326,3.393,327,3.514,328,3.976,354,1.824,362,1.598,363,1.598,365,1.598,368,1.598,373,1.964,401,1.964,478,3.621,552,1.824,622,1.598,638,1.824,706,1.824,707,3.392,711,1.824,745,1.704,748,1.824,749,3.392,750,1.041,756,1.824,758,3.628,777,2.344,780,1.964,784,1.704,787,1.824,795,3.392,800,3.087,846,2.133,847,2.626,906,1.964,930,1.704,932,3.102,936,1.704,1019,3.392,1049,1.824,1139,3.628,1140,3.628,1163,3.392,1164,3.392,1273,2.133,1274,2.626,1314,2.344,1315,2.626,1318,2.344,1319,2.626,1320,2.626,1337,2.344,1338,2.626,1345,2.133,1346,3.392,1349,1.964,1354,2.626,1398,2.626,1583,2.344,1584,2.626,1600,2.626,1604,2.344,1611,2.626,1617,3.628,1620,2.344,1622,2.133,1623,2.626,1640,1.824,1671,2.626,1672,2.626,1675,2.626,1702,3.392,1724,2.344,1814,3.392,1815,3.392,1825,2.344,1882,3.055,1883,3.055,1884,4.422,1885,6.976,1886,7.454,1887,4.422,1888,3.055,1889,3.055,1890,6.656,1891,2.626,1892,2.626,1893,4.422,1894,2.626,1895,5.198,1896,2.626,1897,3.801,1898,3.801,1899,6.888,1900,4.422,1901,3.055,1902,5.697,1903,3.055,1904,4.422,1905,2.626,1906,3.392,1907,2.626,1908,2.626,1909,3.055,1910,3.055,1911,3.055]],["title/dependencies.html",[44,1.77,667,1.993]],["body/dependencies.html",[5,0.246,12,0.019,28,1.944,39,0.015,40,0.015,44,1.944,75,1.196,77,4.221,82,2.284,85,4.221,170,2.048,216,3.427,217,4.669,295,3.427,386,3.427,775,2.931,1284,3.767,1308,4.221,1328,5.074,1329,4.221,1343,4.221,1442,5.685,1444,4.221,1445,4.221,1452,4.221,1912,6.086,1913,6.614,1914,4.91,1915,6.086,1916,4.91,1917,4.91,1918,4.91,1919,4.91,1920,4.91,1921,4.91,1922,4.91,1923,4.91,1924,4.91,1925,4.91,1926,4.91,1927,4.91,1928,4.91,1929,4.91,1930,4.91,1931,4.91,1932,4.91,1933,4.91,1934,4.91,1935,4.91,1936,4.91,1937,4.91,1938,4.91,1939,4.91,1940,4.91,1941,4.91,1942,4.221,1943,4.91,1944,4.91,1945,4.91,1946,4.91]],["title/miscellaneous/enumerations.html",[1947,1.622,1948,3.841]],["body/miscellaneous/enumerations.html",[7,0.549,12,0.018,39,0.016,40,0.016,226,4.032,305,2.973,727,3.534,1947,3.058,1948,5.024,1949,5.845,1950,5.845,1951,6.755]],["title/miscellaneous/functions.html",[1947,1.622,1952,3.841]],["body/miscellaneous/functions.html",[7,0.504,11,0.561,12,0.018,20,1.125,39,0.016,40,0.016,47,3.44,60,4.116,67,1.642,68,0.74,69,1.491,71,1.933,72,2.496,98,4.613,99,4.613,102,4.613,500,3.746,1211,4.613,1891,5.522,1892,5.522,1894,4.613,1905,4.613,1906,4.116,1907,5.911,1947,2.807,1952,4.613,1953,5.366,1954,5.366,1955,6.425,1956,4.613]],["title/index.html",[7,0.349,1829,3.193]],["body/index.html",[12,0.016,39,0.016,40,0.016,143,4.462,149,2.705,397,3.739,824,2.705,842,4.06,1054,4.462,1475,5,1565,5,1957,5.817,1958,5.817,1959,5.817,1960,5.817,1961,5.817,1962,5.817,1963,5.817,1964,5.817,1965,5.817]],["title/modules.html",[43,2.117]],["body/modules.html",[12,0.016,39,0.016,40,0.016,42,3.848,43,2.299,52,3.544,53,3.544,54,3.29,55,3.544,56,3.544,141,4.229,398,3.848,1393,3.848,1798,3.848,1807,6.462,1966,7.518,1967,7.518,1968,7.575]],["title/overview.html",[396,3.029]],["body/overview.html",[2,1.563,12,0.019,39,0.013,40,0.013,41,1.285,42,5.185,43,1.733,44,1.645,45,2.173,46,2.173,47,1.932,48,2.173,49,2.173,50,3.571,51,3.571,52,4.61,53,4.543,54,4.372,55,3.93,56,4.456,57,2.861,58,1.828,59,2.173,133,2.67,149,1.932,176,3.399,195,3.186,284,3.571,285,3.571,287,3.571,288,3.93,302,3.533,306,3.94,325,2.173,354,2.479,362,3.199,365,3.199,368,3.199,380,2.899,396,2.479,478,1.932,489,2.316,552,4.218,782,3.571,783,3.571,784,3.999,794,1.733,1014,3.571,1015,3.571,1393,4.712,1394,3.571,1395,3.571,1396,3.571,1640,4.218,1665,3.571,1666,3.571,1667,3.571,1798,5.152,1799,3.571,1800,3.571,1801,3.571,1802,3.571,1969,4.154,1970,4.154,1971,4.154,1972,4.154]],["title/properties.html",[8,0.809,667,1.993]],["body/properties.html",[8,1.069,12,0.018,39,0.016,40,0.016,1942,5.073,1973,5.901,1974,5.901,1975,5.901,1976,5.901,1977,5.901]],["title/routes.html",[400,3.262]],["body/routes.html",[12,0.017,39,0.017,40,0.017,400,3.888]],["title/miscellaneous/typealiases.html",[1947,1.622,1978,4.469]],["body/miscellaneous/typealiases.html",[7,0.537,11,0.499,12,0.016,39,0.016,40,0.016,758,3.993,776,5.118,777,5.118,795,4.388,800,5.079,817,4.657,1019,4.388,1617,3.993,1620,5.118,1947,2.993,1979,5.721,1980,4.917,1981,4.917,1982,5.721,1983,5.721]],["title/miscellaneous/variables.html",[1947,1.622,1984,3.841]],["body/miscellaneous/variables.html",[4,0.256,7,0.429,11,0.63,12,0.019,13,3.189,20,0.898,39,0.014,40,0.014,138,1.719,179,4.06,218,4.462,220,4.462,230,3.927,245,4.462,304,2.897,305,3.25,326,3.152,327,2.547,397,2.937,596,2.39,622,3.043,711,4.152,727,2.39,758,3.189,780,3.739,781,3.927,787,3.472,1163,3.504,1164,4.462,1355,3.504,1604,4.462,1617,3.189,1621,3.927,1702,4.462,1724,4.462,1814,3.504,1815,4.462,1825,4.462,1869,3.927,1896,3.927,1897,3.927,1898,3.927,1906,3.504,1908,5,1947,2.39,1956,3.927,1980,3.927,1981,3.927,1984,3.927,1985,4.568,1986,5.816,1987,4.568,1988,4.568,1989,4.568,1990,5.816,1991,4.568,1992,4.568,1993,4.568,1994,4.568,1995,4.568,1996,4.568,1997,4.568,1998,4.568,1999,4.568,2000,4.568,2001,4.568,2002,4.568]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":478,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"coverage.html":{},"overview.html":{}}}],["0.125rem",{"_index":528,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.15s",{"_index":513,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.25rem",{"_index":537,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.375rem",{"_index":535,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":471,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5",{"_index":1295,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.5px",{"_index":505,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":467,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7",{"_index":520,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7.0",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["0.75rem",{"_index":522,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.875rem",{"_index":457,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0/1",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["004085",{"_index":543,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":542,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":516,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1",{"_index":489,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["1.0.0",{"_index":1942,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["1.10.2",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["1.12.2",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":507,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10",{"_index":840,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["100",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["1000",{"_index":1312,"title":{},"body":{"modules/HealthModule.html":{}}}],["100vh",{"_index":426,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1024",{"_index":1300,"title":{},"body":{"controllers/HealthController.html":{}}}],["10px",{"_index":1248,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["11",{"_index":1970,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["11.1.6",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":529,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["13",{"_index":1971,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1735,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["14d",{"_index":1523,"title":{},"body":{"injectables/LoggerService.html":{}}}],["150",{"_index":1303,"title":{},"body":{"controllers/HealthController.html":{}}}],["17.2.1",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["1c7430",{"_index":550,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":549,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":485,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1px",{"_index":451,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":445,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["2.2.0",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":864,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["200px",{"_index":474,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["20m",{"_index":1520,"title":{},"body":{"injectables/LoggerService.html":{}}}],["20px",{"_index":1243,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["250",{"_index":1297,"title":{},"body":{"controllers/HealthController.html":{}}}],["250px",{"_index":492,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["256",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["28a745",{"_index":465,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2rem",{"_index":446,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":1867,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["3.0.2",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["3.17.0",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["30.1.2",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":566,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["300ms",{"_index":567,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4",{"_index":1969,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":867,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["495057",{"_index":499,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4e555b",{"_index":547,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":512,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["5",{"_index":841,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["5.0.0",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":525,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["500",{"_index":538,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["545b62",{"_index":546,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["6.4.0",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":498,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["6c757d",{"_index":459,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7",{"_index":1972,"title":{},"body":{"overview.html":{}}}],["8",{"_index":380,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"overview.html":{}}}],["8.18.0",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":1077,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["a.click",{"_index":697,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":695,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.href",{"_index":694,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.style.display",{"_index":1880,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["acceptsuggestiononenter",{"_index":1751,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["access",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{}}}],["access_token",{"_index":321,"title":{},"body":{"classes/AuthService.html":{}}}],["accessors",{"_index":1409,"title":{},"body":{"injectables/LoggerService.html":{}}}],["action",{"_index":654,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["actions",{"_index":466,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["active",{"_index":662,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["add",{"_index":862,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"controllers/SkillController.html":{},"injectables/ZipExportService.html":{}}}],["added",{"_index":865,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["additional",{"_index":1848,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["address",{"_index":713,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["addskillsdto",{"_index":1029,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["addskillsdto.empid",{"_index":1126,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["addskillsdto.skills",{"_index":1127,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["addskillsemployeedto",{"_index":1,"title":{"classes/AddSkillsEmployeeDto.html":{}},"body":{"classes/AddSkillsEmployeeDto.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"coverage.html":{}}}],["addskillsemployeedto:addskillsemployeedto",{"_index":961,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addskillsemployeedto})@apioperation({summary",{"_index":861,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addskillstoemployee",{"_index":848,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["addskillstoemployee(@res",{"_index":960,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addskillstoemployee(addskillsdto",{"_index":1027,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["addskillstoemployee(addskillsdto:addskillsemployeedto",{"_index":1125,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["addskillstoemployee(response",{"_index":859,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addskillstoemployee.name",{"_index":962,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["admin",{"_index":1951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["again",{"_index":665,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["alias",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1979,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":441,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["alreadt",{"_index":1060,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["already",{"_index":1691,"title":{},"body":{"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{}}}],["always",{"_index":1748,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["angular/common",{"_index":1809,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["angular/common/http",{"_index":361,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/core",{"_index":359,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["angular/forms",{"_index":1811,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["angular/platform",{"_index":1806,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["api",{"_index":1565,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":571,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["apibearerauth",{"_index":927,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["apibody",{"_index":926,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apioperation",{"_index":928,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["apiproperty",{"_index":26,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/SkillSelectionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":1673,"title":{},"body":{"classes/SkillSelectionDto.html":{}}}],["apiproperty({description",{"_index":15,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{}}}],["apipropertyoptional",{"_index":27,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["apipropertyoptional({description",{"_index":21,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["apiresponse",{"_index":929,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["apitags",{"_index":925,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["apitags('employee",{"_index":938,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apitags('skill",{"_index":1644,"title":{},"body":{"controllers/SkillController.html":{}}}],["app",{"_index":1257,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["app_guard",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["appearance",{"_index":1846,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["apple",{"_index":429,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["application",{"_index":1958,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":42,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":1220,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":1222,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":1221,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arial",{"_index":1242,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["array",{"_index":22,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"injectables/LoggerService.html":{},"classes/UpdateEmployeeDto.html":{}}}],["assigning",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{}}}],["async_hooks",{"_index":1449,"title":{},"body":{"injectables/LoggerService.html":{}}}],["asynclocalstorage",{"_index":1437,"title":{},"body":{"injectables/LoggerService.html":{}}}],["attribute.name",{"_index":1786,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":1788,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["auth",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["auth.controller",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.service",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/decorators/roles.decorator",{"_index":924,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["auth/roles.guard",{"_index":1643,"title":{},"body":{"controllers/SkillController.html":{}}}],["authcontroller",{"_index":148,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authenticating",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authenticion",{"_index":1960,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":87,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":52,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1977,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1961,"title":{},"body":{"index.html":{}}}],["authorizing",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authservice",{"_index":176,"title":{"classes/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1372,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["auto",{"_index":495,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["autoclosingbrackets",{"_index":1747,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":1793,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":1749,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automatically",{"_index":640,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":1730,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["available",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules.html":{}}}],["await",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{}}}],["axios",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":447,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["backup",{"_index":1868,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["bad",{"_index":958,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["badge",{"_index":527,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["badrequestexception",{"_index":814,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["base",{"_index":1957,"title":{},"body":{"index.html":{}}}],["bash",{"_index":1853,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["basic",{"_index":1240,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["bcryptjs",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{}}}],["before",{"_index":1871,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["between",{"_index":440,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["black",{"_index":1550,"title":{},"body":{"injectables/LoggerService.html":{}}}],["blinkmacsystemfont",{"_index":431,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":675,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["blockcomment",{"_index":1791,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["body",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"injectables/HbsRenderService.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{},"dependencies.html":{}}}],["body[${json.stringify",{"_index":1377,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["bold",{"_index":464,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["boolean",{"_index":353,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bootstrap",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["border",{"_index":449,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bottom",{"_index":450,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["brackets",{"_index":1792,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["break",{"_index":1195,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["browse",{"_index":1968,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1807,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{}}}],["browsermodule",{"_index":1805,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["btn",{"_index":534,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["buffer",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["buffer.concat([decrypted",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer.from(encryptedtext",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer.from(ivtext",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["calculate",{"_index":819,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["calculateengagementscore",{"_index":796,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["calculateengagementscore(updateemployeedto",{"_index":802,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["call",{"_index":668,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["callback",{"_index":1721,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["callhandler",{"_index":1587,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["caluclate",{"_index":1116,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["canactivate",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["case",{"_index":1194,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"injectables/TemplateEditorService.html":{}}}],["catch",{"_index":581,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{}}}],["catch(error",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{}}}],["caught",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cbc",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["center",{"_index":443,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["change",{"_index":616,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["changes",{"_index":1873,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["check",{"_index":1130,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{}}}],["class",{"_index":0,"title":{"classes/AddSkillsEmployeeDto.html":{},"classes/AuthService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"classes/SkillSelectionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/AuthService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"classes/SkillSelectionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"overview.html":{}}}],["clear",{"_index":624,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cleartimeout(this.savetimeout",{"_index":586,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["click",{"_index":1268,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["close",{"_index":1795,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["cluster_appmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_employeeanalyticsmodule",{"_index":782,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"overview.html":{}}}],["cluster_employeeanalyticsmodule_providers",{"_index":783,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":1014,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_exports",{"_index":1015,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_providers",{"_index":1016,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["cluster_loggermodule",{"_index":1394,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1395,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1396,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_skillmodule",{"_index":1665,"title":{},"body":{"modules/SkillModule.html":{},"overview.html":{}}}],["cluster_skillmodule_exports",{"_index":1667,"title":{},"body":{"modules/SkillModule.html":{},"overview.html":{}}}],["cluster_skillmodule_providers",{"_index":1666,"title":{},"body":{"modules/SkillModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule",{"_index":1799,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":1800,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":1801,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":1802,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["code",{"_index":397,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["collection",{"_index":1100,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["color",{"_index":458,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["colorizelevel",{"_index":1400,"title":{},"body":{"injectables/LoggerService.html":{}}}],["colorizelevel(level",{"_index":1411,"title":{},"body":{"injectables/LoggerService.html":{}}}],["colors",{"_index":1446,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/ZipExportService.html":{}}}],["colors.bgblue(method",{"_index":1560,"title":{},"body":{"injectables/LoggerService.html":{}}}],["colors.bggreen(duration.tostring",{"_index":1562,"title":{},"body":{"injectables/LoggerService.html":{}}}],["colors.blue(url",{"_index":1561,"title":{},"body":{"injectables/LoggerService.html":{}}}],["colors.dim",{"_index":1559,"title":{},"body":{"injectables/LoggerService.html":{}}}],["colors/safe",{"_index":1447,"title":{},"body":{"injectables/LoggerService.html":{}}}],["column",{"_index":424,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columns",{"_index":481,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["comment",{"_index":1778,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["comments",{"_index":1744,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["common",{"_index":1184,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["commonmodule",{"_index":1808,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["compare",{"_index":1188,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["complete",{"_index":1235,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["complex",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compodoc",{"_index":389,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["compodocconfig",{"_index":324,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":354,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"overview.html":{}}}],["components",{"_index":1214,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{}}}],["condition",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{}}}],["conditional",{"_index":1200,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["config",{"_index":386,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"dependencies.html":{}}}],["configmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["configure",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm('are",{"_index":650,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["conflictexception",{"_index":815,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["console",{"_index":1536,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.error('error",{"_index":582,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('no",{"_index":661,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('winston",{"_index":1530,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.log",{"_index":952,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["console.log(\"employee",{"_index":1086,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["console.log(\"required",{"_index":1088,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["console.log('creating",{"_index":666,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('existing",{"_index":1007,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["console.log('in",{"_index":978,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["console.log('reset",{"_index":659,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":593,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('template",{"_index":700,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log(decrypted.tostring(),\"====================decrypted",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["console.warn('could",{"_index":1533,"title":{},"body":{"injectables/LoggerService.html":{}}}],["const",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/Employee.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["constants",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateEmployeeDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["construct",{"_index":681,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructor",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{}}}],["constructor(@injectmodel('employee",{"_index":1050,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["constructor(@injectmodel('skill",{"_index":1686,"title":{},"body":{"injectables/SkillService.html":{}}}],["constructor(authservice",{"_index":1339,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(data",{"_index":1141,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["constructor(employeemodel",{"_index":1022,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["constructor(employeeservice",{"_index":799,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["constructor(jwtservice",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{}}}],["constructor(private",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/SkillController.html":{}}}],["constructor(reflector",{"_index":1601,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(skillmodel",{"_index":1676,"title":{},"body":{"injectables/SkillService.html":{}}}],["constructors",{"_index":407,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["consumer",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware).forroutes",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["container",{"_index":530,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["containing",{"_index":1859,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["contains",{"_index":1838,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["content",{"_index":438,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["contentdisposition",{"_index":682,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":687,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1841,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["context",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getresponse",{"_index":1595,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["contextformatted",{"_index":1481,"title":{},"body":{"injectables/LoggerService.html":{}}}],["continuing",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":147,"title":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/HealthController.html":{},"controllers/SkillController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/HealthController.html":{},"controllers/SkillController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('employee",{"_index":939,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["controller('health",{"_index":1285,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('skill",{"_index":1646,"title":{},"body":{"controllers/SkillController.html":{}}}],["controllers",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"index.html":{},"overview.html":{}}}],["corresponding",{"_index":1118,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["count",{"_index":1091,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["count:count",{"_index":1094,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["coverage",{"_index":401,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["create",{"_index":596,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":594,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{}}}],["createemployee",{"_index":849,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["createemployee(@res",{"_index":944,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createemployee(createemployeedto",{"_index":1030,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["createemployee(response",{"_index":869,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createemployee.name",{"_index":949,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["createemployeedto",{"_index":706,"title":{"classes/CreateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["createemployeedto.name",{"_index":1056,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["createemployeedto})@apioperation({summary",{"_index":871,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createemployeedto})@apiresponse({status",{"_index":866,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createsession",{"_index":587,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createskill",{"_index":1624,"title":{},"body":{"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["createskill(@res",{"_index":1649,"title":{},"body":{"controllers/SkillController.html":{}}}],["createskill(createskilldto",{"_index":1678,"title":{},"body":{"injectables/SkillService.html":{}}}],["createskill(response",{"_index":1628,"title":{},"body":{"controllers/SkillController.html":{}}}],["createskilldto",{"_index":748,"title":{"classes/CreateSkillDto.html":{}},"body":{"classes/CreateSkillDto.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"classes/UpdateSkillDto.html":{},"coverage.html":{}}}],["createskilldto.name",{"_index":1688,"title":{},"body":{"injectables/SkillService.html":{}}}],["createskilldto})@apiresponse({status",{"_index":1630,"title":{},"body":{"controllers/SkillController.html":{}}}],["creation",{"_index":671,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["crypto",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEmployeeDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["crypto.createdecipheriv('aes",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["crypto.createhash('sha256').update(key).digest",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["css",{"_index":1764,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["cursor",{"_index":509,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["custom",{"_index":1758,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["customfavicon",{"_index":329,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customization",{"_index":1860,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customization.html",{"_index":1877,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":1862,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customized",{"_index":1839,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":1845,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["cyan",{"_index":1486,"title":{},"body":{"injectables/LoggerService.html":{}}}],["daily",{"_index":1444,"title":{},"body":{"injectables/LoggerService.html":{},"dependencies.html":{}}}],["dailyrotatefile",{"_index":1443,"title":{},"body":{"injectables/LoggerService.html":{}}}],["dark",{"_index":392,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["data",{"_index":824,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"index.html":{}}}],["data'})@apiresponse({status",{"_index":892,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["data'})@isarray()@isobject",{"_index":1159,"title":{},"body":{"classes/GetMatchedEmployeeSkillsResponse.html":{}}}],["data'})@isstring",{"_index":1143,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{}}}],["data.count",{"_index":1151,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["data.employeedata",{"_index":1155,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["data.employeskill",{"_index":1153,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["data.name",{"_index":1147,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["data.skillids",{"_index":1149,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["data:getmatchedemployeeskillsresponse",{"_index":1093,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["database",{"_index":832,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["database'})@apiresponse({status",{"_index":863,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["date",{"_index":562,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"injectables/EmployeeAnalyticsService.html":{},"interfaces/IEmployee.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["date%.log",{"_index":1498,"title":{},"body":{"injectables/LoggerService.html":{}}}],["date().toisostring",{"_index":1390,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{}}}],["date.now",{"_index":1369,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["date:'short",{"_index":385,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["datepattern",{"_index":1516,"title":{},"body":{"injectables/LoggerService.html":{}}}],["db",{"_index":842,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/SkillService.html":{},"index.html":{}}}],["db_host",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db_pass",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db_user",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbname",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["dd",{"_index":1466,"title":{},"body":{"injectables/LoggerService.html":{}}}],["ddd",{"_index":1245,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["debounce",{"_index":568,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":614,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debug",{"_index":1401,"title":{},"body":{"injectables/LoggerService.html":{}}}],["debug(message",{"_index":1413,"title":{},"body":{"injectables/LoggerService.html":{}}}],["decipher",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["decipher.final",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["decipher.update(encrypted",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["declare",{"_index":1177,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoded",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{}}}],["decoration",{"_index":539,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"controllers/AuthController.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"controllers/HealthController.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"classes/SkillSelectionDto.html":{}}}],["decorators/public.decorator",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["decorators/roles.decorator",{"_index":1605,"title":{},"body":{"guards/RolesGuard.html":{}}}],["decrypt",{"_index":1891,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["decrypt(text",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["decrypted",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["decrypted.tostring().trim",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["dee2e6",{"_index":453,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["default",{"_index":304,"title":{},"body":{"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"interfaces/Session.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["definitions",{"_index":1759,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["delete",{"_index":876,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["delete(':employeename",{"_index":1009,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["delete(':employeename')@roles(role.admin)@apioperation({summary",{"_index":875,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["delete(':skill",{"_index":1656,"title":{},"body":{"controllers/SkillController.html":{}}}],["delete(':skill')@roles(role.admin)@apioperation({summary",{"_index":1633,"title":{},"body":{"controllers/SkillController.html":{}}}],["deleted",{"_index":879,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["deletedemployee",{"_index":1012,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["deletedskill",{"_index":1659,"title":{},"body":{"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["deleteemployee",{"_index":850,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["deleteemployee(@res",{"_index":1010,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["deleteemployee(empname",{"_index":1032,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["deleteemployee(response",{"_index":873,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["deleteemployee.name",{"_index":1011,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["deleteskill",{"_index":1625,"title":{},"body":{"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["deleteskill(@res",{"_index":1657,"title":{},"body":{"controllers/SkillController.html":{}}}],["deleteskill(response",{"_index":1632,"title":{},"body":{"controllers/SkillController.html":{}}}],["deleteskill(skill",{"_index":1680,"title":{},"body":{"injectables/SkillService.html":{}}}],["delimiter",{"_index":1787,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["demonstration",{"_index":1259,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dependencies",{"_index":44,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CompoDocConfig.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/LoggerModule.html":{},"interfaces/Session.html":{},"modules/SkillModule.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":1206,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["description",{"_index":35,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"controllers/EmployeeController.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"interfaces/ISkill.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["description'})@isstring",{"_index":751,"title":{},"body":{"classes/CreateSkillDto.html":{}}}],["description:string",{"_index":755,"title":{},"body":{"classes/CreateSkillDto.html":{},"classes/UpdateSkillDto.html":{}}}],["designation",{"_index":725,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["destroy",{"_index":1704,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["details",{"_index":1566,"title":{},"body":{"injectables/LoggerService.html":{}}}],["development",{"_index":1385,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{}}}],["developmentformat",{"_index":1461,"title":{},"body":{"injectables/LoggerService.html":{}}}],["different",{"_index":1475,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["direction",{"_index":423,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["directory",{"_index":1494,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/ZipExportService.html":{}}}],["disable",{"_index":395,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableconstructors",{"_index":330,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":331,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":332,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":333,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":334,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":335,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":336,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":337,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":338,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":339,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":340,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":341,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":342,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":343,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesearch",{"_index":344,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":345,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":346,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":347,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disk",{"_index":1287,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":1280,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":421,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disposition",{"_index":684,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["doctype",{"_index":1780,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":773,"title":{},"body":{"classes/Employee.html":{},"injectables/HbsRenderService.html":{},"classes/Skill.html":{}}}],["document.body.appendchild(a",{"_index":696,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(a",{"_index":698,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('a",{"_index":693,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["documentation",{"_index":638,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["documentation/.../hbs",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../template",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../zip",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/template",{"_index":326,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentationmainname",{"_index":1254,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["documents",{"_index":1131,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["doesn't",{"_index":830,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{}}}],["dom",{"_index":408,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["dotenv",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":387,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["downloadblob",{"_index":1816,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":1819,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloaded",{"_index":701,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["downloading",{"_index":702,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["duration",{"_index":1351,"title":{},"body":{"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{}}}],["e9ecef",{"_index":469,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":1201,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ease",{"_index":472,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editor",{"_index":524,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":364,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":1702,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":1723,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":1715,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":1709,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":1718,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":1720,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":1711,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":1716,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":1722,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":555,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorservice",{"_index":573,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["elementref",{"_index":357,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["email",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/IEmployee.html":{},"classes/UpdateEmployeeDto.html":{}}}],["email:string",{"_index":739,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["empid",{"_index":9,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"injectables/EmployeeService.html":{}}}],["empid:object",{"_index":37,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{}}}],["employee",{"_index":16,"title":{"classes/Employee.html":{}},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/SkillService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["employee'})@isarray",{"_index":728,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["employee'})@isdate",{"_index":720,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee'})@isnumber",{"_index":718,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee'})@isstring",{"_index":714,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee)'})@apiresponse({status",{"_index":918,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employee.controller",{"_index":1018,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.name",{"_index":792,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{}}}],["employee.service",{"_index":789,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{}}}],["employee/employee.module",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{}}}],["employee/employee.service",{"_index":311,"title":{},"body":{"classes/AuthService.html":{}}}],["employeeanalytics.service",{"_index":790,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{}}}],["employeeanalyticsmodule",{"_index":53,"title":{"modules/EmployeeAnalyticsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules.html":{},"overview.html":{}}}],["employeeanalyticsservice",{"_index":784,"title":{"injectables/EmployeeAnalyticsService.html":{}},"body":{"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"coverage.html":{},"overview.html":{}}}],["employeecontroller",{"_index":846,"title":{"controllers/EmployeeController.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"coverage.html":{}}}],["employeecontroller.name",{"_index":947,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employeedata",{"_index":1000,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["employeedata.length",{"_index":1103,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeedata:getmatchedemployeeallskillsresponse",{"_index":1072,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeedata:getmatchedemployeeskillsresponsedto",{"_index":1089,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["employeedocument",{"_index":777,"title":{},"body":{"classes/Employee.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["employeefilter",{"_index":1128,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeeid",{"_index":1058,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeemodel",{"_index":1026,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeemodel:model",{"_index":1051,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeemodule",{"_index":54,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["employeename",{"_index":874,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["employees",{"_index":885,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["employeeschema",{"_index":780,"title":{},"body":{"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["employeeservice",{"_index":302,"title":{"injectables/EmployeeService.html":{}},"body":{"classes/AuthService.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"coverage.html":{},"overview.html":{}}}],["employeeservice.name",{"_index":1055,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeeservice:employeeservice",{"_index":313,"title":{},"body":{"classes/AuthService.html":{}}}],["employeeskills",{"_index":1075,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeesofskill",{"_index":1110,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeesoutput",{"_index":1112,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeesoutput.push(userjson",{"_index":1114,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["empname",{"_index":1034,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["empname:string",{"_index":825,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["empskill",{"_index":904,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SkillSelectionDto.html":{}}}],["empskill:skill",{"_index":1095,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["empskill:string",{"_index":991,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["enabled",{"_index":1732,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["encrypted",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["encryptedtext",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":1963,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":672,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["engagement",{"_index":820,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{}}}],["engagementscore",{"_index":708,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"injectables/EmployeeService.html":{},"interfaces/IEmployee.html":{}}}],["engagementscore:number",{"_index":743,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["ensure",{"_index":1501,"title":{},"body":{"injectables/LoggerService.html":{}}}],["enumerations",{"_index":1948,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1347,"title":{},"body":{"interfaces/LoggerConfig.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{}}}],["err",{"_index":955,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["error",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{}}}],["error('failed",{"_index":595,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error(message",{"_index":1416,"title":{},"body":{"injectables/LoggerService.html":{}}}],["error.message",{"_index":1252,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["etc",{"_index":1866,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["events",{"_index":1269,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["example",{"_index":1213,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["exceedds",{"_index":1296,"title":{},"body":{"controllers/HealthController.html":{}}}],["exceeds",{"_index":1292,"title":{},"body":{"controllers/HealthController.html":{}}}],["exec",{"_index":1059,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["executioncontext",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["exist",{"_index":831,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{}}}],["existing",{"_index":625,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["existingemployee",{"_index":827,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["existingemployee.hiredate",{"_index":834,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["existingemployee.skills",{"_index":833,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["existingskill",{"_index":974,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/SkillService.html":{}}}],["exists",{"_index":1061,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/SkillService.html":{}}}],["exitonerror",{"_index":1539,"title":{},"body":{"injectables/LoggerService.html":{}}}],["expect",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["expiresin",{"_index":299,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{}}}],["export.service",{"_index":367,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":1815,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":1822,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":1824,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":1820,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["exporttemplates",{"_index":1817,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":1821,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exportzip",{"_index":660,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":746,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Skill.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["extract",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ZipExportService.html":{}}}],["extracted",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extractjwt",{"_index":1326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracttokenfromheader",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{}}}],["f0f8ff",{"_index":1247,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f8f9fa",{"_index":448,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["failed",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["false",{"_index":561,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["family",{"_index":428,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fetch",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["fetched",{"_index":887,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["ffc107",{"_index":462,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fff5f5",{"_index":1251,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["field",{"_index":1117,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{}}}],["file.content",{"_index":1828,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filename",{"_index":679,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":686,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":688,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":1823,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["files.foreach(file",{"_index":1826,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1712,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["filter",{"_index":1065,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["first",{"_index":602,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fit",{"_index":483,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["flag",{"_index":1850,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["flex",{"_index":422,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["font",{"_index":427,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":1864,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1734,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["format",{"_index":1084,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{}}}],["formatters",{"_index":1458,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formsmodule",{"_index":1810,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["forwardref",{"_index":810,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"modules/SkillModule.html":{}}}],["found",{"_index":881,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["frame",{"_index":533,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["framework",{"_index":1959,"title":{},"body":{"index.html":{}}}],["fs",{"_index":1453,"title":{},"body":{"injectables/LoggerService.html":{}}}],["fs.existssync(logdir",{"_index":1502,"title":{},"body":{"injectables/LoggerService.html":{}}}],["fs.mkdirsync(logdir",{"_index":1503,"title":{},"body":{"injectables/LoggerService.html":{}}}],["fs.unlinksync(testfile",{"_index":1512,"title":{},"body":{"injectables/LoggerService.html":{}}}],["fs.writefilesync(testfile",{"_index":1511,"title":{},"body":{"injectables/LoggerService.html":{}}}],["function",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/TemplateEditorService.html":{},"coverage.html":{}}}],["functionality",{"_index":658,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["functions",{"_index":1952,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gap",{"_index":455,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["gb",{"_index":1298,"title":{},"body":{"controllers/HealthController.html":{}}}],["generate",{"_index":1833,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generated",{"_index":1878,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generatereadme",{"_index":1818,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generating",{"_index":1842,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generation",{"_index":1840,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generator",{"_index":391,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["get(':employeename",{"_index":1002,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get(':employeename')@apioperation({summary",{"_index":891,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('allskilledemployees",{"_index":976,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('allskilledemployees')@apioperation({summary",{"_index":884,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('auth/profile",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('list",{"_index":989,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('list')@apioperation({summary",{"_index":901,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('skills",{"_index":993,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('skills')@apioperation({summary",{"_index":895,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get()@apioperation({summary",{"_index":898,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["get()@healthcheck",{"_index":1276,"title":{},"body":{"controllers/HealthController.html":{}}}],["getallemployees",{"_index":1020,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getallemployees.name",{"_index":1101,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getallskilledemployees",{"_index":851,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["getallskilledemployees(response",{"_index":883,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getallskilledemployees.name",{"_index":977,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["getallskills",{"_index":1626,"title":{},"body":{"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["getallskills(@res",{"_index":1661,"title":{},"body":{"controllers/SkillController.html":{}}}],["getallskills(response",{"_index":1635,"title":{},"body":{"controllers/SkillController.html":{}}}],["getemployee",{"_index":852,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["getemployee(@res",{"_index":1003,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployee(empname",{"_index":1037,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getemployee(response",{"_index":890,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployee.name",{"_index":1005,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["getemployeedata",{"_index":797,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["getemployeeofskills",{"_index":853,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployeeofskills(@query('skill",{"_index":994,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployeeofskills(skill",{"_index":894,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployeeofskills.name",{"_index":996,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployees",{"_index":854,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployees(@res",{"_index":998,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployees(response",{"_index":897,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployees.name",{"_index":999,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getemployeesofskill",{"_index":1021,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getemployeesofskill(skill",{"_index":1039,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getemployeesofskill(skill:string):promise",{"_index":1108,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getemployeesofskill.name",{"_index":1109,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getengagementscore",{"_index":798,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["getengagementscore(updateemployeedto",{"_index":805,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["getkey",{"_index":1892,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getkey(key",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["getkey(secretkey",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["getlanguagefromfiletype",{"_index":1705,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":1710,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getmatchedemployeeallskillsresponse",{"_index":936,"title":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{}},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"coverage.html":{}}}],["getmatchedemployeeallskillsresponse})@apiresponse({status",{"_index":888,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getmatchedemployees",{"_index":855,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["getmatchedemployees(@query('empskill",{"_index":990,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getmatchedemployees(empskill",{"_index":900,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["getmatchedemployees(empskill:string",{"_index":1098,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getmatchedemployees.name",{"_index":986,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["getmatchedemployeeskillsresponse",{"_index":930,"title":{"classes/GetMatchedEmployeeSkillsResponse.html":{}},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"coverage.html":{}}}],["getmatchedemployeeskillsresponsedto",{"_index":1049,"title":{"classes/GetMatchedEmployeeSkillsResponseDto.html":{}},"body":{"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"coverage.html":{}}}],["getmatchedemployeeskillsresponse})@apiresponse({status",{"_index":902,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getmockdata",{"_index":1166,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getprofile",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["getskilledemployees",{"_index":856,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["getskilledemployees(@body",{"_index":983,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["getskilledemployees(skillselectiondto",{"_index":905,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["getskilledemployees(skillselectiondto:skillselectiondto",{"_index":1085,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getskilledemployees.name",{"_index":985,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["gettraceid",{"_index":1439,"title":{},"body":{"injectables/LoggerService.html":{}}}],["global",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LoggerService.html":{}}}],["globally",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["gracefulshutdowntimeoutms",{"_index":1311,"title":{},"body":{"modules/HealthModule.html":{}}}],["graph",{"_index":398,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules.html":{}}}],["gray",{"_index":1478,"title":{},"body":{"injectables/LoggerService.html":{}}}],["green",{"_index":1544,"title":{},"body":{"injectables/LoggerService.html":{}}}],["grid",{"_index":480,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["group",{"_index":1076,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["guard",{"_index":194,"title":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guards",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["h3",{"_index":497,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":526,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["handle",{"_index":1267,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars",{"_index":622,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":1182,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":1777,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":1165,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handleexceptions",{"_index":1525,"title":{},"body":{"injectables/LoggerService.html":{}}}],["handlerejections",{"_index":1526,"title":{},"body":{"injectables/LoggerService.html":{}}}],["handlers",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handling",{"_index":1527,"title":{},"body":{"injectables/LoggerService.html":{}}}],["hbs",{"_index":369,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":368,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["hbsservice",{"_index":575,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["header",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["headers",{"_index":680,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/RequestLog.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["health",{"_index":1275,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1309,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":1283,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1278,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1273,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":55,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heap",{"_index":1301,"title":{},"body":{"controllers/HealthController.html":{}}}],["height",{"_index":425,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["helper",{"_index":1189,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpers",{"_index":1185,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["here",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerService.html":{}}}],["hex",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["hh:mm:ss",{"_index":1467,"title":{},"body":{"injectables/LoggerService.html":{}}}],["hidden",{"_index":476,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hide",{"_index":390,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidedarkmodetoggle",{"_index":348,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":349,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hiredate",{"_index":709,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"injectables/EmployeeAnalyticsService.html":{},"interfaces/IEmployee.html":{},"classes/UpdateEmployeeDto.html":{}}}],["hiredate.getfullyear",{"_index":838,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["hiredate:date",{"_index":741,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["hook",{"_index":1264,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["hooks",{"_index":406,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":1740,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["href",{"_index":1272,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":1236,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["htmlelement",{"_index":1714,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["http",{"_index":572,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclient",{"_index":360,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":1812,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["httpcode",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["httphealthindicator",{"_index":1279,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":1307,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://compodoc.app/guides/template",{"_index":1876,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["https://localhost:3000",{"_index":1290,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpstatus",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["hydrateddocument",{"_index":776,"title":{},"body":{"classes/Employee.html":{},"classes/Skill.html":{},"miscellaneous/typealiases.html":{}}}],["icon",{"_index":518,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["id",{"_index":36,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"injectables/TemplateEditorService.html":{}}}],["id'})@isobject()@isnotempty",{"_index":17,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{}}}],["identifier",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["iemployee",{"_index":1314,"title":{"interfaces/IEmployee.html":{}},"body":{"interfaces/IEmployee.html":{},"coverage.html":{}}}],["if(token",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ignoreexpiration",{"_index":1334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implement",{"_index":657,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implementation",{"_index":648,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implements",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/CompoDocConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["import",{"_index":25,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{}}}],["imports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/HealthModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["includes",{"_index":350,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["includesname",{"_index":351,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddSkillsEmployeeDto.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":461,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{}}}],["info(message",{"_index":1419,"title":{},"body":{"injectables/LoggerService.html":{}}}],["info.context",{"_index":1471,"title":{},"body":{"injectables/LoggerService.html":{}}}],["info.traceid",{"_index":1472,"title":{},"body":{"injectables/LoggerService.html":{}}}],["information",{"_index":1212,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["initialize",{"_index":1534,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor",{"_index":610,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":1713,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializehandlebars",{"_index":1167,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializelogger",{"_index":1402,"title":{},"body":{"injectables/LoggerService.html":{}}}],["initializing",{"_index":583,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":809,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{}}}],["inject(forwardref",{"_index":818,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{}}}],["injectable",{"_index":214,"title":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":794,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["injectmodel",{"_index":1048,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["injectmodel('skill",{"_index":1052,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["inputs",{"_index":1215,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["inside",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{}}}],["instance",{"_index":1180,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["instead",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instructions",{"_index":1830,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["intercept",{"_index":1585,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["intercept(context",{"_index":1586,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["interface",{"_index":323,"title":{"interfaces/CompoDocConfig.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"interfaces/LoggerConfig.html":{},"interfaces/RequestLog.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"interfaces/LoggerConfig.html":{},"interfaces/RequestLog.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["interfaces",{"_index":325,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"interfaces/LoggerConfig.html":{},"interfaces/RequestLog.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"overview.html":{}}}],["internal",{"_index":404,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["internalservererrorexception",{"_index":813,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["ip",{"_index":1371,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["ip[${ip",{"_index":1378,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["is_public_key",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":32,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isarray()@isstring",{"_index":23,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{}}}],["isdate",{"_index":733,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isglobal",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["isinitial",{"_index":1232,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":1230,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["iskill",{"_index":1318,"title":{"interfaces/ISkill.html":{}},"body":{"interfaces/ISkill.html":{},"coverage.html":{}}}],["isnotempty",{"_index":29,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/SkillSelectionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["isnumber",{"_index":732,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isobject",{"_index":31,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["isproduction",{"_index":1456,"title":{},"body":{"injectables/LoggerService.html":{}}}],["ispublic",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isrequired",{"_index":763,"title":{},"body":{"classes/Employee.html":{},"classes/Skill.html":{}}}],["isstring",{"_index":30,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/SkillSelectionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["istabenabled",{"_index":1224,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isvisible",{"_index":1261,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["italic",{"_index":523,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":704,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item.name",{"_index":705,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["items",{"_index":442,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["iv",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["ivtext",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["javascript",{"_index":1767,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["js",{"_index":1766,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["json.stringify(body",{"_index":1574,"title":{},"body":{"injectables/LoggerService.html":{}}}],["json.stringify(params",{"_index":1578,"title":{},"body":{"injectables/LoggerService.html":{}}}],["json.stringify(query",{"_index":1576,"title":{},"body":{"injectables/LoggerService.html":{}}}],["jsonwebtoken",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["jszip",{"_index":1825,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":437,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["jwt",{"_index":1329,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt[${authtoken",{"_index":1376,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["jwt_secret",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtconstants",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwtfromrequest",{"_index":1332,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{}}}],["jwtstrategy",{"_index":288,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keep",{"_index":1869,"title":{},"body":{"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":1211,"title":{},"body":{"injectables/HbsRenderService.html":{},"miscellaneous/functions.html":{}}}],["keyword",{"_index":1776,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["keywords",{"_index":1974,"title":{},"body":{"properties.html":{}}}],["label",{"_index":488,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lang",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{}}}],["lang.id",{"_index":1771,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1727,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["last",{"_index":382,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lastsaved",{"_index":384,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["layout",{"_index":1865,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["left",{"_index":521,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["legend",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["length",{"_index":1572,"title":{},"body":{"injectables/LoggerService.html":{}}}],["letter",{"_index":503,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["level",{"_index":1348,"title":{},"body":{"interfaces/LoggerConfig.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{}}}],["levelformatted",{"_index":1479,"title":{},"body":{"injectables/LoggerService.html":{}}}],["li",{"_index":508,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":515,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":514,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["license",{"_index":1975,"title":{},"body":{"properties.html":{}}}],["lifecycle",{"_index":405,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["limit",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["linenumbers",{"_index":1737,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":689,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["list",{"_index":496,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["listener",{"_index":1754,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["live",{"_index":417,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loading",{"_index":414,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessionconfig",{"_index":606,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":597,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["local",{"_index":1343,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localstrategy",{"_index":1337,"title":{"injectables/LocalStrategy.html":{}},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["log",{"_index":1403,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(message",{"_index":1422,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logdir",{"_index":1499,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logfilepath",{"_index":1495,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["logger(authguard.name",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logger(employeeanalyticsservice.name",{"_index":807,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["logger(employeecontroller.name",{"_index":940,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["logger(employeeservice.name",{"_index":1047,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["logger(responseinterceptor.name",{"_index":1590,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["logger(skillcontroller.name",{"_index":1647,"title":{},"body":{"controllers/SkillController.html":{}}}],["logger(skillservice.name",{"_index":1685,"title":{},"body":{"injectables/SkillService.html":{}}}],["logger,pipetransform",{"_index":811,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["logger.service",{"_index":1362,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{}}}],["logger.types",{"_index":1448,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerconfig",{"_index":1345,"title":{"interfaces/LoggerConfig.html":{}},"body":{"interfaces/LoggerConfig.html":{},"interfaces/RequestLog.html":{},"coverage.html":{}}}],["loggermiddleware",{"_index":94,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["loggermodule",{"_index":1393,"title":{"modules/LoggerModule.html":{}},"body":{"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerservice",{"_index":306,"title":{"injectables/LoggerService.html":{}},"body":{"classes/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["loggerservice.traceidstorage.enterwith(newtraceid",{"_index":1552,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice.traceidstorage.getstore",{"_index":1454,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logging",{"_index":1535,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logmessage",{"_index":1564,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logout",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@request",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["logrequest",{"_index":1404,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logrequest(requestlog",{"_index":1424,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logs/nestjs",{"_index":1497,"title":{},"body":{"injectables/LoggerService.html":{}}}],["magenta",{"_index":1548,"title":{},"body":{"injectables/LoggerService.html":{}}}],["main",{"_index":399,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["makes",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["making",{"_index":1872,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["mapping",{"_index":1209,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["margin",{"_index":486,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["match",{"_index":1090,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["matched",{"_index":932,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"coverage.html":{}}}],["matching",{"_index":40,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":473,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["maxfiles",{"_index":1521,"title":{},"body":{"injectables/LoggerService.html":{}}}],["maxsize",{"_index":1518,"title":{},"body":{"injectables/LoggerService.html":{}}}],["memory",{"_index":1286,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":1281,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{}}}],["metatag",{"_index":1782,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":1781,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["method",{"_index":948,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"controllers/SkillController.html":{}}}],["method[${method",{"_index":1374,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["methods",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["middlewareconsumer",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["minimal",{"_index":352,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":1731,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minmax(200px",{"_index":484,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["miscellaneous",{"_index":1947,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":1465,"title":{},"body":{"injectables/LoggerService.html":{}}}],["mock",{"_index":1249,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["mode",{"_index":393,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["model",{"_index":1023,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{}}}],["models/dtos/addskilltoemployee.dto",{"_index":937,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["models/dtos/createemployee.dto",{"_index":816,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["models/dtos/createskill.dto",{"_index":1642,"title":{},"body":{"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["models/dtos/get",{"_index":931,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["models/dtos/skill",{"_index":934,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["models/enums/roles.enum",{"_index":737,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"controllers/SkillController.html":{},"classes/UpdateEmployeeDto.html":{}}}],["models/schemas/employeeschema",{"_index":786,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{}}}],["models/schemas/skillschema",{"_index":1669,"title":{},"body":{"modules/SkillModule.html":{},"injectables/SkillService.html":{}}}],["modify",{"_index":1863,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["module",{"_index":41,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/HealthModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"injectables/HbsRenderService.html":{},"modules/HealthModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["module({imports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":43,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"injectables/HbsRenderService.html":{},"modules/HealthModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["modules//employee/employeeanalytics.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.guard",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/roles.guard",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/employee/employee.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/skill/skill.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["monaco",{"_index":1724,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":1726,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":1762,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":1770,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":1773,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":1790,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":1774,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["mongo",{"_index":1054,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{},"index.html":{}}}],["mongodb",{"_index":1317,"title":{},"body":{"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{}}}],["mongodburlencryptpasswordprovide",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":775,"title":{},"body":{"classes/Employee.html":{},"injectables/EmployeeService.html":{},"controllers/HealthController.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":1282,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/HealthModule.html":{},"modules/SkillModule.html":{}}}],["mongoosemodule.forfeature",{"_index":791,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/SkillModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost:27017",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost:27017/newemployeedb",{"_index":1313,"title":{},"body":{"modules/HealthModule.html":{}}}],["monospace",{"_index":460,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["more",{"_index":1874,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["mouseevent",{"_index":1271,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ms",{"_index":1563,"title":{},"body":{"injectables/LoggerService.html":{}}}],["ms'}\\x1b[0m",{"_index":1570,"title":{},"body":{"injectables/LoggerService.html":{}}}],["n${('└──')}timestamp",{"_index":1579,"title":{},"body":{"injectables/LoggerService.html":{}}}],["n${colors.dim",{"_index":1573,"title":{},"body":{"injectables/LoggerService.html":{}}}],["n${colors.dim('└──')}timestamp",{"_index":1580,"title":{},"body":{"injectables/LoggerService.html":{}}}],["name",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["name'})@isstring",{"_index":1144,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{}}}],["name'})@isstring()@isnotempty",{"_index":722,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["name)'})@apiresponse({status",{"_index":912,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["name:string",{"_index":754,"title":{},"body":{"classes/CreateSkillDto.html":{},"classes/UpdateSkillDto.html":{}}}],["navtabs",{"_index":1226,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":1228,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":1233,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":1234,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["nest",{"_index":1452,"title":{},"body":{"injectables/LoggerService.html":{},"dependencies.html":{}}}],["nestinterceptor",{"_index":1592,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["nestjs/axios",{"_index":1308,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"injectables/SkillService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"guards/RolesGuard.html":{}}}],["nestjs/jwt",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":735,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["nestjs/mongoose",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"modules/HealthModule.html":{},"classes/Skill.html":{},"modules/SkillModule.html":{},"injectables/SkillService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":28,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"controllers/EmployeeController.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"controllers/SkillController.html":{},"classes/SkillSelectionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1284,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestloggerservice",{"_index":1441,"title":{},"body":{"injectables/LoggerService.html":{}}}],["nestmiddleware",{"_index":1361,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["nestwinstonmoduleutilities",{"_index":1451,"title":{},"body":{"injectables/LoggerService.html":{}}}],["nestwinstonmoduleutilities.format.nestlike('nest",{"_index":1468,"title":{},"body":{"injectables/LoggerService.html":{}}}],["new",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["newemployee",{"_index":950,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/SkillController.html":{}}}],["newemployee.save",{"_index":1064,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["newemployeedb",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["newskill",{"_index":1650,"title":{},"body":{"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["newskill.save",{"_index":1694,"title":{},"body":{"injectables/SkillService.html":{}}}],["newtraceid",{"_index":1551,"title":{},"body":{"injectables/LoggerService.html":{}}}],["next",{"_index":1358,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/ResponseInterceptor.html":{},"injectables/TemplateEditorService.html":{}}}],["next.handle().pipe(tap((data",{"_index":1596,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["nextfunction",{"_index":1359,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["ngmodule",{"_index":1804,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngondestroy",{"_index":584,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":576,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["node",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["node_env",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":506,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["notfoundexception",{"_index":812,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["notice",{"_index":1246,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["null",{"_index":559,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["number",{"_index":564,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"interfaces/IEmployee.html":{},"interfaces/LoggerConfig.html":{},"interfaces/RequestLog.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["object",{"_index":13,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"guards/AuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["object.keys(body",{"_index":1571,"title":{},"body":{"injectables/LoggerService.html":{}}}],["object.keys(params",{"_index":1577,"title":{},"body":{"injectables/LoggerService.html":{}}}],["object.keys(query",{"_index":1575,"title":{},"body":{"injectables/LoggerService.html":{}}}],["objectid",{"_index":1316,"title":{},"body":{"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{}}}],["observable",{"_index":1589,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["observe",{"_index":676,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["onchangecallback",{"_index":1703,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onclick",{"_index":1266,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":1270,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ondestroy",{"_index":358,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["oninit",{"_index":355,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["opacity",{"_index":519,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["open",{"_index":1794,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["operator",{"_index":1191,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optional",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":479,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["options.fn(this",{"_index":1196,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":1197,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["original",{"_index":1870,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["originalurl",{"_index":1370,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["orlength",{"_index":1218,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["out",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["outputs",{"_index":1216,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["outside",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overflow",{"_index":475,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["overview",{"_index":396,"title":{"overview.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"overview.html":{}}}],["overviewrulerlanes",{"_index":1742,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["p",{"_index":1854,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["package",{"_index":667,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["padding",{"_index":444,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["page",{"_index":664,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["page.hbs",{"_index":1857,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":1843,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["panel",{"_index":468,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":477,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["param",{"_index":921,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["param('employeename",{"_index":1004,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["param('skill",{"_index":1658,"title":{},"body":{"controllers/SkillController.html":{}}}],["parameterhints",{"_index":1746,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1352,"title":{},"body":{"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{}}}],["parser",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":372,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["partials",{"_index":1858,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["partialtype",{"_index":734,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["partialtype(createemployeedto",{"_index":747,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["partialtype(createskilldto",{"_index":757,"title":{},"body":{"classes/CreateSkillDto.html":{},"classes/UpdateSkillDto.html":{}}}],["pass",{"_index":308,"title":{},"body":{"classes/AuthService.html":{}}}],["passport",{"_index":1328,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1330,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1321,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":710,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/IEmployee.html":{},"injectables/LocalStrategy.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["password:string",{"_index":742,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["path",{"_index":371,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/EmployeeService.html":{},"controllers/HealthController.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["path.dirname(logfilepath",{"_index":1500,"title":{},"body":{"injectables/LoggerService.html":{}}}],["path.join(logdir",{"_index":1509,"title":{},"body":{"injectables/LoggerService.html":{}}}],["path/to/custom/templates",{"_index":1856,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["payload",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{}}}],["payload.name",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{}}}],["payload.type",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{}}}],["payload.username",{"_index":1336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["performance",{"_index":716,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["permissions",{"_index":1507,"title":{},"body":{"injectables/LoggerService.html":{}}}],["pink",{"_index":1546,"title":{},"body":{"injectables/LoggerService.html":{}}}],["pipeline",{"_index":1071,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["playground",{"_index":377,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":1813,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":328,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":1803,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":1163,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":327,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":1814,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":663,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pointer",{"_index":510,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["points",{"_index":1964,"title":{},"body":{"index.html":{}}}],["pop",{"_index":1779,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["port",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["position",{"_index":531,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/IEmployee.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["position:string",{"_index":738,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["post",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["post('addskillstoemployee",{"_index":959,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('addskillstoemployee')@roles(role.admin)@apibody({type",{"_index":860,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('auth/login",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('auth/logout",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('createemployee",{"_index":941,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('createemployee')@roles(role.admin)@apibody({type",{"_index":870,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('createskill",{"_index":1648,"title":{},"body":{"controllers/SkillController.html":{}}}],["post('createskill')@roles(role.admin)@apioperation({summary",{"_index":1629,"title":{},"body":{"controllers/SkillController.html":{}}}],["post('skilledemployees",{"_index":982,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('skilledemployees')@apioperation({summary",{"_index":907,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["prefix",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/HealthController.html":{},"controllers/SkillController.html":{}}}],["prettyprint",{"_index":1469,"title":{},"body":{"injectables/LoggerService.html":{}}}],["preview",{"_index":418,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":557,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":569,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary",{"_index":540,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":541,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["private",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["process.env.jwt_expire",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.log_file_max_size",{"_index":1519,"title":{},"body":{"injectables/LoggerService.html":{}}}],["process.env.log_file_max_time",{"_index":1522,"title":{},"body":{"injectables/LoggerService.html":{}}}],["process.env.log_file_path",{"_index":1496,"title":{},"body":{"injectables/LoggerService.html":{}}}],["process.env.log_file_rotate_frequency",{"_index":1517,"title":{},"body":{"injectables/LoggerService.html":{}}}],["process.env.node_env",{"_index":1384,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{}}}],["process.env.secret_key",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":1457,"title":{},"body":{"injectables/LoggerService.html":{}}}],["productionformat",{"_index":1487,"title":{},"body":{"injectables/LoggerService.html":{}}}],["project",{"_index":1079,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["promise",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{}}}],["prop",{"_index":770,"title":{},"body":{"classes/Employee.html":{},"classes/Skill.html":{}}}],["prop({type",{"_index":759,"title":{},"body":{"classes/Employee.html":{},"classes/Skill.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AddSkillsEmployeeDto.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"properties.html":{}}}],["props",{"_index":1474,"title":{},"body":{"injectables/LoggerService.html":{}}}],["protected",{"_index":403,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["provide",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{}}}],["providedin",{"_index":1178,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["providers",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["public",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@httpcode(httpstatus.ok)@post('auth/login",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["purpose",{"_index":844,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["push",{"_index":1078,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["put",{"_index":922,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["put('/updatescore",{"_index":970,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["put('/updatescore')@roles(role.admin)@apibody({type",{"_index":916,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["put(':employeename",{"_index":964,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["put(':employeename')@roles(role.admin)@apioperation({summary",{"_index":910,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["put('updateskill",{"_index":1652,"title":{},"body":{"controllers/SkillController.html":{}}}],["put('updateskill')@roles(role.admin)@apioperation({summary",{"_index":1638,"title":{},"body":{"controllers/SkillController.html":{}}}],["query",{"_index":920,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{}}}],["quicksuggestions",{"_index":1743,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["radius",{"_index":511,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["reach",{"_index":1513,"title":{},"body":{"injectables/LoggerService.html":{}}}],["readme",{"_index":1829,"title":{"index.html":{}},"body":{"injectables/ZipExportService.html":{}}}],["readonly",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/HealthController.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{}}}],["record",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/SkillController.html":{}}}],["record'})@apiresponse({status",{"_index":878,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["recursive",{"_index":1504,"title":{},"body":{"injectables/LoggerService.html":{}}}],["red",{"_index":1250,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{}}}],["ref",{"_index":768,"title":{},"body":{"classes/Employee.html":{}}}],["reflector",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":419,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshpreview",{"_index":644,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["regenerated",{"_index":639,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":1183,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["registered",{"_index":1772,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhandlebarslanguage",{"_index":1706,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":1168,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["relative",{"_index":532,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":1204,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service",{"_index":370,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":1164,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":1175,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":1172,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":1171,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":1173,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":1170,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendered",{"_index":1238,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate",{"_index":1169,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":1174,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["repeat(auto",{"_index":482,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["reporting",{"_index":843,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["req",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoggerMiddleware.html":{}}}],["req.body",{"_index":1386,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.get('authorization",{"_index":1373,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.headers",{"_index":1389,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.logout",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.method",{"_index":1381,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.originalurl",{"_index":1382,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.params",{"_index":1388,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.path",{"_index":1391,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.query",{"_index":1387,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.user",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/EmployeeController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"controllers/SkillController.html":{}}}],["request.headers.authorization?.split",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requestdetails",{"_index":1380,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["requestlog",{"_index":1349,"title":{"interfaces/RequestLog.html":{}},"body":{"interfaces/LoggerConfig.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"coverage.html":{}}}],["required",{"_index":1612,"title":{},"body":{"classes/SignInDto.html":{}}}],["required:true",{"_index":1616,"title":{},"body":{"classes/SignInDto.html":{}}}],["requiredenvvars",{"_index":1908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["requiredroles",{"_index":1606,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.length",{"_index":1608,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1609,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":923,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/LoggerMiddleware.html":{},"controllers/SkillController.html":{}}}],["res.on('finish",{"_index":1379,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["res.statuscode",{"_index":1383,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CompoDocConfig.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/LoggerModule.html":{},"interfaces/Session.html":{},"modules/SkillModule.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["resetting",{"_index":649,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":647,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response",{"_index":588,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{}}}],["response,@param('employeename",{"_index":966,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["response.body",{"_index":677,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":609,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.dto",{"_index":933,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["response.dto.ts",{"_index":1140,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:18",{"_index":1162,"title":{},"body":{"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["response.dto.ts:21",{"_index":1161,"title":{},"body":{"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["response.dto.ts:32",{"_index":1158,"title":{},"body":{"classes/GetMatchedEmployeeSkillsResponse.html":{}}}],["response.dto.ts:35",{"_index":1160,"title":{},"body":{"classes/GetMatchedEmployeeSkillsResponse.html":{}}}],["response.dto.ts:39",{"_index":1156,"title":{},"body":{"classes/GetMatchedEmployeeSkillsResponse.html":{}}}],["response.dto.ts:51",{"_index":1145,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{}}}],["response.dto.ts:54",{"_index":1142,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{}}}],["response.headers.get('content",{"_index":683,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.sessionid",{"_index":592,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.status(err).json(err",{"_index":988,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["response.status(httpstatus.bad_request).json",{"_index":956,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["response.status(httpstatus.created).json",{"_index":954,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["response.status(httpstatus.ok).json",{"_index":969,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["response.status(httpstatus.ok).json(err",{"_index":981,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["response.status(httpstatus.ok).json({data",{"_index":980,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["response.success",{"_index":591,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":600,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsebody",{"_index":1598,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["responseinterceptor",{"_index":1583,"title":{"injectables/ResponseInterceptor.html":{}},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["responsetype",{"_index":674,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["result",{"_index":1192,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["results",{"_index":39,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1203,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["return",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["returned",{"_index":953,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["returning",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{}}}],["returns",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":493,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["roboto",{"_index":434,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["role",{"_index":727,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"controllers/SkillController.html":{},"classes/UpdateEmployeeDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":711,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"controllers/SkillController.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":942,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["roles:role",{"_index":744,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["roles_key",{"_index":1604,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":89,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"controllers/SkillController.html":{},"coverage.html":{}}}],["root",{"_index":378,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["rotate",{"_index":1445,"title":{},"body":{"injectables/LoggerService.html":{},"dependencies.html":{}}}],["rotatefiletransport",{"_index":1514,"title":{},"body":{"injectables/LoggerService.html":{}}}],["rotatefiletransport.on('error",{"_index":1528,"title":{},"body":{"injectables/LoggerService.html":{}}}],["roundedselection",{"_index":1738,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["route",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":400,"title":{"routes.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"routes.html":{}}}],["running",{"_index":1851,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["rxjs",{"_index":1594,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["safe",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sample",{"_index":1255,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":1256,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sans",{"_index":435,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["save",{"_index":615,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["save_delay",{"_index":565,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":383,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetemplate(content",{"_index":633,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":563,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":381,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schedule",{"_index":628,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":623,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schema",{"_index":771,"title":{},"body":{"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"classes/Skill.html":{},"modules/SkillModule.html":{}}}],["schema.types.objectid",{"_index":779,"title":{},"body":{"classes/Employee.html":{}}}],["schemafactory",{"_index":772,"title":{},"body":{"classes/Employee.html":{},"classes/Skill.html":{}}}],["schemafactory.createforclass(employee",{"_index":781,"title":{},"body":{"classes/Employee.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(skill",{"_index":1621,"title":{},"body":{"classes/Skill.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":774,"title":{},"body":{"classes/Employee.html":{},"classes/Skill.html":{}}}],["score",{"_index":717,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeDto.html":{}}}],["scripts",{"_index":1847,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollbar",{"_index":1739,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":1733,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scss",{"_index":1765,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["search",{"_index":402,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary",{"_index":544,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":545,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secret",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretkey",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["secretorkey",{"_index":1335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{}}}],["segoe",{"_index":432,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["select",{"_index":601,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile",{"_index":558,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":415,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":416,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":619,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selection.dto",{"_index":935,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["selection.dto.ts",{"_index":1672,"title":{},"body":{"classes/SkillSelectionDto.html":{},"coverage.html":{}}}],["selection.dto.ts:13",{"_index":1674,"title":{},"body":{"classes/SkillSelectionDto.html":{}}}],["selector",{"_index":376,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["serif",{"_index":436,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["server",{"_index":669,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["service",{"_index":946,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/SkillController.html":{}}}],["services",{"_index":1962,"title":{},"body":{"index.html":{}}}],["session",{"_index":373,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":374,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":379,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":612,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/EmployeeService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["setcontext",{"_index":1405,"title":{},"body":{"injectables/LoggerService.html":{}}}],["setcontext(context",{"_index":1426,"title":{},"body":{"injectables/LoggerService.html":{}}}],["seteditorcontent",{"_index":1707,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":1717,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setmetadata(is_public_key",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setonchangecallback",{"_index":1708,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":1719,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["settraceid",{"_index":1406,"title":{},"body":{"injectables/LoggerService.html":{}}}],["settraceid(traceid",{"_index":1428,"title":{},"body":{"injectables/LoggerService.html":{}}}],["showconfigpanel",{"_index":560,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["side",{"_index":670,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sidebar",{"_index":490,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["signature",{"_index":1265,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["signin",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{}}}],["signin(@body",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(username",{"_index":307,"title":{},"body":{"classes/AuthService.html":{}}}],["signindto",{"_index":169,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signindto.password",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1207,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["size",{"_index":456,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["skill",{"_index":750,"title":{"classes/Skill.html":{}},"body":{"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"injectables/SkillService.html":{},"classes/UpdateSkillDto.html":{},"coverage.html":{}}}],["skill'})@apiresponse({status",{"_index":886,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["skill.controller",{"_index":1670,"title":{},"body":{"modules/SkillModule.html":{}}}],["skill.name",{"_index":793,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/SkillModule.html":{}}}],["skill.service",{"_index":1641,"title":{},"body":{"controllers/SkillController.html":{},"modules/SkillModule.html":{}}}],["skill/models/schemas/skillschema",{"_index":788,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{}}}],["skill:string",{"_index":995,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["skillcontroller",{"_index":1622,"title":{"controllers/SkillController.html":{}},"body":{"controllers/SkillController.html":{},"modules/SkillModule.html":{},"coverage.html":{}}}],["skilldata",{"_index":1662,"title":{},"body":{"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["skilldata.length",{"_index":1701,"title":{},"body":{"injectables/SkillService.html":{}}}],["skilldocument",{"_index":1620,"title":{},"body":{"classes/Skill.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["skilled",{"_index":1069,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["skillfilter",{"_index":1129,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["skillids",{"_index":712,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"interfaces/IEmployee.html":{}}}],["skillids:[string",{"_index":740,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["skillmodel",{"_index":1024,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["skillmodel:model",{"_index":1053,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["skillmodule",{"_index":56,"title":{"modules/SkillModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SkillModule.html":{},"modules.html":{},"overview.html":{}}}],["skillname",{"_index":1687,"title":{},"body":{"injectables/SkillService.html":{}}}],["skills",{"_index":10,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"controllers/SkillController.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["skills'})@isnumber()@isnotempty",{"_index":1157,"title":{},"body":{"classes/GetMatchedEmployeeSkillsResponse.html":{}}}],["skills.length",{"_index":839,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["skills:string",{"_index":38,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{}}}],["skillschema",{"_index":787,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"classes/Skill.html":{},"modules/SkillModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["skillselectiondto",{"_index":906,"title":{"classes/SkillSelectionDto.html":{}},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/SkillSelectionDto.html":{},"coverage.html":{}}}],["skillselectiondto.empskill",{"_index":1087,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["skillselectiondto:skillselectiondto",{"_index":984,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["skillservice",{"_index":1640,"title":{"injectables/SkillService.html":{}},"body":{"controllers/SkillController.html":{},"modules/SkillModule.html":{},"injectables/SkillService.html":{},"coverage.html":{},"overview.html":{}}}],["skillsexist",{"_index":1132,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["sm",{"_index":551,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["solid",{"_index":452,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sort",{"_index":1081,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"modules/EmployeeAnalyticsModule.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"modules/SkillModule.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["space",{"_index":439,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":504,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["specific",{"_index":1083,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["specified",{"_index":877,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/SkillController.html":{}}}],["specify",{"_index":1852,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["speciied",{"_index":1097,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/.../app.module.ts",{"_index":1955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../employee.service.ts",{"_index":1982,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../employeeanalytics.service.ts",{"_index":1983,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../employeeschema.ts",{"_index":1980,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../env.validator.ts",{"_index":1956,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../repl.ts",{"_index":1954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enum.ts",{"_index":1949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../skillschema.ts",{"_index":1981,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app.module.ts:71",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/sample/sample.component.ts",{"_index":1258,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/health/health.controller.ts",{"_index":1274,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:16",{"_index":1277,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":1305,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1894,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/enums/roles.enum.ts",{"_index":1950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:22",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:28",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:33",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.guard.ts",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/auth.guard.ts:17",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:24",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:75",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":301,"title":{},"body":{"classes/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:14",{"_index":309,"title":{},"body":{"classes/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:7",{"_index":303,"title":{},"body":{"classes/AuthService.html":{}}}],["src/modules/auth/constants.ts",{"_index":1896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/decorators/public.decorator.ts",{"_index":1897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/decorators/roles.decorator.ts",{"_index":1898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":1320,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:15",{"_index":1325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:6",{"_index":1323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/local.strategy.ts",{"_index":1338,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/local.strategy.ts:12",{"_index":1342,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/auth/local.strategy.ts:7",{"_index":1340,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/auth/roles.guard.ts",{"_index":1600,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/modules/auth/roles.guard.ts:11",{"_index":1603,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/modules/auth/roles.guard.ts:8",{"_index":1602,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/modules/employee/employee.controller.ts",{"_index":847,"title":{},"body":{"controllers/EmployeeController.html":{},"coverage.html":{}}}],["src/modules/employee/employee.controller.ts:128",{"_index":919,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:157",{"_index":889,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:181",{"_index":908,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:206",{"_index":903,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:230",{"_index":896,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:252",{"_index":899,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:275",{"_index":893,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:300",{"_index":882,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:34",{"_index":872,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:66",{"_index":868,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.controller.ts:97",{"_index":914,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/modules/employee/employee.module.ts",{"_index":1017,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/modules/employee/employee.service.ts",{"_index":1019,"title":{},"body":{"injectables/EmployeeService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/employee/employee.service.ts:109",{"_index":1035,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:119",{"_index":1038,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:129",{"_index":1033,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:140",{"_index":1040,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:163",{"_index":1046,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:180",{"_index":1028,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:19",{"_index":1025,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:25",{"_index":1031,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:40",{"_index":1044,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:52",{"_index":1036,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:76",{"_index":1042,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employee.service.ts:94",{"_index":1041,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/modules/employee/employeeanalytics.module.ts",{"_index":785,"title":{},"body":{"modules/EmployeeAnalyticsModule.html":{}}}],["src/modules/employee/employeeanalytics.service.ts",{"_index":795,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/employee/employeeanalytics.service.ts:13",{"_index":808,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["src/modules/employee/employeeanalytics.service.ts:15",{"_index":806,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["src/modules/employee/employeeanalytics.service.ts:21",{"_index":803,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["src/modules/employee/employeeanalytics.service.ts:38",{"_index":804,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["src/modules/employee/employeeanalytics.service.ts:7",{"_index":801,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["src/modules/employee/models/dtos/addskilltoemployee.dto.ts",{"_index":6,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"coverage.html":{}}}],["src/modules/employee/models/dtos/addskilltoemployee.dto.ts:13",{"_index":19,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/addskilltoemployee.dto.ts:17",{"_index":24,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/createemployee.dto.ts",{"_index":707,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["src/modules/employee/models/dtos/createemployee.dto.ts:18",{"_index":723,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/createemployee.dto.ts:21",{"_index":726,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/createemployee.dto.ts:24",{"_index":715,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/createemployee.dto.ts:27",{"_index":730,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/createemployee.dto.ts:30",{"_index":721,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/createemployee.dto.ts:33",{"_index":724,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/createemployee.dto.ts:36",{"_index":719,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/createemployee.dto.ts:39",{"_index":729,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["src/modules/employee/models/dtos/get",{"_index":1139,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"coverage.html":{}}}],["src/modules/employee/models/dtos/signin.dto.ts",{"_index":1611,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/modules/employee/models/dtos/signin.dto.ts:17",{"_index":1615,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/modules/employee/models/dtos/signin.dto.ts:21",{"_index":1614,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/modules/employee/models/dtos/skill",{"_index":1671,"title":{},"body":{"classes/SkillSelectionDto.html":{},"coverage.html":{}}}],["src/modules/employee/models/interfaces/employee.ts",{"_index":1315,"title":{},"body":{"interfaces/IEmployee.html":{},"coverage.html":{}}}],["src/modules/employee/models/schemas/employeeschema.ts",{"_index":758,"title":{},"body":{"classes/Employee.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/employee/models/schemas/employeeschema.ts:11",{"_index":767,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employee/models/schemas/employeeschema.ts:14",{"_index":769,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employee/models/schemas/employeeschema.ts:16",{"_index":760,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employee/models/schemas/employeeschema.ts:18",{"_index":762,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employee/models/schemas/employeeschema.ts:20",{"_index":766,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employee/models/schemas/employeeschema.ts:22",{"_index":761,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employee/models/schemas/employeeschema.ts:9",{"_index":765,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/skill/models/dtos/createskill.dto.ts",{"_index":749,"title":{},"body":{"classes/CreateSkillDto.html":{},"classes/UpdateSkillDto.html":{},"coverage.html":{}}}],["src/modules/skill/models/dtos/createskill.dto.ts:13",{"_index":753,"title":{},"body":{"classes/CreateSkillDto.html":{}}}],["src/modules/skill/models/dtos/createskill.dto.ts:16",{"_index":752,"title":{},"body":{"classes/CreateSkillDto.html":{}}}],["src/modules/skill/models/interfaces/skill.ts",{"_index":1319,"title":{},"body":{"interfaces/ISkill.html":{},"coverage.html":{}}}],["src/modules/skill/models/schemas/skillschema.ts",{"_index":1617,"title":{},"body":{"classes/Skill.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/skill/models/schemas/skillschema.ts:11",{"_index":1618,"title":{},"body":{"classes/Skill.html":{}}}],["src/modules/skill/models/schemas/skillschema.ts:9",{"_index":1619,"title":{},"body":{"classes/Skill.html":{}}}],["src/modules/skill/skill.controller.ts",{"_index":1623,"title":{},"body":{"controllers/SkillController.html":{},"coverage.html":{}}}],["src/modules/skill/skill.controller.ts:107",{"_index":1636,"title":{},"body":{"controllers/SkillController.html":{}}}],["src/modules/skill/skill.controller.ts:31",{"_index":1631,"title":{},"body":{"controllers/SkillController.html":{}}}],["src/modules/skill/skill.controller.ts:60",{"_index":1639,"title":{},"body":{"controllers/SkillController.html":{}}}],["src/modules/skill/skill.controller.ts:84",{"_index":1634,"title":{},"body":{"controllers/SkillController.html":{}}}],["src/modules/skill/skill.module.ts",{"_index":1668,"title":{},"body":{"modules/SkillModule.html":{}}}],["src/modules/skill/skill.service.ts",{"_index":1675,"title":{},"body":{"injectables/SkillService.html":{},"coverage.html":{}}}],["src/modules/skill/skill.service.ts:12",{"_index":1679,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/modules/skill/skill.service.ts:27",{"_index":1684,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/modules/skill/skill.service.ts:39",{"_index":1681,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/modules/skill/skill.service.ts:50",{"_index":1682,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/modules/skill/skill.service.ts:8",{"_index":1677,"title":{},"body":{"injectables/SkillService.html":{}}}],["src/repl.ts",{"_index":1905,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/env.validator.ts",{"_index":1906,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/utils/loggermodule/logger.interceptor.ts",{"_index":1584,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/utils/loggermodule/logger.interceptor.ts:11",{"_index":1591,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["src/utils/loggermodule/logger.interceptor.ts:13",{"_index":1588,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["src/utils/loggermodule/logger.middleware.ts",{"_index":1354,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/utils/loggermodule/logger.middleware.ts:13",{"_index":1360,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/utils/loggermodule/logger.middleware.ts:8",{"_index":1356,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/utils/loggermodule/logger.module.ts",{"_index":1397,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/utils/loggermodule/logger.service",{"_index":312,"title":{},"body":{"classes/AuthService.html":{}}}],["src/utils/loggermodule/logger.service.ts",{"_index":1398,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/utils/loggermodule/logger.service.ts:138",{"_index":1412,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:155",{"_index":1427,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:159",{"_index":1429,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:16",{"_index":1436,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:164",{"_index":1423,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:169",{"_index":1420,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:17",{"_index":1434,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:174",{"_index":1418,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:179",{"_index":1433,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:18",{"_index":1438,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:184",{"_index":1414,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:189",{"_index":1431,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:194",{"_index":1425,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:20",{"_index":1440,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:22",{"_index":1410,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.service.ts:28",{"_index":1421,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/utils/loggermodule/logger.types.ts",{"_index":1346,"title":{},"body":{"interfaces/LoggerConfig.html":{},"interfaces/RequestLog.html":{},"coverage.html":{}}}],["starttime",{"_index":1368,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["statements",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":554,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["status",{"_index":454,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{}}}],["statuscode",{"_index":957,"title":{},"body":{"controllers/EmployeeController.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"controllers/SkillController.html":{}}}],["storage",{"_index":1291,"title":{},"body":{"controllers/HealthController.html":{}}}],["store/access",{"_index":1965,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1327,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/UpdateEmployeeDto.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(updateemployeedto.name",{"_index":826,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["string):promise",{"_index":315,"title":{},"body":{"classes/AuthService.html":{}}}],["strings",{"_index":1745,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["structure",{"_index":1241,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["style",{"_index":411,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["styles",{"_index":420,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":1844,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["sub",{"_index":319,"title":{},"body":{"classes/AuthService.html":{}}}],["success",{"_index":375,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["success:hover",{"_index":548,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successful",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["successfully",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{}}}],["successfully',employeedata",{"_index":1001,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["successfully',existingemployee",{"_index":1008,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["successfully',skilldata",{"_index":1664,"title":{},"body":{"controllers/SkillController.html":{}}}],["successfully'})@apiresponse({status",{"_index":880,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["suggestontriggercharacters",{"_index":1750,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["summary",{"_index":943,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["super",{"_index":1331,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1966,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":651,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["surroundingpairs",{"_index":1796,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["svg",{"_index":1967,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1193,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"injectables/TemplateEditorService.html":{}}}],["syntax",{"_index":1253,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["system",{"_index":430,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["t",{"_index":817,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"miscellaneous/typealiases.html":{}}}],["t.id",{"_index":1229,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["t\\r\\n",{"_index":1784,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":410,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tabcompletion",{"_index":1752,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":1227,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1783,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tap",{"_index":1593,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["template",{"_index":363,"title":{"interfaces/Template.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":412,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":413,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":1176,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templateeditorservice",{"_index":362,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundcomponent",{"_index":552,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundmodule",{"_index":1798,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["templates",{"_index":388,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":1837,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["terminusmodule",{"_index":1306,"title":{},"body":{"modules/HealthModule.html":{}}}],["terminusmodule.forroot",{"_index":1310,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1505,"title":{},"body":{"injectables/LoggerService.html":{}}}],["testfile",{"_index":1508,"title":{},"body":{"injectables/LoggerService.html":{}}}],["testing",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["text",{"_index":500,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/functions.html":{}}}],["text.split",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["theme",{"_index":1728,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["then((content",{"_index":1835,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.authservice.signin(signindto.username",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(username",{"_index":1344,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.calculateengagementscore(updateemployeedto",{"_index":822,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["this.canactivate.name",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.colorizelevel(level",{"_index":1480,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.config",{"_index":608,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.context",{"_index":1459,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.count",{"_index":1150,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["this.createsession",{"_index":577,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.disk.checkstorage('storage",{"_index":1293,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.downloadblob(content",{"_index":1836,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.editor",{"_index":1725,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":1797,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":1755,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":1763,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":611,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":621,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":617,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.employeeanalyticsservice.getengagementscore(updateemployeedto",{"_index":1120,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeedata",{"_index":1154,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["this.employeemodel(createemployeedto",{"_index":1062,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeemodel.aggregate",{"_index":1073,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeemodel.countdocuments",{"_index":1092,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeemodel.find",{"_index":1111,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeemodel.find().exec",{"_index":1102,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeemodel.findbyidandupdate(employeefilter",{"_index":1136,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeemodel.findbyidandupdate(filter",{"_index":1122,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeemodel.findone",{"_index":1057,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeemodel.findoneanddelete(filter).exec",{"_index":1106,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeemodel.findoneandupdate(filter",{"_index":1066,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeeservice.addskillstoemployee(addskillsemployeedto",{"_index":963,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.createemployee(createemployeedto",{"_index":951,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.deleteemployee(employeename",{"_index":1013,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.getallemployees",{"_index":845,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{}}}],["this.employeeservice.getallskilledemployees",{"_index":979,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.getemployee(employeename",{"_index":1006,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.getemployee(empname",{"_index":828,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["this.employeeservice.getemployee(username",{"_index":316,"title":{},"body":{"classes/AuthService.html":{}}}],["this.employeeservice.getemployeesofskill(skill",{"_index":997,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.getmatchedemployees(empskill",{"_index":992,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.getskilledemployees(skillselectiondto",{"_index":987,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.updateemployee(employeename",{"_index":968,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.updatescore(updateemployeedto",{"_index":975,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.empskill",{"_index":1152,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["this.extracttokenfromheader(request",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.generatereadme",{"_index":1831,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":1761,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.handlebarsinstance",{"_index":1181,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":1237,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":1190,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":1202,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":1231,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":1225,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":1219,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":1205,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":1199,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.health.check",{"_index":1288,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":607,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":620,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":598,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.pingcheck('application",{"_index":1289,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.post('/api/session/create",{"_index":589,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":636,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":673,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":634,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializeeditor",{"_index":580,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializehandlebars",{"_index":1179,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.initializelogger",{"_index":1455,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":322,"title":{},"body":{"classes/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.lastsaved",{"_index":631,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessionconfig",{"_index":579,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":578,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.logger",{"_index":1537,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.debug",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/EmployeeService.html":{}}}],["this.logger.debug(\"calculateengagementscore",{"_index":823,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["this.logger.debug(\"createemployee",{"_index":1063,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.debug(\"createskill",{"_index":1690,"title":{},"body":{"injectables/SkillService.html":{}}}],["this.logger.debug(\"getallskilledemployees",{"_index":1082,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.debug(\"getemployeesofskill",{"_index":1115,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.debug(\"getmatchedemployees",{"_index":1099,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.debug(\"getskilledemployees",{"_index":1096,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.debug(\"in",{"_index":945,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["this.logger.debug(\"updated",{"_index":1067,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.debug(\"updatescore",{"_index":1121,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.debug(`attempting",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.logger.debug(`failed",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.logger.debug(`token",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.logger.debug(`updated",{"_index":1137,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.debug(`updatescore",{"_index":1123,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.debug(message",{"_index":1557,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.error",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.logger.error(\"createskill",{"_index":1692,"title":{},"body":{"injectables/SkillService.html":{}}}],["this.logger.error(\"employee",{"_index":829,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{}}}],["this.logger.error('getallemployees",{"_index":1104,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/SkillService.html":{}}}],["this.logger.error(`addskillstoemployee",{"_index":1134,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.error(`deleteemployee",{"_index":1107,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.error(`deleteskill",{"_index":1699,"title":{},"body":{"injectables/SkillService.html":{}}}],["this.logger.error(`getemployee",{"_index":1105,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.error(`updatedemployee",{"_index":1138,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.error(`updateemployee",{"_index":1068,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.error(`updatescore",{"_index":1124,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.logger.error(`updateskill",{"_index":1697,"title":{},"body":{"injectables/SkillService.html":{}}}],["this.logger.error(message",{"_index":1555,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.info('api",{"_index":1582,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.info(logmessage",{"_index":1581,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.info(message",{"_index":1554,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.log",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerMiddleware.html":{}}}],["this.logger.log(`status[${statuscode",{"_index":1597,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["this.logger.logrequest(requestdetails",{"_index":1392,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.logger.on('error",{"_index":1540,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.setcontext(authservice.name",{"_index":314,"title":{},"body":{"classes/AuthService.html":{}}}],["this.logger.setcontext(loggermiddleware.name",{"_index":1366,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.logger.settraceid(traceid",{"_index":1367,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.logger.verbose(message",{"_index":1558,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logger.warn(message",{"_index":1556,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.memory.checkheap('memory_heap",{"_index":1302,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.mongoose.pingcheck('mongoose",{"_index":1304,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.name",{"_index":1146,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["this.onchangecallback",{"_index":1756,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":1757,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.previewframe.nativeelement.src",{"_index":646,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":645,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1607,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.registerhandlebarslanguage",{"_index":1760,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":1187,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.save_delay",{"_index":632,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":630,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":585,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":627,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":618,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectedfile",{"_index":604,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":605,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":570,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":685,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.setcontext(context",{"_index":1553,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.showconfigpanel",{"_index":643,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.skillids",{"_index":1148,"title":{},"body":{"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{}}}],["this.skillmodel(createskilldto",{"_index":1693,"title":{},"body":{"injectables/SkillService.html":{}}}],["this.skillmodel.find().exec",{"_index":1700,"title":{},"body":{"injectables/SkillService.html":{}}}],["this.skillmodel.findone",{"_index":1689,"title":{},"body":{"injectables/SkillService.html":{}}}],["this.skillmodel.findone(skillfilter).exec",{"_index":1133,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.skillmodel.findoneanddelete(filter).exec",{"_index":1698,"title":{},"body":{"injectables/SkillService.html":{}}}],["this.skillmodel.findoneandupdate(filter",{"_index":1696,"title":{},"body":{"injectables/SkillService.html":{}}}],["this.skillservice.createskill(createskilldto",{"_index":1651,"title":{},"body":{"controllers/SkillController.html":{}}}],["this.skillservice.deleteskill(skill",{"_index":1660,"title":{},"body":{"controllers/SkillController.html":{}}}],["this.skillservice.getallskills",{"_index":1663,"title":{},"body":{"controllers/SkillController.html":{}}}],["this.skillservice.updateskill(updateskilldto",{"_index":1655,"title":{},"body":{"controllers/SkillController.html":{}}}],["this.templates",{"_index":599,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":603,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.traceid",{"_index":1460,"title":{},"body":{"injectables/LoggerService.html":{}}}],["threshold",{"_index":1299,"title":{},"body":{"controllers/HealthController.html":{}}}],["thresholdpercent",{"_index":1294,"title":{},"body":{"controllers/HealthController.html":{}}}],["throttlerguard",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlers",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/LocalStrategy.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["timeout",{"_index":626,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["timestamp",{"_index":1353,"title":{},"body":{"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{}}}],["timestampformatted",{"_index":1476,"title":{},"body":{"injectables/LoggerService.html":{}}}],["tips",{"_index":1861,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":1260,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["todaydate",{"_index":835,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["todaydate.getfullyear",{"_index":837,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["todo",{"_index":656,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggle",{"_index":394,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggleconfigpanel",{"_index":642,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["token",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/TemplateEditorService.html":{}}}],["tokenizer",{"_index":1775,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["top",{"_index":487,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["topromise",{"_index":590,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["trace",{"_index":1417,"title":{},"body":{"injectables/LoggerService.html":{}}}],["traceformatted",{"_index":1484,"title":{},"body":{"injectables/LoggerService.html":{}}}],["traceid",{"_index":1350,"title":{},"body":{"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{}}}],["traceidstorage",{"_index":1399,"title":{},"body":{"injectables/LoggerService.html":{}}}],["trackbyname(index",{"_index":703,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transform",{"_index":501,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/SkillSelectionDto.html":{},"interfaces/Template.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["transformer",{"_index":731,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/SkillSelectionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["transition",{"_index":470,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["translation",{"_index":1208,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations",{"_index":1210,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":1217,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":536,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transport",{"_index":1493,"title":{},"body":{"injectables/LoggerService.html":{}}}],["transport.on('error",{"_index":1529,"title":{},"body":{"injectables/LoggerService.html":{}}}],["transports",{"_index":1490,"title":{},"body":{"injectables/LoggerService.html":{}}}],["transports.push(rotatefiletransport",{"_index":1531,"title":{},"body":{"injectables/LoggerService.html":{}}}],["transports.push(transport",{"_index":1532,"title":{},"body":{"injectables/LoggerService.html":{}}}],["tree",{"_index":409,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["trigger",{"_index":690,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["true",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/CompoDocConfig.html":{},"classes/Employee.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/Skill.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["true})@isstring()@isnotempty",{"_index":1613,"title":{},"body":{"classes/SignInDto.html":{}}}],["try",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{}}}],["ts",{"_index":1768,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":1855,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["ttl",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":11,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/Employee.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"injectables/HbsRenderService.html":{},"interfaces/IEmployee.html":{},"interfaces/ISkill.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"interfaces/Session.html":{},"classes/SignInDto.html":{},"classes/Skill.html":{},"controllers/SkillController.html":{},"classes/SkillSelectionDto.html":{},"injectables/SkillService.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type[${typeof(data",{"_index":1599,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["typealiases",{"_index":1978,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":736,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/SignInDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["typescript",{"_index":1769,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["ui",{"_index":433,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unauthorizedexception",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(this.authservice.convertlang('errors.auth.token",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{}}}],["undefined",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{}}}],["undone",{"_index":655,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unique",{"_index":764,"title":{},"body":{"classes/Employee.html":{},"classes/Skill.html":{}}}],["unique:true",{"_index":778,"title":{},"body":{"classes/Employee.html":{},"classes/Skill.html":{}}}],["unknown",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/JwtStrategy.html":{},"controllers/SkillController.html":{}}}],["unless",{"_index":1198,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["unlicensed",{"_index":1976,"title":{},"body":{"properties.html":{}}}],["unset",{"_index":1080,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["unwind",{"_index":1074,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["up",{"_index":613,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["update",{"_index":911,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["updateconfig",{"_index":635,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":637,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"interfaces/Session.html":{},"controllers/SkillController.html":{},"interfaces/Template.html":{}}}],["updatedemployee",{"_index":1135,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["updatedskill",{"_index":1654,"title":{},"body":{"controllers/SkillController.html":{}}}],["updateemployee",{"_index":857,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["updateemployee(@res",{"_index":965,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updateemployee(empid",{"_index":1043,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["updateemployee(response",{"_index":909,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updateemployee.name",{"_index":967,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["updateemployeedto",{"_index":745,"title":{"classes/UpdateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"injectables/EmployeeAnalyticsService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["updateemployeedto):promise",{"_index":821,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["updateemployeedto.name",{"_index":1119,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["updateemployeedto:updateemployeedto",{"_index":972,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updateemployeedto})@apioperation({summary",{"_index":917,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updateemployeedto})@apiresponse({status",{"_index":913,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updatescore",{"_index":858,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["updatescore(@res",{"_index":971,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updatescore(response",{"_index":915,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updatescore(updateemployeedto",{"_index":1045,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["updatescore.name",{"_index":973,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["updateskill",{"_index":1627,"title":{},"body":{"controllers/SkillController.html":{},"injectables/SkillService.html":{}}}],["updateskill(@res",{"_index":1653,"title":{},"body":{"controllers/SkillController.html":{}}}],["updateskill(response",{"_index":1637,"title":{},"body":{"controllers/SkillController.html":{}}}],["updateskill(updateskilldto",{"_index":1683,"title":{},"body":{"injectables/SkillService.html":{}}}],["updateskilldto",{"_index":756,"title":{"classes/UpdateSkillDto.html":{}},"body":{"classes/CreateSkillDto.html":{},"controllers/SkillController.html":{},"injectables/SkillService.html":{},"classes/UpdateSkillDto.html":{},"coverage.html":{}}}],["updateskilldto.name",{"_index":1695,"title":{},"body":{"injectables/SkillService.html":{}}}],["updating",{"_index":641,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/EmployeeService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["uppercase",{"_index":502,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url",{"_index":691,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/LoggerConfig.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/RequestLog.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["url.createobjecturl(zipblob",{"_index":692,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(url",{"_index":699,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url[${headers.host}${originalurl",{"_index":1375,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["usage",{"_index":1849,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["use",{"_index":1355,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["use(req",{"_index":1357,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":1186,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["useguards",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmployeeController.html":{},"controllers/SkillController.html":{}}}],["useguards(authguard",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@get('auth/profile",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(rolesguard",{"_index":1645,"title":{},"body":{"controllers/SkillController.html":{}}}],["user",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/EmployeeService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"miscellaneous/enumerations.html":{}}}],["user._id",{"_index":320,"title":{},"body":{"classes/AuthService.html":{}}}],["user.name",{"_index":318,"title":{},"body":{"classes/AuthService.html":{},"injectables/EmployeeService.html":{}}}],["user.password",{"_index":317,"title":{},"body":{"classes/AuthService.html":{}}}],["user.roles?.includes(role",{"_index":1610,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userjson",{"_index":1113,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["username",{"_index":310,"title":{},"body":{"classes/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/SignInDto.html":{}}}],["using",{"_index":1070,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{}}}],["utilities",{"_index":1450,"title":{},"body":{"injectables/LoggerService.html":{}}}],["utils/loggermodule/logger.middleware",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["uuid",{"_index":1365,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{}}}],["uuidv4",{"_index":1364,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{}}}],["v4",{"_index":1363,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{}}}],["validate",{"_index":1322,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1341,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateenvvariables",{"_index":1907,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":33,"title":{},"body":{"classes/AddSkillsEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSkillDto.html":{},"classes/GetMatchedEmployeeAllSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponse.html":{},"classes/GetMatchedEmployeeSkillsResponseDto.html":{},"classes/SignInDto.html":{},"classes/SkillSelectionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSkillDto.html":{}}}],["value",{"_index":305,"title":{},"body":{"classes/AuthService.html":{},"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/SkillService.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1223,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["values",{"_index":653,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["variable",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1984,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbose",{"_index":1407,"title":{},"body":{"injectables/LoggerService.html":{}}}],["verbose(message",{"_index":1430,"title":{},"body":{"injectables/LoggerService.html":{}}}],["verify",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{}}}],["version",{"_index":1973,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":1741,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["viewchild",{"_index":356,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('editorcontainer",{"_index":553,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":556,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["visible",{"_index":1263,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":1875,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["void",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":1729,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w",{"_index":1789,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w+)(\\s*=\\s",{"_index":1785,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":652,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["warn",{"_index":1408,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warn(message",{"_index":1432,"title":{},"body":{"injectables/LoggerService.html":{}}}],["we're",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["weight",{"_index":463,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["whether",{"_index":1262,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["white",{"_index":517,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["width",{"_index":491,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.settimeout(async",{"_index":629,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1879,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1881,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["winston",{"_index":1442,"title":{},"body":{"injectables/LoggerService.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":1538,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.format((info",{"_index":1470,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.format.combine",{"_index":1462,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.format.json",{"_index":1489,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.format.ms",{"_index":1488,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.format.printf((props",{"_index":1473,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.format.timestamp({format",{"_index":1463,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.logger",{"_index":1435,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.transport",{"_index":1491,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.transports.console",{"_index":1492,"title":{},"body":{"injectables/LoggerService.html":{}}}],["winston.transports.dailyrotatefile",{"_index":1515,"title":{},"body":{"injectables/LoggerService.html":{}}}],["without",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/EmployeeService.html":{}}}],["wordbasedsuggestions",{"_index":1753,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":1736,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wrap",{"_index":1239,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wrapper",{"_index":1244,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wrappertype",{"_index":800,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{},"injectables/EmployeeService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["write",{"_index":1506,"title":{},"body":{"injectables/LoggerService.html":{}}}],["write.tmp",{"_index":1510,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[29m${level}\\x1b[0m",{"_index":1549,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[31m${level}\\x1b[0m",{"_index":1541,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[32m${level}\\x1b[0m",{"_index":1543,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[33m${level}\\x1b[0m",{"_index":1542,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[33m[${context}]\\x1b[0m",{"_index":1482,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[34m${url}\\x1b[0m",{"_index":1568,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[35m${level}\\x1b[0m",{"_index":1547,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[36m[${traceid}]\\x1b[0m",{"_index":1485,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[42m${duration.tostring",{"_index":1569,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[44m${method}\\x1b[0m",{"_index":1567,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[90m${timestamp}\\x1b[0m",{"_index":1477,"title":{},"body":{"injectables/LoggerService.html":{}}}],["x1b[95m${level}\\x1b[0m",{"_index":1545,"title":{},"body":{"injectables/LoggerService.html":{}}}],["y",{"_index":494,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["yearsdifference",{"_index":836,"title":{},"body":{"injectables/EmployeeAnalyticsService.html":{}}}],["yellow",{"_index":1483,"title":{},"body":{"injectables/LoggerService.html":{}}}],["yes",{"_index":1415,"title":{},"body":{"injectables/LoggerService.html":{}}}],["yyyy",{"_index":1464,"title":{},"body":{"injectables/LoggerService.html":{}}}],["zip",{"_index":366,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":1832,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":1827,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":1834,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":678,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":365,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"overview.html":{}}}],["zippedarchive",{"_index":1524,"title":{},"body":{"injectables/LoggerService.html":{}}}],["zipservice",{"_index":574,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zoom",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeAnalyticsModule.html":{},"modules/EmployeeModule.html":{},"modules/LoggerModule.html":{},"modules/SkillModule.html":{},"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddSkillsEmployeeDto.html":{"url":"classes/AddSkillsEmployeeDto.html","title":"class - AddSkillsEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddSkillsEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/dtos/addSkillToEmployee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                empId\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        empId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: ' Employee Id'})@IsObject()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/addSkillToEmployee.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Array of Skills '})@IsArray()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/addSkillToEmployee.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  IsObject,\n  IsArray\n} from 'class-validator';\n\nexport class AddSkillsEmployeeDto {\n  @ApiProperty({ description: ' Employee Id' })\n  @IsObject()\n  @IsNotEmpty()\n  empId:Object;\n  @ApiPropertyOptional({ description: 'Array of Skills ' })\n  @IsArray()\n  @IsString()\n  skills:string[];\n}\n \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEmployeeAnalyticsModule\n\nEmployeeAnalyticsModule\n\nAppModule -->\n\nEmployeeAnalyticsModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nSkillModule\n\nSkillModule\n\nAppModule -->\n\nSkillModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EmployeeAnalyticsModule\n                        \n                        \n                            EmployeeModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            SkillModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Logger, MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_GUARD } from '@nestjs/core';\nimport * as crypto from 'crypto';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { AuthGuard } from './modules/auth/auth.guard';\nimport { RolesGuard } from './modules/auth/roles.guard';\nimport { EmployeeModule } from './modules/employee/employee.module';\nimport { EmployeeAnalyticsModule } from './modules//employee/employeeAnalytics.module';\nimport { SkillModule } from './modules/skill/skill.module';\nimport { LoggerMiddleware } from './utils/loggerModule/logger.middleware';\nimport { HealthModule } from './health/health.module';\n \nfunction getKey(key: string): Buffer {\n  return crypto.createHash('sha256').update(key).digest();\n}\n\nfunction decrypt(text: string): string {\n  const secretKey = process.env.SECRET_KEY || 'mongodburlencryptpasswordprovide';\n  const [ivText, encryptedText] = text.split(':');\n  const iv = Buffer.from(ivText, 'hex');\n  const encrypted = Buffer.from(encryptedText, 'hex');\n  const decipher = crypto.createDecipheriv('aes-256-cbc', getKey(secretKey), iv);\n  let decrypted = decipher.update(encrypted);\n  decrypted = Buffer.concat([decrypted, decipher.final()]);\n  console.log(decrypted.toString(),\"====================decrypted string\");\n  return decrypted.toString().trim();\n}\n\n@Module({imports: [\n  AuthModule,\n  EmployeeModule,\n  SkillModule,\n  EmployeeAnalyticsModule,\n  MongooseModule.forRoot('mongodb://localhost:27017',{\n  dbName: 'Newemployeedb'}),\n  ThrottlerModule.forRoot({\n    throttlers: [\n      {\n      ttl: 2,\n      limit: 100,\n      }\n    ],\n  }),\n  ConfigModule.forRoot({\n    isGlobal: true, // Makes the configuration available globally\n    }),\n  HealthModule,\n],\n   \n  providers: [\n  {\n    provide: APP_GUARD,\n     useClass: ThrottlerGuard,\n  },\n  {\n    provide: APP_GUARD,\n     useClass: AuthGuard,\n  },\n  {\n    provide: APP_GUARD,\n     useClass: RolesGuard,\n  },\n  Logger,\n  ],\n})\n\nexport class AppModule implements NestModule{\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).forRoutes('*');\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('auth/profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('auth/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('auth/login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Request,\n  UseGuards\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { Public } from './decorators/public.decorator';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('auth/login')\n  signIn(@Body() signInDto: Record) {\n    return this.authService.signIn(signInDto.username, signInDto.password);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('auth/profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n\n  @Post('auth/logout')\n  async logout(@Request() req) {\n    return req.logout();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n                File\n            \n            \n                src/modules/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { jwtConstants } from './constants';\nimport { IS_PUBLIC_KEY } from './decorators/public.decorator';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  private readonly logger = new Logger(AuthGuard.name);\n  constructor(\n    private jwtService: JwtService,\n    private reflector: Reflector,\n    private authService: AuthService\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    this.logger.debug(` In ` + this.canActivate.name + '. Authenticating user');\n\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (isPublic) {\n      this.logger.debug(` Route is public, continuing without authorizing`);\n      if(token) {\n        try{\n          this.logger.debug(`Attempting to verify token if available`);\n          const payload = await this.jwtService.verifyAsync(token, {\n            secret: process.env.JWT_SECRET,\n          });\n          request['user'] = payload;\n          this.logger.debug(`Token decoded successfully.`);\n        } catch(error: unknown) {\n          this.logger.debug(`Failed to verify token. Message: ${error}. Returning true`);\n        }\n      }\n      // 💡 See this condition\n      return true;\n    }\n    \n    if (!token) {\n    this.logger.error(' Failed to extract access token from request header');\n    // throw new UnauthorizedException(this.authService.convertLang('errors.auth.token', lang));\n    throw new UnauthorizedException();\n    }\n    this.logger.log(` Access Token Extracted from header.`);\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: jwtConstants.secret,\n      });\n      // 💡 We're assigning the payload to the request object here\n      // so that we can access it in our route handlers\n      request['user'] = payload;\n      this.logger.log(` User Authentication successful. Payload: [Name: ${payload.name}, Email: ${payload.email}, Type: ${payload.type}]`);\n    } catch(error: unknown) {\n      this.logger.error(` Caught inside Auth Guard. Failed to authenticate user. Message: ${error}`);\n      throw new UnauthorizedException();\n      // throw new UnauthorizedException(this.authService.convertLang('errors.auth.token', lang));\n    }\n    return true;\n  }\n     \n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nEmployeeModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmployeeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtModule } from '@nestjs/jwt';\nimport { EmployeeModule } from '../employee/employee.module';\nimport { AuthController } from './auth.controller';\nimport { AuthGuard } from './auth.guard';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n\n@Global()\n@Module({\n  imports: [\n    EmployeeModule, PassportModule,\n    JwtModule.register({\n      global: true,\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: process.env.JWT_EXPIRE},\n    }),\n  ],\n  providers: [\n    AuthService, JwtStrategy,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    \n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthService.html":{"url":"classes/AuthService.html","title":"class - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, employeeService: EmployeeService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LoggerService()\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/auth.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { EmployeeService } from '../employee/employee.service';\nimport { LoggerService } from 'src/utils/loggerModule/logger.service';\n\nexport class AuthService {\n  private readonly logger = new LoggerService();\n  constructor(\n    private jwtService: JwtService,\n    private readonly employeeService:EmployeeService) {\n      this.logger.setContext(AuthService.name);\n  }\n\n  async signIn(username: string, pass: string):Promise {\n    const user = await this.employeeService.getEmployee(username);\n    if (user.Password !== pass) {\n      throw new UnauthorizedException();\n    }\n    // const payload = { username: user.Name, sub: user._id };\n    const payload = { username: user.Name};\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeDto.html":{"url":"classes/CreateEmployeeDto.html","title":"class - CreateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/dtos/createEmployee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                engagementScore\n                            \n                            \n                                    \n                                    \n                                hireDate\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                position\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                skillIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Email Address of the employee'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/createEmployee.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        engagementScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Performance score of the employee'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/createEmployee.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Hiredate of the employee'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/createEmployee.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Employee Name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/createEmployee.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Password of the employee'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/createEmployee.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Designation of the employee'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/createEmployee.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Roles of the employee'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/createEmployee.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skillIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [string]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Array of Skills of the employee'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/createEmployee.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { constants } from \"crypto\";\nimport { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsNumber,\n  IsNotEmpty,\n  IsString,\n  IsDate,\n} from 'class-validator';\nimport { PartialType } from \"@nestjs/mapped-types\";\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Role } from '../../../../models/enums/roles.enum';\n\nexport class CreateEmployeeDto {\n  @ApiProperty({ description: 'Employee Name' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n  @ApiPropertyOptional({ description: 'Designation of the employee' })\n  @IsString()\n  position:string;\n  @ApiPropertyOptional({ description: 'Email Address of the employee' })\n  @IsString()\n  email:string;\n  @ApiPropertyOptional({ description: 'Array of Skills of the employee' })\n  @IsArray()\n  skillIds:[string];\n  @ApiPropertyOptional({ description: 'Hiredate of the employee' })\n  @IsDate()\n  hireDate:Date;\n  @ApiPropertyOptional({ description: 'Password of the employee' })\n  @IsString()\n  password:string\n  @ApiPropertyOptional({ description: 'Performance score of the employee' })\n  @IsNumber()\n  engagementScore:number;\n  @ApiPropertyOptional({ description: 'Roles of the employee' })\n  @IsArray()\n  roles:Role[];\n}\n\nexport class UpdateEmployeeDto extends PartialType(CreateEmployeeDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSkillDto.html":{"url":"classes/CreateSkillDto.html","title":"class - CreateSkillDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSkillDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/skill/models/dtos/createSkill.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Skill description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/skill/models/dtos/createSkill.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Skill Name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/skill/models/dtos/createSkill.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PartialType } from \"@nestjs/mapped-types\";\nimport {\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\n\nexport class CreateSkillDto {\n  @ApiProperty({ description: 'Skill Name' })\n  @IsString()\n  @IsNotEmpty()\n  name:string;\n  @ApiPropertyOptional({ description: 'Skill description' })\n  @IsString()\n  description:string;\n}\nexport class UpdateSkillDto extends PartialType(CreateSkillDto) {}\n \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Employee.html":{"url":"classes/Employee.html","title":"class - Employee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Employee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/schemas/EmployeeSchema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                Email\n                            \n                            \n                                    \n                                EngagementScore\n                            \n                            \n                                    \n                                HireDate\n                            \n                            \n                                    \n                                Name\n                            \n                            \n                                    \n                                Password\n                            \n                            \n                                    \n                                Position\n                            \n                            \n                                    \n                                Skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/schemas/EmployeeSchema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        EngagementScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/schemas/EmployeeSchema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        HireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/schemas/EmployeeSchema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, isRequired: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/schemas/EmployeeSchema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, isRequired: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/schemas/EmployeeSchema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/schemas/EmployeeSchema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [string]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, ref: 'Skill'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/schemas/EmployeeSchema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, SchemaTypes } from 'mongoose';\nimport type { HydratedDocument } from 'mongoose';\nexport type EmployeeDocument = HydratedDocument;\n\n@Schema()\nexport class Employee extends Document {\n  @Prop({ type: String, isRequired: true, unique:true })\n  Name: string;\n  @Prop({ type: String })\n  Position: string;\n  // @Prop({ type: Schema.Types.ObjectId, ref: 'Skill'})\n  @Prop({ type: String, ref: 'Skill' })\n  Skills: [string];\n  @Prop({ type: String })\n  Email: string;\n  @Prop({ type: Date })\n  HireDate: Date;\n  @Prop({ type: String, isRequired: true})\n  Password: string;\n  @Prop({ type: Number})\n  EngagementScore: number;\n};\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeAnalyticsModule.html":{"url":"modules/EmployeeAnalyticsModule.html","title":"module - EmployeeAnalyticsModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    EmployeeAnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeAnalyticsModule\n\n\n\ncluster_EmployeeAnalyticsModule_providers\n\n\n\n\nEmployeeAnalyticsService\n\nEmployeeAnalyticsService\n\n\n\nEmployeeAnalyticsModule\n\nEmployeeAnalyticsModule\n\nEmployeeAnalyticsModule -->\n\nEmployeeAnalyticsService->EmployeeAnalyticsModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeAnalyticsModule -->\n\nEmployeeService->EmployeeAnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/employee/employeeAnalytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeeAnalyticsService\n                        \n                        \n                            EmployeeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module} from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Employee, EmployeeSchema } from './models/schemas/EmployeeSchema';\nimport { Skill, SkillSchema } from '../skill/models/schemas/SkillSchema';\nimport { EmployeeService } from './employee.service';\nimport { EmployeeAnalyticsService } from './employeeAnalytics.service';\n\n@Module({\n  imports: [\n      MongooseModule.forFeature([\n        { name: Employee.name, schema: EmployeeSchema },\n        { name: Skill.name, schema: SkillSchema },\n      ]),\n    ],\n    providers: [EmployeeService, EmployeeAnalyticsService],\n})\nexport class EmployeeAnalyticsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeAnalyticsService.html":{"url":"injectables/EmployeeAnalyticsService.html","title":"injectable - EmployeeAnalyticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeAnalyticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/employeeAnalytics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateEngagementScore\n                            \n                            \n                                    Async\n                                getEmployeeData\n                            \n                            \n                                    Async\n                                getEngagementScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeService: WrapperType)\n                    \n                \n                        \n                            \n                                Defined in src/modules/employee/employeeAnalytics.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        WrapperType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateEngagementScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateEngagementScore(updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employeeAnalytics.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getEmployeeData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmployeeData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employeeAnalytics.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getEngagementScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEngagementScore(updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employeeAnalytics.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(EmployeeAnalyticsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/employeeAnalytics.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef, Logger,PipeTransform, NotFoundException, InternalServerErrorException, BadRequestException, ConflictException, Get } from '@nestjs/common';\nimport { EmployeeService } from './employee.service';\nimport { UpdateEmployeeDto } from './models/dtos/createEmployee.dto';\nexport type  WrapperType = T;\n\n@Injectable()\nexport class EmployeeAnalyticsService {\n  \n  constructor(\n    @Inject(forwardRef(() => EmployeeService))\n    private readonly employeeService: WrapperType) {}\n\n  private readonly logger = new Logger(EmployeeAnalyticsService.name);\n  // Calculate the engagement score of the employee.\n  async getEngagementScore(updateEmployeeDto: UpdateEmployeeDto):Promise{\n    const score = this.calculateEngagementScore(updateEmployeeDto);\n    return score;\n  }\n\n// Calculate the engagement score of the employee.\n  async calculateEngagementScore(updateEmployeeDto: UpdateEmployeeDto): Promise {\n    this.logger.debug(\"calculateEngagementScore: Employee Data: \", updateEmployeeDto);\n    const empName:string = String(updateEmployeeDto.name);\n    const existingEmployee = await this.employeeService.getEmployee(empName);\n    if (!existingEmployee) {\n      this.logger.error(\"Employee doesn't exist in database\");\n    }\n    const skills = existingEmployee.Skills;\n    const hireDate = existingEmployee.HireDate;\n    const todayDate = new Date();\n    const yearsDifference = todayDate.getFullYear() - hireDate.getFullYear();\n    const score = (skills.length) * 10  + yearsDifference * 5;\n    this.logger.debug(\"calculateEngagementScore: Engagement score: \", score);\n    return score;\n  }\n  \n  // Get Employee data from DB for reporting purpose.\n  async getEmployeeData()  {\n    return this.employeeService.getAllEmployees();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeeController.html":{"url":"controllers/EmployeeController.html","title":"controller - EmployeeController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  EmployeeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/employee.controller.ts\n        \n            \n                Prefix\n            \n            \n                Employee\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addSkillsToEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAllSkilledEmployees\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getEmployeeOfSkills\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getEmployees\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getMatchedEmployees\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getSkilledEmployees\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateEmployee\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addSkillsToEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    addSkillsToEmployee(response, addSkillsEmployeeDto: AddSkillsEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('AddSkillsToEmployee')@Roles(Role.Admin)@ApiBody({type: AddSkillsEmployeeDto})@ApiOperation({summary: 'Add Skills to Employee in the database'})@ApiResponse({status: 200, description: 'Employee added successfully', type: CreateEmployeeDto})@ApiResponse({status: 400, description: 'Failed to add the employee'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                addSkillsEmployeeDto\n                                            \n                                                            AddSkillsEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmployee(response, createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('createEmployee')@Roles(Role.Admin)@ApiBody({type: CreateEmployeeDto})@ApiOperation({summary: 'Add Employee in the database'})@ApiResponse({status: 200, description: 'Employee added successfully', type: CreateEmployeeDto})@ApiResponse({status: 400, description: 'Failed to add the employee'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEmployee(response, EmployeeName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':EmployeeName')@Roles(Role.Admin)@ApiOperation({summary: 'Delete specified Employee record'})@ApiResponse({status: 200, description: 'Employee data deleted successfully'})@ApiResponse({status: 400, description: 'Employee not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:300\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                EmployeeName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getAllSkilledEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllSkilledEmployees(response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('AllskilledEmployees')@ApiOperation({summary: 'Get all Employees of matching skill'})@ApiResponse({status: 200, description: 'Employees fetched successfully', type: GetMatchedEmployeeAllSkillsResponse})@ApiResponse({status: 400, description: 'Employees not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmployee(response, EmployeeName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':EmployeeName')@ApiOperation({summary: 'Get specified Employee data'})@ApiResponse({status: 200, description: 'Employee data fetched successfully'})@ApiResponse({status: 400, description: 'Employee not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:275\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                EmployeeName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getEmployeeOfSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmployeeOfSkills(skill: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('Skills')@ApiOperation({summary: 'Get all Employees of matching skill'})@ApiResponse({status: 200, description: 'Employees fetched successfully'})@ApiResponse({status: 400, description: 'Employees not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                skill\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmployees(response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all Employee data'})@ApiResponse({status: 200, description: 'Employees fetched successfully'})@ApiResponse({status: 400, description: 'Employees not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:252\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getMatchedEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMatchedEmployees(empSkill: string, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@ApiOperation({summary: 'Get the list of Employees of matching skill'})@ApiResponse({status: 200, description: 'Employees fetched successfully', type: GetMatchedEmployeeSkillsResponse})@ApiResponse({status: 400, description: 'Employees not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                empSkill\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getSkilledEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkilledEmployees(skillSelectionDto: SkillSelectionDto, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skilledEmployees')@ApiOperation({summary: 'Get all Employees of matching skill'})@ApiResponse({status: 200, description: 'Employees fetched successfully', type: GetMatchedEmployeeSkillsResponse})@ApiResponse({status: 400, description: 'Employees not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                skillSelectionDto\n                                            \n                                                            SkillSelectionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployee(response, EmployeeName: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':EmployeeName')@Roles(Role.Admin)@ApiOperation({summary: 'Update the employee record of specified name)'})@ApiResponse({status: 200, description: 'Employee updated successfully', type: UpdateEmployeeDto})@ApiResponse({status: 400, description: 'Failed to update the employee'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                EmployeeName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateScore(response, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/UpdateScore')@Roles(Role.Admin)@ApiBody({type: UpdateEmployeeDto})@ApiOperation({summary: 'Update the score of the employee)'})@ApiResponse({status: 200, description: 'Score updated successfully', type: UpdateEmployeeDto})@ApiResponse({status: 400, description: 'Failed to update the score'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/employee/employee.controller.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Logger, Delete, Get, Query, HttpStatus, Param, Post, Put, Res, UseGuards } from '@nestjs/common';\nimport { Roles } from '../auth/decorators/roles.decorator';\nimport { Role } from '../../models/enums/roles.enum';\nimport { ApiTags, ApiBody, ApiBearerAuth, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { EmployeeService } from './employee.service';\nimport { CreateEmployeeDto, UpdateEmployeeDto } from './models/dtos/createEmployee.dto';\nimport { \n  GetMatchedEmployeeSkillsResponse\n } from './models/dtos/get-matched-employee-skills-response.dto';\nimport { SkillSelectionDto } from './models/dtos/skill-selection.dto';\nimport {GetMatchedEmployeeAllSkillsResponse}  from './models/dtos/get-matched-employee-skills-response.dto';\nimport { AddSkillsEmployeeDto } from './models/dtos/addSkillToEmployee.dto';\n\n@ApiTags('Employee')\n@Controller('Employee')\nexport class EmployeeController {\n  private readonly logger = new Logger(EmployeeController.name);\n  constructor(private readonly employeeService: EmployeeService) { }\n  @Post('createEmployee')\n  @Roles(Role.Admin)\n  @ApiBody({ type: CreateEmployeeDto })\n  @ApiOperation({\n    summary: 'Add Employee in the database',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee added successfully',\n    type: CreateEmployeeDto,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Failed to add the employee',\n  })\n  async createEmployee(@Res() response, @Body() createEmployeeDto: CreateEmployeeDto) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: createEmployee.name\");\n    try {\n      const newEmployee = await this.employeeService.createEmployee(createEmployeeDto);\n      // console.log(\" Returned from the service method\", newEmployee);\n      return response.status(HttpStatus.CREATED).json({\n        message: 'Employee has been added successfully',\n        newEmployee});\n    } catch (err) {\n      return response.status(HttpStatus.BAD_REQUEST).json({\n      statusCode: 400,\n      message: 'Error: Employee not Created!',\n      error: 'Bad Request'\n      });\n    }\n  }\n\n  @Post('AddSkillsToEmployee')\n  @Roles(Role.Admin)\n  @ApiBody({ type: AddSkillsEmployeeDto })\n  @ApiOperation({\n    summary: 'Add Skills to Employee in the database',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee added successfully',\n    type: CreateEmployeeDto,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Failed to add the employee',\n  })\n  async addSkillsToEmployee(@Res() response, @Body() addSkillsEmployeeDto:AddSkillsEmployeeDto) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: addSkillsToEmployee.name\");\n    try {\n      const newEmployee = await this.employeeService.addSkillsToEmployee(addSkillsEmployeeDto);\n      // console.log(\" Returned from the service method\", newEmployee);\n      return response.status(HttpStatus.CREATED).json({\n        message: 'Employee has been added successfully',\n        newEmployee});\n    } catch (err) {\n      return response.status(HttpStatus.BAD_REQUEST).json({\n      statusCode: 400,\n      message: 'Error: Employee not Created!',\n      error: 'Bad Request'\n      });\n    }\n  }\n  \n  @Put(':EmployeeName')\n  @Roles(Role.Admin)\n  @ApiOperation({\n    summary: 'Update the employee record of specified name)',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee updated successfully',\n    type: UpdateEmployeeDto,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Failed to update the employee',\n  })\n  async updateEmployee(@Res() response,@Param('EmployeeName') EmployeeName: string, @Body() updateEmployeeDto: UpdateEmployeeDto) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: updateEmployee.name\");\n    try {\n      const existingEmployee = await this.employeeService.updateEmployee(EmployeeName, updateEmployeeDto);\n      return response.status(HttpStatus.OK).json({\n      message: 'Employee has been successfully updated',\n      existingEmployee,});\n    } catch (err) {\n      return response.status(HttpStatus.BAD_REQUEST).json({\n      statusCode: 400,\n      message: 'Error: Employee Not Updated!',\n      error: 'Bad Request'\n      });\n    }\n  }\n\n  @Put('/UpdateScore')\n  @Roles(Role.Admin)\n  @ApiBody({ type: UpdateEmployeeDto })\n  @ApiOperation({\n    summary: 'Update the score of the employee)',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Score updated successfully',\n    type: UpdateEmployeeDto,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Failed to update the score',\n  })\n  async updateScore(@Res() response,  @Body() updateEmployeeDto:UpdateEmployeeDto) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: updateScore.name\");\n    try {\n      const existingSkill = await this.employeeService.updateScore(updateEmployeeDto);\n      return response.status(HttpStatus.OK).json({\n      message: 'Employee has been successfully updated',\n      existingSkill,});\n    } catch (err) {\n      return response.status(HttpStatus.BAD_REQUEST).json({\n      statusCode: 400,\n      message: 'Error: Skill Not Updated!',\n      error: 'Bad Request'\n      });\n    }\n  }\n\n  @Get('AllskilledEmployees')\n  @ApiOperation({\n    summary: 'Get all Employees of matching skill',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employees fetched successfully',\n    type: GetMatchedEmployeeAllSkillsResponse,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Employees not found',\n  })\n  async getAllSkilledEmployees( @Res() response) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: getAllSkilledEmployees.name\");\n    try {\n      // console.log('In the controller method: getAllSkilledEmployees.name');\n      const data: GetMatchedEmployeeAllSkillsResponse[] = await this.employeeService.getAllSkilledEmployees();\n      return response.status(HttpStatus.OK).json({data});\n    } catch (err) {\n      return response.status(HttpStatus.OK).json(err);\n    }\n  }\n\n  @Post('skilledEmployees')\n  @ApiOperation({\n  summary: 'Get all Employees of matching skill',\n    })\n  @ApiResponse({\n    status: 200,\n    description: 'Employees fetched successfully',\n    type: GetMatchedEmployeeSkillsResponse,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Employees not found',\n  })\n  async getSkilledEmployees(@Body() skillSelectionDto:SkillSelectionDto, @Res() response) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: getSkilledEmployees.name\");\n    try {\n      // console.log('In the controller method: getMatchedEmployees.name');\n      // console.log('In the controller method: getMatchedEmployees.name : empSkill:', empSkill);\n      const data: GetMatchedEmployeeSkillsResponse = await this.employeeService.getSkilledEmployees(skillSelectionDto);\n      return response.status(HttpStatus.OK).json({data});\n    } catch (err) {\n      return response.status(err).json(err);\n    }\n  }\n\n  @Get('list')\n  @ApiOperation({\n    summary: 'Get the list of Employees of matching skill',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employees fetched successfully',\n    type: GetMatchedEmployeeSkillsResponse,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Employees not found',\n  })\n  async getMatchedEmployees(@Query('empSkill') empSkill:string, @Res() response) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: getMatchedEmployees.name\");\n    try {\n      // console.log('In the controller method: getMatchedEmployees.name');\n      // console.log('In the controller method: getMatchedEmployees.name : empSkill:', empSkill);\n      const data: GetMatchedEmployeeSkillsResponse = await this.employeeService.getMatchedEmployees(empSkill);\n      return response.status(HttpStatus.OK).json({data});\n    } catch (err) {\n    return response.status(err).json(err);\n    }\n  }\n\n  @Get('Skills')\n  @ApiOperation({\n    summary: 'Get all Employees of matching skill',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employees fetched successfully',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Employees not found',\n  })\n  async getEmployeeOfSkills(@Query('skill') skill:string,  @Res() response) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: getEmployeeOfSkills.name\");\n    try {\n      const data = await this.employeeService.getEmployeesOfSkill(skill);\n      return response.status(HttpStatus.OK).json({data});\n    } catch (err) {\n    return response.status(err).json(err);\n    }\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Get all Employee data',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employees fetched successfully',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Employees not found',\n  })\n  async getEmployees(@Res() response) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: getEmployees.name\");\n    try {\n      const EmployeeData = await this.employeeService.getAllEmployees();\n      return response.status(HttpStatus.OK).json({\n      message: 'All Employees data found successfully',EmployeeData});\n    } catch (err) {\n      return response.status(err).json(err);\n    }\n  }\n\n  @Get(':EmployeeName')\n  @ApiOperation({\n    summary: 'Get specified Employee data',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee data fetched successfully',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Employee not found',\n  })\n  async getEmployee(@Res() response, @Param('EmployeeName') EmployeeName: string) {\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: getEmployee.name\");\n    try {\n      const existingEmployee = await this.employeeService.getEmployee(EmployeeName);\n      console.log('Existing employee:', existingEmployee);\n      return response.status(HttpStatus.OK).json({\n      message: 'Employee found successfully',existingEmployee,});\n    } catch (err) {\n    return response.status(err).json(err);\n    }\n  }\n\n  @Delete(':EmployeeName')\n  @Roles(Role.Admin)\n  @ApiOperation({\n    summary: 'Delete specified Employee record',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Employee data deleted successfully',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Employee not found',\n  })\n  async deleteEmployee(@Res() response, @Param('EmployeeName') EmployeeName: string){\n    this.logger.debug(\"In the service: EmployeeController.name \\t method: deleteEmployee.name\");\n    try {\n      const deletedEmployee = await this.employeeService.deleteEmployee(EmployeeName);\n      return response.status(HttpStatus.OK).json({\n      message: 'Employee deleted successfully',\n      deletedEmployee,});\n    }catch (err) {\n      return response.status(err).json(err);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_exports\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nEmployeeAnalyticsService \n\nEmployeeAnalyticsService \n\n\n\nEmployeeService \n\nEmployeeService \n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeAnalyticsService  -->\n\nEmployeeModule->EmployeeAnalyticsService \n\n\n\nEmployeeService  -->\n\nEmployeeModule->EmployeeService \n\n\n\n\n\nEmployeeAnalyticsService\n\nEmployeeAnalyticsService\n\nEmployeeModule -->\n\nEmployeeAnalyticsService->EmployeeModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/employee/employee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeeAnalyticsService\n                        \n                        \n                            EmployeeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeeController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmployeeAnalyticsService\n                        \n                        \n                            EmployeeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Employee, EmployeeSchema } from './models/schemas/EmployeeSchema';\nimport { Skill, SkillSchema } from '../skill/models/schemas/SkillSchema';\nimport { EmployeeController } from './employee.controller';\nimport { EmployeeService } from './employee.service';\nimport { EmployeeAnalyticsService } from './employeeAnalytics.service';\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Employee.name, schema: EmployeeSchema },\n      { name: Skill.name, schema: SkillSchema },\n    ]),\n  ],\n  controllers: [EmployeeController],\n  providers: [EmployeeService, EmployeeAnalyticsService],\n  exports: [EmployeeService, EmployeeAnalyticsService],\n})\n\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeService.html":{"url":"injectables/EmployeeService.html","title":"injectable - EmployeeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/employee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addSkillsToEmployee\n                            \n                            \n                                    Async\n                                createEmployee\n                            \n                            \n                                    Async\n                                deleteEmployee\n                            \n                            \n                                    Async\n                                getAllEmployees\n                            \n                            \n                                    Async\n                                getAllSkilledEmployees\n                            \n                            \n                                    Async\n                                getEmployee\n                            \n                            \n                                    Async\n                                getEmployeesOfSkill\n                            \n                            \n                                    Async\n                                getMatchedEmployees\n                            \n                            \n                                    Async\n                                getSkilledEmployees\n                            \n                            \n                                    Async\n                                updateEmployee\n                            \n                            \n                                    Async\n                                updateScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeModel: Model, skillModel: Model, employeeAnalyticsService: WrapperType)\n                    \n                \n                        \n                            \n                                Defined in src/modules/employee/employee.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skillModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeeAnalyticsService\n                                                  \n                                                        \n                                                                        WrapperType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addSkillsToEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    addSkillsToEmployee(addSkillsDto: AddSkillsEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addSkillsDto\n                                            \n                                                            AddSkillsEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmployee(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEmployee(empName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                empName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllEmployees()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllSkilledEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllSkilledEmployees()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmployee(empName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                empName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getEmployeesOfSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmployeesOfSkill(skill: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                skill\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMatchedEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMatchedEmployees(empSkill: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                empSkill\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkilledEmployees\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkilledEmployees(skillSelectionDto: SkillSelectionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                skillSelectionDto\n                                            \n                                                            SkillSelectionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployee(EmpId: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                EmpId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateScore(updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employee/employee.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(EmployeeService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/employee.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef, Logger,PipeTransform, NotFoundException, InternalServerErrorException, BadRequestException, ConflictException, Get } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { EmployeeAnalyticsService } from './employeeAnalytics.service';\nimport { Employee } from './models/schemas/EmployeeSchema';\nimport { Skill } from '../skill/models/schemas/SkillSchema';\nimport { CreateEmployeeDto, UpdateEmployeeDto } from './models/dtos/createEmployee.dto';\nimport { GetMatchedEmployeeAllSkillsResponse }  from './models/dtos/get-matched-employee-skills-response.dto';\nimport { \n  GetMatchedEmployeeSkillsResponseDto,\n  GetMatchedEmployeeSkillsResponse\n } from './models/dtos/get-matched-employee-skills-response.dto';\nimport { SkillSelectionDto } from './models/dtos/skill-selection.dto';\nimport { AddSkillsEmployeeDto } from './models/dtos/addSkillToEmployee.dto';\nexport type  WrapperType = T;\n\n@Injectable()\nexport class EmployeeService {\n  private readonly logger = new Logger(EmployeeService.name);\n  constructor(@InjectModel('Employee') private employeeModel:Model, @InjectModel('Skill') private skillModel:Model,\n    @Inject(forwardRef(() => EmployeeAnalyticsService))\n    private readonly employeeAnalyticsService: WrapperType) {}\n   \n  // Create the employee in mongo db.\n  async createEmployee(createEmployeeDto: CreateEmployeeDto): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: createEmployee.name\");\n    const empId = createEmployeeDto.name;\n    const existingEmployee = await this.employeeModel.findOne({ EmployeeId: empId }).exec();\n    \n    if (existingEmployee) {\n      this.logger.error(\"Employee alreadt exists\");\n      return null;\n    }\n    const newEmployee = new this.employeeModel(createEmployeeDto);\n    this.logger.debug(\"createEmployee: Created Employee Data:\", newEmployee);\n    return newEmployee.save();\n  }\n\n  // Update the employee in db.\n  async updateEmployee(EmpId: string, updateEmployeeDto: UpdateEmployeeDto): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: updateEmployee.name\");\n    const filter = {EmployeeId: EmpId};\n    const UpdateEmployee = await this.employeeModel.findOneAndUpdate(filter, updateEmployeeDto, { new: true }).exec();\n    this.logger.debug(\"Updated Employee:\", UpdateEmployee);\n    if (!UpdateEmployee) {\n      this.logger.error(`updateEmployee: Employee #${EmpId} not found`);\n    }\n    return UpdateEmployee;\n  }\n\n  // Get All skilled employees from DB using pipeline.\n  async getAllSkilledEmployees(): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: getAllSkilledEmployees.name\");\n    const employeeData:GetMatchedEmployeeAllSkillsResponse[] = await this.employeeModel.aggregate([\n      { $unwind: {path: \"$EmployeeSkills\" }},\n      { $group: { _id: \"$EmployeeSkills\",\n        Employees: {\n          $push: {\n            empId: \"$EmployeeId\",\n            empName: \"$EmployeeName\"\n            }\n          }  \n        }\n      },\n      // { $project: { EmpSkill: \"$_id\", Employees: 1 } },\n      { $project: { Employees: 1 } },\n      { $set: {EmpSkill: \"$_id\"}},\n      { $unset: \"_id\" },\n      { $sort: { EmployeeId: 1 },}, \n    ]);\n    this.logger.debug(\"getAllSkilledEmployees: Skilled Employee Data:\", employeeData);\n    return employeeData;\n  }\n\n  // Get skilled employees from DB using pipeline in a specific format.\n  async getSkilledEmployees(skillSelectionDto:SkillSelectionDto): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: getSkilledEmployees.name\");\n    console.log(\"Employee Skill: \", skillSelectionDto.empSkill);\n    const skill =  skillSelectionDto.empSkill;\n    console.log(\"Required SKill:\", skill);\n    const employeeData:GetMatchedEmployeeSkillsResponseDto[] = await this.employeeModel.aggregate([\n    { $match: { EmployeeSkills: skill }, },\n    { $project: { EmployeeName: 1, _id: 0 } },\n    { $sort: { EmployeeName: 1 },},\n    ]);\n\n    const count = await this.employeeModel.countDocuments({ EmployeeSkills: skill });\n    const data:GetMatchedEmployeeSkillsResponse = {count:count, empSkill:skill, employeeData};\n    this.logger.debug(\"getSkilledEmployees: Skilled Employee Data:\", data);\n    return data;\n  }\n\n  // Get matched employees of speciied skill from db using pipeline.\n  async getMatchedEmployees(empSkill:string): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: getMatchedEmployees.name\");\n    const employeeData:GetMatchedEmployeeSkillsResponseDto[] = await this.employeeModel.aggregate([\n      { $match: { EmployeeSkills: empSkill }, },\n      { $project: { EmployeeName: 1, _id: 0 } },\n      { $sort: { EmployeeName: 1 },},\n    ]);\n\n    const count = await this.employeeModel.countDocuments({ EmployeeSkills: empSkill });\n    const data:GetMatchedEmployeeSkillsResponse = {count, empSkill, employeeData};\n    this.logger.debug(\"getMatchedEmployees: Matched Employee Data:\", data);\n    return data;\n  }\n\n  // Get all the data from the Employee collection.\n  async getAllEmployees(): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: getAllEmployees.name\");\n    const employeeData = await this.employeeModel.find().exec();\n    if (!employeeData || employeeData.length == 0) {\n      this.logger.error('getAllEmployees: Employees data not found!');\n    }\n    return employeeData;\n  }\n\n  // Get the data of the specific Employee from db.\n  async getEmployee(empName: string): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: getEmployee.name\");\n    const existingEmployee = await this.employeeModel.findOne({ EmployeeName: empName }).exec();\n    if (!existingEmployee) {\n      this.logger.error(`getEmployee: Employee #${empName} not found`);\n    }\n    return existingEmployee;\n  }\n\n  // Delete the specific employee from collection.\n  async deleteEmployee(empName: string): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: deleteEmployee.name\");\n    const filter = {EmployeeId: empName};\n    const deletedEmployee = await this.employeeModel.findOneAndDelete(filter).exec();\n    if (!deletedEmployee) {\n      this.logger.error(`deleteEmployee: Employee #${empName} not found`);\n    } \n    return deletedEmployee;\n  }\n\n  // Get matched employees of speciied skill from db without pipeline.\n  async getEmployeesOfSkill(skill:string):Promise { \n    this.logger.debug(\"In the service: EmployeeService.name \\t method: getEmployeesOfSkill.name\");\n    const employeesOfSkill = await this.employeeModel.find({ EmployeeSkills: skill }).exec();\n    const count = await this.employeeModel.countDocuments({ EmployeeSkills: skill });\n    const employeesOutput: any[] = [];\n\n    for (const user of employeesOfSkill) {\n      // this.logger.debug( 'Count:' + count, ' Id: ' + user.Name, 'Name: ');\n      const userJson = {\n        'employeeName': user.Name,\n      }\n      employeesOutput.push(userJson);\n      this.logger.debug(\"getEmployeesOfSkill: Skills Response: \", employeesOutput);\n    }\n    const data = [{\n      Skill: skill,\n      Count: count,\n      Employees: employeesOutput,\n    }]\n    return data;\n  }\n\n  // Caluclate the engagement score and update the score field of the corresponding employee.\n  async updateScore(updateEmployeeDto: UpdateEmployeeDto): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: updateScore.name\");\n    const empName = updateEmployeeDto.name;\n    const filter = {EmployeeName: empName};\n    // Caluclate the engagement score\n    const score = this.employeeAnalyticsService.getEngagementScore(updateEmployeeDto);\n    this.logger.debug(\"updateScore: Employee score: \", score);\n    // Update the employee record with the score.\n    const updateEmployee = await this.employeeModel.findByIdAndUpdate(filter, { $set: { EngagementScore: score }}).exec();\n    this.logger.debug(`updateScore: Updated Employee #${updateEmployee}`);\n    if (!updateEmployee) {\n      this.logger.error(`updateScore: Employee #${empName} not found`);\n    }\n    return updateEmployee;\n  }\n\n  // Add the specified skills to the corresponding Employee.\n  async addSkillsToEmployee(addSkillsDto:AddSkillsEmployeeDto): Promise {\n    this.logger.debug(\"In the service: EmployeeService.name \\t method: addSkillsToEmployee.name\");\n    const empId = addSkillsDto.empId;\n    const skills = addSkillsDto.skills;\n    const employeeFilter = {_id: empId};\n    for (const skill of skills) {\n      const skillFilter = {name: skill};\n      // Check the skills exist in Skill documents. Return if it doesn't exist.\n      const skillsExist = await this.skillModel.findOne(skillFilter).exec();\n      if (!skillsExist) {\n        this.logger.error(`addSkillsToEmployee: Skill #${skill} not found`);\n        return null;\n      }\n    }\n    // Update the employee with the skills. \n    const updatedEmployee = await this.employeeModel.findByIdAndUpdate(employeeFilter, { $set: { skill: skills }}).exec();\n    this.logger.debug(`Updated Employee #${updatedEmployee}`);\n    if (!updatedEmployee) {\n      this.logger.error(`updatedEmployee: Error in updating the employee record Employee #${empId}`);\n    }\n    return updatedEmployee;\n  }\n\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMatchedEmployeeAllSkillsResponse.html":{"url":"classes/GetMatchedEmployeeAllSkillsResponse.html","title":"class - GetMatchedEmployeeAllSkillsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMatchedEmployeeAllSkillsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                employeeData\n                            \n                            \n                                    \n                                    \n                                empSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data)\n                    \n                \n                        \n                            \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employeeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Corresponding employee data'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        empSkill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Skill name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { constants } from \"crypto\";\n\n \nimport { Transform, Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsArray,\n  IsNumber,\n  IsNotEmpty,\n  IsString,\n  IsObject,\n} from 'class-validator';\n\nexport class GetMatchedEmployeeSkillsResponseDto {\n  @ApiProperty({ description: 'Employee Name' })\n  @IsString()\n  @IsNotEmpty()\n  Name: string;\n  @ApiPropertyOptional({ description: 'Skills of the employee' })\n  @IsArray()\n  SkillIds: [string];\n  constructor(data) {\n    this.Name = data.Name;\n    this.SkillIds = data.skillIds;\n  }\n}\n\nexport class GetMatchedEmployeeSkillsResponse {\n  @ApiPropertyOptional({ description: 'Count of the employees matching skills' })\n  @IsNumber()\n  @IsNotEmpty()\n  count: number;\n  @ApiPropertyOptional({ description: 'Skill name' })\n  @IsString()\n  empSkill: string;\n  @ApiPropertyOptional({ description: 'Corresponding employee data' })\n  @IsArray()\n  @IsObject()\n  employeeData:GetMatchedEmployeeSkillsResponseDto[];\n\n  constructor(data) {\n    this.count = data.count;\n    this.empSkill = data.EmployeSkill;\n    this.employeeData = data.employeeData;\n  }\n}\n\nexport class GetMatchedEmployeeAllSkillsResponse {\n  @ApiPropertyOptional({ description: 'Skill name' })\n  @IsString()\n  empSkill: string;\n  @ApiPropertyOptional({ description: 'Corresponding employee data' })\n  @IsString()\n  employeeData: string;\n\n  constructor(data) {\n    this.empSkill = data.EmployeSkill;\n    this.employeeData = data.employeeData;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMatchedEmployeeSkillsResponse.html":{"url":"classes/GetMatchedEmployeeSkillsResponse.html","title":"class - GetMatchedEmployeeSkillsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMatchedEmployeeSkillsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                count\n                            \n                            \n                                    \n                                    \n                                    \n                                employeeData\n                            \n                            \n                                    \n                                    \n                                empSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data)\n                    \n                \n                        \n                            \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Count of the employees matching skills'})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        employeeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetMatchedEmployeeSkillsResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Corresponding employee data'})@IsArray()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        empSkill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Skill name'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { constants } from \"crypto\";\n\n \nimport { Transform, Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsArray,\n  IsNumber,\n  IsNotEmpty,\n  IsString,\n  IsObject,\n} from 'class-validator';\n\nexport class GetMatchedEmployeeSkillsResponseDto {\n  @ApiProperty({ description: 'Employee Name' })\n  @IsString()\n  @IsNotEmpty()\n  Name: string;\n  @ApiPropertyOptional({ description: 'Skills of the employee' })\n  @IsArray()\n  SkillIds: [string];\n  constructor(data) {\n    this.Name = data.Name;\n    this.SkillIds = data.skillIds;\n  }\n}\n\nexport class GetMatchedEmployeeSkillsResponse {\n  @ApiPropertyOptional({ description: 'Count of the employees matching skills' })\n  @IsNumber()\n  @IsNotEmpty()\n  count: number;\n  @ApiPropertyOptional({ description: 'Skill name' })\n  @IsString()\n  empSkill: string;\n  @ApiPropertyOptional({ description: 'Corresponding employee data' })\n  @IsArray()\n  @IsObject()\n  employeeData:GetMatchedEmployeeSkillsResponseDto[];\n\n  constructor(data) {\n    this.count = data.count;\n    this.empSkill = data.EmployeSkill;\n    this.employeeData = data.employeeData;\n  }\n}\n\nexport class GetMatchedEmployeeAllSkillsResponse {\n  @ApiPropertyOptional({ description: 'Skill name' })\n  @IsString()\n  empSkill: string;\n  @ApiPropertyOptional({ description: 'Corresponding employee data' })\n  @IsString()\n  employeeData: string;\n\n  constructor(data) {\n    this.empSkill = data.EmployeSkill;\n    this.employeeData = data.employeeData;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMatchedEmployeeSkillsResponseDto.html":{"url":"classes/GetMatchedEmployeeSkillsResponseDto.html","title":"class - GetMatchedEmployeeSkillsResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMatchedEmployeeSkillsResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                Name\n                            \n                            \n                                    \n                                    \n                                SkillIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data)\n                    \n                \n                        \n                            \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Employee Name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SkillIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [string]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Skills of the employee'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { constants } from \"crypto\";\n\n \nimport { Transform, Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsArray,\n  IsNumber,\n  IsNotEmpty,\n  IsString,\n  IsObject,\n} from 'class-validator';\n\nexport class GetMatchedEmployeeSkillsResponseDto {\n  @ApiProperty({ description: 'Employee Name' })\n  @IsString()\n  @IsNotEmpty()\n  Name: string;\n  @ApiPropertyOptional({ description: 'Skills of the employee' })\n  @IsArray()\n  SkillIds: [string];\n  constructor(data) {\n    this.Name = data.Name;\n    this.SkillIds = data.skillIds;\n  }\n}\n\nexport class GetMatchedEmployeeSkillsResponse {\n  @ApiPropertyOptional({ description: 'Count of the employees matching skills' })\n  @IsNumber()\n  @IsNotEmpty()\n  count: number;\n  @ApiPropertyOptional({ description: 'Skill name' })\n  @IsString()\n  empSkill: string;\n  @ApiPropertyOptional({ description: 'Corresponding employee data' })\n  @IsArray()\n  @IsObject()\n  employeeData:GetMatchedEmployeeSkillsResponseDto[];\n\n  constructor(data) {\n    this.count = data.count;\n    this.empSkill = data.EmployeSkill;\n    this.employeeData = data.employeeData;\n  }\n}\n\nexport class GetMatchedEmployeeAllSkillsResponse {\n  @ApiPropertyOptional({ description: 'Skill name' })\n  @IsString()\n  empSkill: string;\n  @ApiPropertyOptional({ description: 'Corresponding employee data' })\n  @IsString()\n  employeeData: string;\n\n  constructor(data) {\n    this.empSkill = data.EmployeSkill;\n    this.employeeData = data.employeeData;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, HttpHealthIndicator, DiskHealthIndicator,  MemoryHealthIndicator, MongooseHealthIndicator, HealthCheck } from '@nestjs/terminus';\n\n@Controller('health')\n export class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private memory: MemoryHealthIndicator,\n    private http: HttpHealthIndicator,\n     private readonly disk: DiskHealthIndicator,\n    private mongoose: MongooseHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n        async () => this.http.pingCheck('application', 'https://localhost:3000'),\n        // To check if the storage exceeds 50% limit\n        async () => this.disk.checkStorage('storage', { path: '/', thresholdPercent: 0.5 }),\n        // Check if the storage exceedds 250 GB\n        // () => this.disk.checkStorage('storage', {  path: '/', threshold: 250 * 1024 * 1024 * 1024, })\n        // Memory health check indicator for heap size.\n        async () => this.memory.checkHeap('memory_heap', 150 * 1024 * 1024),\n        async () => this.mongoose.pingCheck('mongoose'),\n    ]);  \n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [\n    HttpModule,\n    TerminusModule.forRoot({\n      gracefulShutdownTimeoutMs: 1000,\n    }),\n     MongooseModule.forRoot('mongodb://localhost:27017/NewEmployeeDb'),\n  ],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEmployee.html":{"url":"interfaces/IEmployee.html","title":"interface - IEmployee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEmployee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/interfaces/Employee.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            engagementScore\n                                        \n                                \n                                \n                                        \n                                            hireDate\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            skillIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        engagementScore\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        engagementScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hireDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hireDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skillIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skillIds:     [string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectId } from \"mongodb\";\n\nexport interface IEmployee {\n  name: string;\n  position: string;\n  skillIds: [string];\n  email: string;\n  hireDate: Date;\n  password: string;\n  engagementScore: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISkill.html":{"url":"interfaces/ISkill.html","title":"interface - ISkill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISkill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/skill/models/interfaces/Skill.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Description\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectId } from \"mongodb\";\n\nexport interface ISkill {\n  Name: string;\n  Description: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/jwt.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return {username: payload.username };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const token = await this.authService.signIn(username, password);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    return token;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerConfig.html":{"url":"interfaces/LoggerConfig.html","title":"interface - LoggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/loggerModule/logger.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoggerConfig {\n    level: string;\n    environment: string;\n  }\n  \n  export interface RequestLog {\n    traceId: string;\n    method: string;\n    url: string;\n    duration: number;\n    statusCode: number;\n    body?: any;\n    query?: any;\n    params?: any;\n    headers?: any;\n    timestamp: string;\n    path: string;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/loggerModule/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utils/loggerModule/logger.middleware.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.middleware.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LoggerService()\n                    \n                \n                    \n                        \n                                Defined in src/utils/loggerModule/logger.middleware.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { LoggerService } from './logger.service';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  private readonly logger = new LoggerService();\n  constructor() {\n    this.logger.setContext(LoggerMiddleware.name);\n  }\n\n  use(req: Request, res: Response, next: NextFunction) {\n    const traceId = uuidv4();\n    this.logger.setTraceId(traceId);\n\n    const startTime = Date.now();\n\n    const { method, originalUrl, body, headers, ip } = req;\n    const authToken = req.get('Authorization');\n    this.logger.log(\n      `Request object: [ Method[${method}] URL[${headers.host}${originalUrl}] JWT[${authToken? 'found': 'not found'}] Body[${JSON.stringify(\n        body,\n      )}] IP[${ip}]]`,\n    );\n\n    res.on('finish', () => {\n      const duration = Date.now() - startTime;\n      const requestDetails = {\n        traceId,\n        method: req.method,\n        url: req.originalUrl,\n        duration,\n        statusCode: res.statusCode,\n        body: process.env.NODE_ENV === 'development' ? req.body : undefined,\n        query: process.env.NODE_ENV === 'development' ? req.query : undefined,\n        params: process.env.NODE_ENV === 'development' ? req.params : undefined,\n        headers: process.env.NODE_ENV === 'development' ? req.headers : undefined,\n        timestamp: new Date().toISOString(),\n        path: req.path,\n      };\n\n      this.logger.logRequest(requestDetails);\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService \n\nLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utils/loggerModule/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\n\n@Module({\n  providers: [\n    LoggerService\n  ],\n  exports: [LoggerService],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/loggerModule/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                context\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                    Static\n                                traceIdStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorizeLevel\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                    Private\n                                initializeLogger\n                            \n                            \n                                log\n                            \n                            \n                                logRequest\n                            \n                            \n                                setContext\n                            \n                            \n                                setTraceId\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    traceId\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utils/loggerModule/logger.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorizeLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    colorizeLevel(level: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                level\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: any, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeLogger\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeLogger()\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logRequest\n                        \n                    \n                \n            \n            \n                \nlogRequest(requestLog: RequestLog)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestLog\n                                            \n                                                            RequestLog\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setContext\n                        \n                    \n                \n            \n            \n                \nsetContext(context: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTraceId\n                        \n                    \n                \n            \n            \n                \nsetTraceId(traceId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                traceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:189\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/loggerModule/logger.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     winston.Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/loggerModule/logger.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        traceIdStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AsyncLocalStorage()\n                    \n                \n                    \n                        \n                                Defined in src/utils/loggerModule/logger.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        traceId\n                    \n                \n\n                \n                    \n                        gettraceId()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/loggerModule/logger.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, LoggerService as NestLoggerService } from '@nestjs/common';\nimport * as winston from 'winston';\nimport DailyRotateFile from 'winston-daily-rotate-file';\n// import * as colors from 'colors/safe';\nimport { v4 as uuidv4 } from 'uuid';\nimport { RequestLog } from './logger.types';\nimport { AsyncLocalStorage } from 'async_hooks';\nimport {\n  utilities as nestWinstonModuleUtilities,\n} from 'nest-winston';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n@Injectable()\nexport class LoggerService implements NestLoggerService {\n  private logger: winston.Logger;\n  private context?: string;\n  private static traceIdStorage = new AsyncLocalStorage();\n\n  private get traceId(): string | undefined {\n    return LoggerService.traceIdStorage.getStore();\n  }\n\n  constructor() {\n    this.initializeLogger();\n  }\n\n  private initializeLogger() {\n    const environment = process.env.NODE_ENV || 'development';\n    const isProduction = environment === 'production';\n\n    // const formatters = {\n    //   level: (label: string) => {\n    //     return { level: label };\n    //   },\n    //   timestamp: () => {\n    //     return { timestamp: new Date().toISOString() };\n    //   },\n    //   context: () => {\n    //     return this.context ? { context: this.context } : {};\n    //   },\n    //   traceId: () => {\n    //     return this.traceId ? { traceId: this.traceId } : {};\n    //   },\n    // };\n\n    const developmentFormat = winston.format.combine(\n      winston.format.timestamp({format: 'YYYY-MM-DD HH:mm:ss'}),\n      nestWinstonModuleUtilities.format.nestLike('Nest', {\n        colors: true,\n        prettyPrint: true,\n      }),\n      winston.format((info) => {\n        info.context = this.context;\n        info.traceId = this.traceId;\n        return info;\n      })(),\n      winston.format.printf((props) => {\n        const { timestamp, level, message, context, traceId } = props;\n        // Different colors for different components\n        const timestampFormatted = `\\x1b[90m${timestamp}\\x1b[0m`; // Gray\n        const levelFormatted = this.colorizeLevel(level);\n        const contextFormatted = context ? `\\x1b[33m[${context}]\\x1b[0m` : ''; // Yellow\n        const traceFormatted = traceId ? `\\x1b[36m[${traceId}]\\x1b[0m` : ''; // Cyan\n        return `${timestampFormatted} ${levelFormatted} ${contextFormatted} ${traceFormatted} ${message}`;\n      }),\n    );\n\n    const productionFormat = winston.format.combine(\n      winston.format.timestamp({format: 'YYYY-MM-DD HH:mm:ss'}),\n      winston.format.ms(),\n      winston.format((info) => {\n        info.context = this.context;\n        info.traceId = this.traceId;\n        return info;\n      })(),\n      winston.format.json(),\n    );\n\n    \n    // Create transports array\n    const transports: winston.transport[] = [new winston.transports.Console()];\n\n    // Only add file transport if we can create the log directory\n    try {\n      const logFilePath = process.env.LOG_FILE_PATH || './logs/nestjs-%DATE%.log';\n      const logDir = path.dirname(logFilePath);\n      \n      // Ensure log directory exists\n      if (!fs.existsSync(logDir)) {\n        fs.mkdirSync(logDir, { recursive: true });\n      }\n\n      // Test write permissions\n      const testFile = path.join(logDir, 'test-write.tmp');\n      fs.writeFileSync(testFile, 'test');\n      fs.unlinkSync(testFile);\n\n      // If we reach here, we have write permissions\n      // const rotateFileTransport = new winston.transports.DailyRotateFile({\n      const transport: DailyRotateFile = new DailyRotateFile({\n        filename: logFilePath,\n        datePattern: process.env.LOG_FILE_ROTATE_FREQUENCY || 'YYYY-MM-DD',\n        maxSize: process.env.LOG_FILE_MAX_SIZE || '20m',\n        maxFiles: process.env.LOG_FILE_MAX_TIME || '14d',\n        zippedArchive: true,\n        format: winston.format.json(),\n        handleExceptions: false,\n        handleRejections: false,\n      });\n\n      // Add error handling for the file transport\n      // rotateFileTransport.on('error', (error) => {\n      transport.on('error', (error) => {\n        console.error('Winston file transport error:', error);\n      });\n\n      // transports.push(rotateFileTransport);\n      transports.push(transport);\n      \n    } catch (error) {\n      console.warn('Could not initialize file logging, using console only:', error);\n    }\n\n    this.logger = winston.createLogger({\n      level: isProduction ? 'info' : 'debug',\n      format: isProduction ? productionFormat : developmentFormat,\n      transports,\n      exitOnError: false,\n    });\n\n    // Add global error handling\n    this.logger.on('error', (error) => {\n      console.error('Winston logger error:', error);\n    });\n  }\n\n  private colorizeLevel(level: string): string {\n    switch (level) {\n      case 'error':\n        return `\\x1b[31m${level}\\x1b[0m`; // Red\n      case 'warn':\n        return `\\x1b[33m${level}\\x1b[0m`; // Yellow\n      case 'info':\n        return `\\x1b[32m${level}\\x1b[0m`; // Green\n      case 'debug':\n        return `\\x1b[95m${level}\\x1b[0m`; // pink\n      case 'verbose':\n        return `\\x1b[35m${level}\\x1b[0m`; // Magenta\n      default:\n        return `\\x1b[29m${level}\\x1b[0m`; // black gray\n    }\n  }\n\n  setContext(context: string) {\n    this.context = context;\n  }\n\n  setTraceId(traceId?: string) {\n    const newTraceId = traceId || uuidv4();\n    LoggerService.traceIdStorage.enterWith(newTraceId);\n  }\n\n  log(message: any, context?: string) {\n    if (context) this.setContext(context);\n    this.logger.info(message);\n  }\n\n  info(message: any, context?: string) {\n    if (context) this.setContext(context);\n    this.logger.info(message);\n  }\n\n  error(message: any, trace?: string, context?: string) {\n    if (context) this.setContext(context);\n    this.logger.error(message, { trace });\n  }\n\n  warn(message: any, context?: string) {\n    if (context) this.setContext(context);\n    this.logger.warn(message);\n  }\n\n  debug(message: any, context?: string) {\n    if (context) this.setContext(context);\n    this.logger.debug(message);\n  }\n\n  verbose(message: any, context?: string) {\n    if (context) this.setContext(context);\n    this.logger.verbose(message);\n  }\n\n  logRequest(requestLog: RequestLog) {\n    if (process.env.NODE_ENV === 'development') {\n      const { traceId, method, url, duration, statusCode, timestamp, path } = requestLog;\n      \n    //   ${colors.dim('└──')} Trace ID: ${traceId}\n    //   ${colors.dim('└──')} Method: ${colors.bgBlue(method)}\n    //   ${colors.dim('└──')} URL: ${colors.blue(url)}\n    //   ${colors.dim('└──')} Path: ${path}\n    //   ${colors.dim('└──')} Status: ${statusCode}\n    //   ${colors.dim('└──')} Duration: ${colors.bgGreen(duration.toString() + 'ms')}`;\n\n      let logMessage = `\n    🔍 API Request Details:\n\n        ${('└──')} Trace ID: ${traceId}\n        ${('└──')} Method: \\x1b[44m${method}\\x1b[0m\n        ${('└──')} URL: \\x1b[34m${url}\\x1b[0m\n        ${('└──')} Path: ${path}\n        ${('└──')} Status: ${statusCode}\n        ${('└──')} Duration: \\x1b[42m${duration.toString() + 'ms'}\\x1b[0m`;\n\n      // if (Object.keys(body || {}).length > 0) {\n      //   logMessage += `\\n${colors.dim('└──')} Body: ${JSON.stringify(body, null, 2)}`;\n      // }\n\n      // if (Object.keys(query || {}).length > 0) {\n      //   logMessage += `\\n${colors.dim('└──')} Query: ${JSON.stringify(query, null, 2)}`;\n      // }\n\n      // if (Object.keys(params || {}).length > 0) {\n      //   logMessage += `\\n${colors.dim('└──')} Params: ${JSON.stringify(params, null, 2)}`;\n      // }\n\n      logMessage += `\\n${('└──')}Timestamp: ${timestamp}`;\n    //   logMessage += `\\n${colors.dim('└──')}Timestamp: ${timestamp}`;\n\n      this.logger.info(logMessage);\n    } else {\n      this.logger.info('API Request', { ...requestLog });\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestLog.html":{"url":"interfaces/RequestLog.html","title":"interface - RequestLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/loggerModule/logger.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            query\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            traceId\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        traceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        traceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoggerConfig {\n    level: string;\n    environment: string;\n  }\n  \n  export interface RequestLog {\n    traceId: string;\n    method: string;\n    url: string;\n    duration: number;\n    statusCode: number;\n    body?: any;\n    query?: any;\n    params?: any;\n    headers?: any;\n    timestamp: string;\n    path: string;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseInterceptor.html":{"url":"injectables/ResponseInterceptor.html","title":"injectable - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/loggerModule/logger.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/loggerModule/logger.interceptor.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(ResponseInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/utils/loggerModule/logger.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable, tap } from 'rxjs';\n@Injectable()\nexport class ResponseInterceptor implements NestInterceptor {\n  private logger: Logger = new Logger(ResponseInterceptor.name);\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const { statusCode } = context.switchToHttp().getResponse();\n    return next.handle().pipe(tap((data) => {\n      this.logger.log(`Status[${statusCode}] ResponseBody-Type[${typeof(data)}]`);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n                File\n            \n            \n                src/modules/auth/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/roles.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/roles.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { ROLES_KEY } from './decorators/roles.decorator';\nimport { Role } from '../../models/enums/roles.enum'\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if ((!requiredRoles) || requiredRoles.length == 0 ) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/dtos/signIn.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Password of the user', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/signIn.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User Name', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/signIn.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsNumber,\n  IsNotEmpty,\n  IsString,\n  IsDate,\n} from 'class-validator';\nimport { PartialType } from \"@nestjs/mapped-types\";\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Role } from '../../../../models/enums/roles.enum';\n\nexport class SignInDto {\n  @ApiProperty({ description: 'User Name', required:true })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n  @ApiProperty({ description: 'Password of the user', required:true })\n  @IsString()\n  @IsNotEmpty()\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Skill.html":{"url":"classes/Skill.html","title":"class - Skill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Skill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/skill/models/schemas/SkillSchema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                Description\n                            \n                            \n                                    \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/skill/models/schemas/SkillSchema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, isRequired: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/skill/models/schemas/SkillSchema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, SchemaTypes } from 'mongoose';\nimport type { HydratedDocument } from 'mongoose';\nexport type SkillDocument = HydratedDocument;\n\n@Schema()\nexport class Skill extends Document {\n  @Prop({ type: String, isRequired: true, unique:true })\n  Name: string;\n  @Prop({ type: String })\n  Description: string;\n};\n\nexport const SkillSchema = SchemaFactory.createForClass(Skill);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SkillController.html":{"url":"controllers/SkillController.html","title":"controller - SkillController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  SkillController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/skill/skill.controller.ts\n        \n            \n                Prefix\n            \n            \n                Skill\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createSkill\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteSkill\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAllSkills\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSkill(response, createSkillDto: CreateSkillDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('createSkill')@Roles(Role.Admin)@ApiOperation({summary: 'Add Skill in the database'})@ApiResponse({status: 200, description: 'Skill added successfully', type: CreateSkillDto})@ApiResponse({status: 400, description: 'Failed to add the skill'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/skill/skill.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createSkillDto\n                                            \n                                                            CreateSkillDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSkill(response, skill: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':skill')@Roles(Role.Admin)@ApiOperation({summary: 'Delete specified Skill record'})@ApiResponse({status: 200, description: 'Skill data deleted successfully'})@ApiResponse({status: 400, description: 'Skill not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/skill/skill.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                skill\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getAllSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllSkills(response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all Skill data'})@ApiResponse({status: 200, description: 'Skills fetched successfully'})@ApiResponse({status: 400, description: 'Skills not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/skill/skill.controller.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSkill(response, updateSkillDto: UpdateSkillDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('updateSkill')@Roles(Role.Admin)@ApiOperation({summary: 'Update specified Skill record'})@ApiResponse({status: 200, description: 'Skill data updated successfully'})@ApiResponse({status: 400, description: 'Skill not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/skill/skill.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSkillDto\n                                            \n                                                            UpdateSkillDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Logger, HttpStatus, Param, Delete, Get, Post, Put, Res, UseGuards } from '@nestjs/common';\nimport { Roles } from '../auth/decorators/roles.decorator';\nimport { Role } from '../../models/enums/roles.enum';\nimport { ApiTags, ApiBearerAuth, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { SkillService } from './skill.service';\nimport { CreateSkillDto, UpdateSkillDto } from './models/dtos/createSkill.dto';\nimport { RolesGuard } from '../auth/roles.guard';\n\n@ApiTags('Skill')\n@ApiBearerAuth()\n@UseGuards(RolesGuard)\n@Controller('Skill')\nexport class SkillController {\n  private readonly logger = new Logger(SkillController.name);\n  constructor(private readonly skillService: SkillService) { }\n\n  @Post('createSkill')\n  @Roles(Role.Admin)\n  @ApiOperation({\n    summary: 'Add Skill in the database',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Skill added successfully',\n    type: CreateSkillDto,\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Failed to add the skill',\n  })\n  async createSkill(@Res() response, @Body() createSkillDto: CreateSkillDto) {\n    try {\n      const newSkill = await this.skillService.createSkill(createSkillDto);\n      // console.log(\" Returned from the service method\", newEmployee);\n      return response.status(HttpStatus.CREATED).json({\n        message: 'Skill has been added successfully',\n        newSkill});\n    } catch (err) {\n        return response.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: 400,\n        message: 'Error: Skill not Created!',\n        error: 'Bad Request'\n        });\n    }\n  }\n\n  @Put('updateSkill')\n  @Roles(Role.Admin)\n  @ApiOperation({\n    summary: 'Update specified Skill record',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Skill data updated successfully',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Skill not found',\n  })\n  async updateSkill(@Res() response, @Body() updateSkillDto: UpdateSkillDto){\n    try {\n      const updatedSkill = await this.skillService.updateSkill(updateSkillDto);\n      return response.status(HttpStatus.OK).json({\n      message: 'Skill updated successfully',\n      updatedSkill});\n    }catch (err) {\n      return response.status(err).json(err);\n    }\n  }\n\n  @Delete(':skill')\n  @Roles(Role.Admin)\n  @ApiOperation({\n    summary: 'Delete specified Skill record',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Skill data deleted successfully',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Skill not found',\n  })\n  async deleteSkill(@Res() response, @Param('Skill') skill: string){\n    try {\n      const deletedSkill = await this.skillService.deleteSkill(skill);\n      return response.status(HttpStatus.OK).json({\n      message: 'Skill deleted successfully',\n      deletedSkill,});\n    }catch (err) {\n      return response.status(err).json(err);\n    }\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Get all Skill data',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Skills fetched successfully',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Skills not found',\n  })\n  async getAllSkills(@Res() response) {\n    try {\n      const skillData = await this.skillService.getAllSkills();\n      return response.status(HttpStatus.OK).json({\n      message: 'All Employees data found successfully',skillData});\n    } catch (err) {\n      return response.status(err).json(err);\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SkillModule.html":{"url":"modules/SkillModule.html","title":"module - SkillModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    SkillModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SkillModule\n\n\n\ncluster_SkillModule_providers\n\n\n\ncluster_SkillModule_exports\n\n\n\n\nSkillService \n\nSkillService \n\n\n\nSkillModule\n\nSkillModule\n\nSkillService  -->\n\nSkillModule->SkillService \n\n\n\n\n\nSkillService\n\nSkillService\n\nSkillModule -->\n\nSkillService->SkillModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/skill/skill.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SkillService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SkillController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SkillService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Skill } from './models/schemas/SkillSchema';\nimport { SkillController } from './skill.controller';\nimport { SkillService } from './skill.service';\nimport { SkillSchema } from './models/schemas/SkillSchema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Skill.name, schema: SkillSchema },\n    ]),\n  ],\n  controllers: [SkillController],\n  providers: [SkillService],\n  exports: [SkillService],\n})\nexport class SkillModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SkillSelectionDto.html":{"url":"classes/SkillSelectionDto.html","title":"class - SkillSelectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SkillSelectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/dtos/skill-selection.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                empSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        empSkill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employee/models/dtos/skill-selection.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform, Type } from 'class-transformer';\nimport {\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\n\nexport class SkillSelectionDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  empSkill: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SkillService.html":{"url":"injectables/SkillService.html","title":"injectable - SkillService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  SkillService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/skill/skill.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSkill\n                            \n                            \n                                    Async\n                                deleteSkill\n                            \n                            \n                                    Async\n                                getAllSkills\n                            \n                            \n                                    Async\n                                updateSkill\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(skillModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/skill/skill.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        skillModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSkill(createSkillDto: CreateSkillDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/skill/skill.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSkillDto\n                                            \n                                                            CreateSkillDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSkill(skill: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/skill/skill.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                skill\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllSkills()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/skill/skill.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSkill(updateSkillDto: UpdateSkillDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/skill/skill.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSkillDto\n                                            \n                                                            UpdateSkillDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SkillService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/skill/skill.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger,PipeTransform, NotFoundException, InternalServerErrorException, BadRequestException, ConflictException, Get } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Skill } from './models/schemas/SkillSchema';\nimport { CreateSkillDto, UpdateSkillDto } from './models/dtos/createSkill.dto';\n@Injectable()\nexport class SkillService {\n  private readonly logger = new Logger(SkillService.name);\n  constructor(@InjectModel('Skill') private skillModel:Model){ }\n   \n  // Create the skill in mongo db.\n  async createSkill(createSkillDto: CreateSkillDto): Promise {\n    const skillName = createSkillDto.name;\n    const existingSkill = await this.skillModel.findOne({ Name: skillName }).exec();\n    this.logger.debug(\"createSkill: Skill Data:\", existingSkill);\n    // Return null if skill already exists\n    if (existingSkill) {\n      this.logger.error(\"createSkill: Skill already exists\");\n      return null;\n    }\n    const newSkill = new this.skillModel(createSkillDto);\n    this.logger.debug(\"createSkill: Added Skill Data:\", newSkill);\n    return newSkill.save();\n  }\n\n  // Update the Skill in db.\n   async updateSkill(updateSkillDto: UpdateSkillDto): Promise {\n     const skillName = updateSkillDto.name;\n     const filter = {name: skillName};\n     const existingSkill = await this.skillModel.findOneAndUpdate(filter, updateSkillDto, { new: true }).exec();\n     if (!existingSkill) {\n       this.logger.error(`updateSkill: Skill #${skillName} not found`);\n       return null;\n     }\n     return existingSkill;\n  }\n  \n  // Delete the specific skill from collection.\n  async deleteSkill(skill: string): Promise {\n    const filter = {Name: skill};\n    const deletedSkill = await this.skillModel.findOneAndDelete(filter).exec();\n    if (!deletedSkill) {\n      this.logger.error(`deleteSkill: Skill #${skill} not found`);\n      return null;\n    } \n    return deletedSkill;\n  }\n\n  // Get all the data from the Employee collection.\n    async getAllSkills(): Promise {\n      const skillData = await this.skillModel.find().exec();\n      if (!skillData || skillData.length == 0) {\n        this.logger.error('getAllEmployees: Employees data not found!');\n      }\n      return skillData;\n    }\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            documentation/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeDto.html":{"url":"classes/UpdateEmployeeDto.html","title":"class - UpdateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employee/models/dtos/createEmployee.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateEmployeeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { constants } from \"crypto\";\nimport { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsNumber,\n  IsNotEmpty,\n  IsString,\n  IsDate,\n} from 'class-validator';\nimport { PartialType } from \"@nestjs/mapped-types\";\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Role } from '../../../../models/enums/roles.enum';\n\nexport class CreateEmployeeDto {\n  @ApiProperty({ description: 'Employee Name' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n  @ApiPropertyOptional({ description: 'Designation of the employee' })\n  @IsString()\n  position:string;\n  @ApiPropertyOptional({ description: 'Email Address of the employee' })\n  @IsString()\n  email:string;\n  @ApiPropertyOptional({ description: 'Array of Skills of the employee' })\n  @IsArray()\n  skillIds:[string];\n  @ApiPropertyOptional({ description: 'Hiredate of the employee' })\n  @IsDate()\n  hireDate:Date;\n  @ApiPropertyOptional({ description: 'Password of the employee' })\n  @IsString()\n  password:string\n  @ApiPropertyOptional({ description: 'Performance score of the employee' })\n  @IsNumber()\n  engagementScore:number;\n  @ApiPropertyOptional({ description: 'Roles of the employee' })\n  @IsArray()\n  roles:Role[];\n}\n\nexport class UpdateEmployeeDto extends PartialType(CreateEmployeeDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSkillDto.html":{"url":"classes/UpdateSkillDto.html","title":"class - UpdateSkillDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSkillDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/skill/models/dtos/createSkill.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSkillDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PartialType } from \"@nestjs/mapped-types\";\nimport {\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\n\nexport class CreateSkillDto {\n  @ApiProperty({ description: 'Skill Name' })\n  @IsString()\n  @IsNotEmpty()\n  name:string;\n  @ApiPropertyOptional({ description: 'Skill description' })\n  @IsString()\n  description:string;\n}\nexport class UpdateSkillDto extends PartialType(CreateSkillDto) {}\n \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            function\n            decrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            function\n            getKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/modules/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/modules/auth/auth.service.ts\n            \n            class\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/modules/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/auth/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/auth/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/employee/employee.controller.ts\n            \n            controller\n            EmployeeController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/modules/employee/employee.service.ts\n            \n            injectable\n            EmployeeService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/modules/employee/employee.service.ts\n            \n            type alias\n            WrapperType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/employee/employeeAnalytics.service.ts\n            \n            injectable\n            EmployeeAnalyticsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/modules/employee/employeeAnalytics.service.ts\n            \n            type alias\n            WrapperType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/dtos/addSkillToEmployee.dto.ts\n            \n            class\n            AddSkillsEmployeeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/dtos/createEmployee.dto.ts\n            \n            class\n            CreateEmployeeDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/dtos/createEmployee.dto.ts\n            \n            class\n            UpdateEmployeeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts\n            \n            class\n            GetMatchedEmployeeAllSkillsResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts\n            \n            class\n            GetMatchedEmployeeSkillsResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/dtos/get-matched-employee-skills-response.dto.ts\n            \n            class\n            GetMatchedEmployeeSkillsResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/dtos/signIn.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/dtos/skill-selection.dto.ts\n            \n            class\n            SkillSelectionDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/interfaces/Employee.ts\n            \n            interface\n            IEmployee\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/schemas/EmployeeSchema.ts\n            \n            class\n            Employee\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/schemas/EmployeeSchema.ts\n            \n            variable\n            EmployeeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/employee/models/schemas/EmployeeSchema.ts\n            \n            type alias\n            EmployeeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/skill/models/dtos/createSkill.dto.ts\n            \n            class\n            CreateSkillDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/skill/models/dtos/createSkill.dto.ts\n            \n            class\n            UpdateSkillDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/skill/models/interfaces/Skill.ts\n            \n            interface\n            ISkill\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/skill/models/schemas/SkillSchema.ts\n            \n            class\n            Skill\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/skill/models/schemas/SkillSchema.ts\n            \n            variable\n            SkillSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/skill/models/schemas/SkillSchema.ts\n            \n            type alias\n            SkillDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/skill/skill.controller.ts\n            \n            controller\n            SkillController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/modules/skill/skill.service.ts\n            \n            injectable\n            SkillService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/repl.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/env.validator.ts\n            \n            function\n            validateEnvVariables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/env.validator.ts\n            \n            variable\n            requiredEnvVars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/loggerModule/logger.interceptor.ts\n            \n            injectable\n            ResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/utils/loggerModule/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/utils/loggerModule/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/utils/loggerModule/logger.types.ts\n            \n            interface\n            LoggerConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/utils/loggerModule/logger.types.ts\n            \n            interface\n            RequestLog\n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^4.0.1\n        \n            @nestjs/common : ^11.1.6\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.1.6\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/terminus : ^11.0.0\n        \n            @nestjs/testing : ^11.1.6\n        \n            @nestjs/throttler : ^6.4.0\n        \n            axios : ^1.12.2\n        \n            bcryptjs : ^3.0.2\n        \n            body-parser : ^2.2.0\n        \n            config : ^4.1.1\n        \n            dotenv : ^17.2.1\n        \n            expect : ^30.1.2\n        \n            express : ^5.1.0\n        \n            jsonwebtoken : ^9.0.2\n        \n            mongoose : ^8.18.0\n        \n            nest-winston : ^1.10.2\n        \n            node-fetch : ^3.3.2\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            testing : ^3.1.0\n        \n            winston : ^3.17.0\n        \n            winston-daily-rotate-file : ^5.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/enums/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../repl.ts)\n                        \n                        \n                            decrypt   (src/.../app.module.ts)\n                        \n                        \n                            getKey   (src/.../app.module.ts)\n                        \n                        \n                            validateEnvVariables   (src/.../env.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decrypt\n                        \n                    \n                \n            \n            \n                \ndecrypt(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getKey\n                        \n                    \n                \n            \n            \n                \ngetKey(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Buffer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/env.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateEnvVariables\n                        \n                    \n                \n            \n            \n                \nvalidateEnvVariables()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nThis is the code base for the Application to provide framework for authenticion, authorization, controllers and services for different API end points to store/access data from Mongo DB. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeAnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SkillModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_EmployeeAnalyticsModule\n\n\n\ncluster_EmployeeAnalyticsModule_providers\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_exports\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_SkillModule\n\n\n\ncluster_SkillModule_exports\n\n\n\ncluster_SkillModule_providers\n\n\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmployeeAnalyticsModule\n\nEmployeeAnalyticsModule\n\nAppModule -->\n\nEmployeeAnalyticsModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAuthModule -->\n\nEmployeeModule->AuthModule\n\n\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nEmployeeAnalyticsService \n\nEmployeeAnalyticsService \n\nEmployeeAnalyticsService  -->\n\nEmployeeModule->EmployeeAnalyticsService \n\n\n\n\n\nEmployeeService \n\nEmployeeService \n\nEmployeeService  -->\n\nEmployeeModule->EmployeeService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nSkillModule\n\nSkillModule\n\nAppModule -->\n\nSkillModule->AppModule\n\n\n\n\n\nSkillService \n\nSkillService \n\nSkillService  -->\n\nSkillModule->SkillService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nEmployeeAnalyticsService\n\nEmployeeAnalyticsService\n\nEmployeeAnalyticsModule -->\n\nEmployeeAnalyticsService->EmployeeAnalyticsModule\n\n\n\nEmployeeModule -->\n\nEmployeeAnalyticsService->EmployeeModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeAnalyticsModule -->\n\nEmployeeService->EmployeeAnalyticsModule\n\n\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\nLoggerService \n\nLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nSkillService\n\nSkillService\n\nSkillModule -->\n\nSkillService->SkillModule\n\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Keywords : \n        \n            License : Unlicensed\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EmployeeDocument   (src/.../EmployeeSchema.ts)\n                        \n                        \n                            SkillDocument   (src/.../SkillSchema.ts)\n                        \n                        \n                            WrapperType   (src/.../employee.service.ts)\n                        \n                        \n                            WrapperType   (src/.../employeeAnalytics.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/employee/models/schemas/EmployeeSchema.ts\n    \n    \n        \n            \n                \n                    \n                    EmployeeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/modules/skill/models/schemas/SkillSchema.ts\n    \n    \n        \n            \n                \n                    \n                    SkillDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/modules/employee/employee.service.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n    src/modules/employee/employeeAnalytics.service.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EmployeeSchema   (src/.../EmployeeSchema.ts)\n                        \n                        \n                            Handlebars   (documentation/.../hbs-render.service.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            JSZip   (documentation/.../zip-export.service.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            monaco   (documentation/.../template-editor.service.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            requiredEnvVars   (src/.../env.validator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            SkillSchema   (src/.../SkillSchema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/employee/models/schemas/EmployeeSchema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Employee)\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/modules/auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/modules/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'DO NOT USE THIS VALUE. INSTEAD, CREATE A COMPLEX SECRET AND KEEP IT SAFE OUTSIDE OF THE SOURCE CODE.',\n}\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/utils/env.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        requiredEnvVars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'PORT',\n    'JWT_SECRET',\n    'NODE_ENV',\n    'DB_HOST',\n    'DB_USER',\n    'DB_PASS'\n]\n                    \n                \n\n\n        \n    \n\n    src/modules/auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/modules/skill/models/schemas/SkillSchema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SkillSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Skill)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
